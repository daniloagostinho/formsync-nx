{"ast":null,"code":"import { HttpClient } from '@angular/common/http';\nimport { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ContatoService {\n  http;\n  apiUrl = `${environment.apiUrl}/contato`;\n  constructor(http) {\n    this.http = http;\n  }\n  enviarMensagem(contato) {\n    return this.http.post(this.apiUrl, contato);\n  }\n  static ɵfac = function ContatoService_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || ContatoService)(i0.ɵɵinject(i1.HttpClient));\n  };\n  static ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ContatoService,\n    factory: ContatoService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpClient","environment","ContatoService","http","apiUrl","constructor","enviarMensagem","contato","post","i0","ɵɵinject","i1","factory","ɵfac","providedIn"],"sources":["/home/danilo/Área de trabalho/formsync-nx/apps/front/src/app/services/contato.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\n\nexport interface ContatoRequest {\n    nome: string;\n    email: string;\n    assunto: string;\n    mensagem: string;\n}\n\nexport interface ContatoResponse {\n    status: string;\n    message: string;\n}\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class ContatoService {\n    private apiUrl = `${environment.apiUrl}/contato`;\n\n    constructor(private http: HttpClient) { }\n\n    enviarMensagem(contato: ContatoRequest): Observable<ContatoResponse> {\n        return this.http.post<ContatoResponse>(this.apiUrl, contato);\n    }\n}\n"],"mappings":"AACA,SAASA,UAAU,QAAQ,sBAAsB;AAEjD,SAASC,WAAW,QAAQ,gCAAgC;;;AAiB5D,OAAM,MAAOC,cAAc;EAGHC,IAAA;EAFZC,MAAM,GAAG,GAAGH,WAAW,CAACG,MAAM,UAAU;EAEhDC,YAAoBF,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;EAAgB;EAExCG,cAAcA,CAACC,OAAuB;IAClC,OAAO,IAAI,CAACJ,IAAI,CAACK,IAAI,CAAkB,IAAI,CAACJ,MAAM,EAAEG,OAAO,CAAC;EAChE;;qCAPSL,cAAc,EAAAO,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAX,UAAA;EAAA;;WAAdE,cAAc;IAAAU,OAAA,EAAdV,cAAc,CAAAW,IAAA;IAAAC,UAAA,EAFX;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}