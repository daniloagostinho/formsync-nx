{"ast":null,"code":"import { tap, catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\nexport function debugInterceptor(req, next) {\n  // Log todas as requisi√ß√µes HTTP\n  console.log('üåê [HTTP_INTERCEPTOR] Requisi√ß√£o HTTP detectada:');\n  console.log('   - Method:', req.method);\n  console.log('   - URL:', req.url);\n  console.log('   - Headers:', req.headers.keys().map(key => `${key}: ${req.headers.get(key)}`));\n  // Detectar chamadas para api.stripe.com\n  if (req.url.includes('api.stripe.com')) {\n    console.log('üö® [HTTP_INTERCEPTOR] CHAMADA PARA STRIPE API DETECTADA!');\n    console.log('   - URL completa:', req.url);\n    console.log('   - M√©todo:', req.method);\n    console.log('   - Body:', req.body);\n    console.log('   - Authorization header:', req.headers.get('Authorization'));\n  }\n  return next(req).pipe(tap(event => {\n    if (req.url.includes('api.stripe.com')) {\n      console.log('‚úÖ [HTTP_INTERCEPTOR] Resposta da Stripe API:', event);\n    }\n  }), catchError(error => {\n    if (req.url.includes('api.stripe.com')) {\n      console.error('‚ùå [HTTP_INTERCEPTOR] Erro na Stripe API:', error);\n      console.error('   - Status:', error.status);\n      console.error('   - Message:', error.message);\n      console.error('   - Error details:', error.error);\n    }\n    return throwError(() => error);\n  }));\n}","map":{"version":3,"names":["tap","catchError","throwError","debugInterceptor","req","next","console","log","method","url","headers","keys","map","key","get","includes","body","pipe","event","error","status","message"],"sources":["/home/danilo/√Årea de trabalho/formsync-nx/apps/front/src/app/interceptors/debug.interceptor.ts"],"sourcesContent":["import { HttpRequest, HttpEvent, HttpHandlerFn } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { tap, catchError } from 'rxjs/operators';\nimport { throwError } from 'rxjs';\n\nexport function debugInterceptor(req: HttpRequest<unknown>, next: HttpHandlerFn): Observable<HttpEvent<unknown>> {\n  // Log todas as requisi√ß√µes HTTP\n  console.log('üåê [HTTP_INTERCEPTOR] Requisi√ß√£o HTTP detectada:');\n  console.log('   - Method:', req.method);\n  console.log('   - URL:', req.url);\n  console.log('   - Headers:', req.headers.keys().map(key => `${key}: ${req.headers.get(key)}`));\n  \n  // Detectar chamadas para api.stripe.com\n  if (req.url.includes('api.stripe.com')) {\n    console.log('üö® [HTTP_INTERCEPTOR] CHAMADA PARA STRIPE API DETECTADA!');\n    console.log('   - URL completa:', req.url);\n    console.log('   - M√©todo:', req.method);\n    console.log('   - Body:', req.body);\n    console.log('   - Authorization header:', req.headers.get('Authorization'));\n  }\n\n  return next(req).pipe(\n    tap(event => {\n      if (req.url.includes('api.stripe.com')) {\n        console.log('‚úÖ [HTTP_INTERCEPTOR] Resposta da Stripe API:', event);\n      }\n    }),\n    catchError(error => {\n      if (req.url.includes('api.stripe.com')) {\n        console.error('‚ùå [HTTP_INTERCEPTOR] Erro na Stripe API:', error);\n        console.error('   - Status:', error.status);\n        console.error('   - Message:', error.message);\n        console.error('   - Error details:', error.error);\n      }\n      return throwError(() => error);\n    })\n  );\n}\n"],"mappings":"AAEA,SAASA,GAAG,EAAEC,UAAU,QAAQ,gBAAgB;AAChD,SAASC,UAAU,QAAQ,MAAM;AAEjC,OAAM,SAAUC,gBAAgBA,CAACC,GAAyB,EAAEC,IAAmB;EAC7E;EACAC,OAAO,CAACC,GAAG,CAAC,kDAAkD,CAAC;EAC/DD,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEH,GAAG,CAACI,MAAM,CAAC;EACvCF,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEH,GAAG,CAACK,GAAG,CAAC;EACjCH,OAAO,CAACC,GAAG,CAAC,eAAe,EAAEH,GAAG,CAACM,OAAO,CAACC,IAAI,EAAE,CAACC,GAAG,CAACC,GAAG,IAAI,GAAGA,GAAG,KAAKT,GAAG,CAACM,OAAO,CAACI,GAAG,CAACD,GAAG,CAAC,EAAE,CAAC,CAAC;EAE9F;EACA,IAAIT,GAAG,CAACK,GAAG,CAACM,QAAQ,CAAC,gBAAgB,CAAC,EAAE;IACtCT,OAAO,CAACC,GAAG,CAAC,0DAA0D,CAAC;IACvED,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEH,GAAG,CAACK,GAAG,CAAC;IAC1CH,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEH,GAAG,CAACI,MAAM,CAAC;IACvCF,OAAO,CAACC,GAAG,CAAC,YAAY,EAAEH,GAAG,CAACY,IAAI,CAAC;IACnCV,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAEH,GAAG,CAACM,OAAO,CAACI,GAAG,CAAC,eAAe,CAAC,CAAC;EAC7E;EAEA,OAAOT,IAAI,CAACD,GAAG,CAAC,CAACa,IAAI,CACnBjB,GAAG,CAACkB,KAAK,IAAG;IACV,IAAId,GAAG,CAACK,GAAG,CAACM,QAAQ,CAAC,gBAAgB,CAAC,EAAE;MACtCT,OAAO,CAACC,GAAG,CAAC,8CAA8C,EAAEW,KAAK,CAAC;IACpE;EACF,CAAC,CAAC,EACFjB,UAAU,CAACkB,KAAK,IAAG;IACjB,IAAIf,GAAG,CAACK,GAAG,CAACM,QAAQ,CAAC,gBAAgB,CAAC,EAAE;MACtCT,OAAO,CAACa,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;MAChEb,OAAO,CAACa,KAAK,CAAC,cAAc,EAAEA,KAAK,CAACC,MAAM,CAAC;MAC3Cd,OAAO,CAACa,KAAK,CAAC,eAAe,EAAEA,KAAK,CAACE,OAAO,CAAC;MAC7Cf,OAAO,CAACa,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAACA,KAAK,CAAC;IACnD;IACA,OAAOjB,UAAU,CAAC,MAAMiB,KAAK,CAAC;EAChC,CAAC,CAAC,CACH;AACH","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}