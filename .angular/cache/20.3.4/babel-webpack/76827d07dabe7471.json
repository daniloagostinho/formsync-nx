{"ast":null,"code":"import { ActivatedRoute, Router } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule, FormBuilder, Validators } from '@angular/forms';\nimport { UsuarioService } from '../../services/usuario.service';\nimport { CheckoutService } from '../../services/checkout.service';\nimport { ErrorHandlerService } from '../../services/error-handler.service';\nimport { environment } from '../../../environments/environment';\nimport { FooterComponent } from '../footer/footer.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/usuario.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../../services/checkout.service\";\nimport * as i5 from \"../../services/error-handler.service\";\nimport * as i6 from \"@angular/common\";\nfunction TrelloRegisterComponent_span_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"100% de funcionamento garantido em sites de RH como LinkedIn, Indeed, Catho e mais.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TrelloRegisterComponent_span_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Automa\\u00E7\\u00E3o completa para CRMs e plataformas de vendas como Salesforce, HubSpot, Pipedrive.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TrelloRegisterComponent_span_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Preenchimento perfeito em marketplaces como Mercado Livre, Amazon, Shopify.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TrelloRegisterComponent_span_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"At\\u00E9 10 templates, extens\\u00E3o b\\u00E1sica.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TrelloRegisterComponent_span_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"At\\u00E9 100 templates, backup/sync opcional.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TrelloRegisterComponent_span_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"At\\u00E9 500 templates, compartilhamento e relat\\u00F3rios.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TrelloRegisterComponent_span_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Plano sob demanda para empresas, recursos avan\\u00E7ados.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TrelloRegisterComponent_div_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 35)(1, \"div\", 36);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(2, \"svg\", 37);\n    i0.ɵɵelement(3, \"path\", 38);\n    i0.ɵɵelementEnd();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(4, \"span\", 39);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r0.mensagemErro);\n  }\n}\nfunction TrelloRegisterComponent_div_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 40)(1, \"div\", 36);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(2, \"svg\", 41);\n    i0.ɵɵelement(3, \"path\", 42);\n    i0.ɵɵelementEnd();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(4, \"span\", 43);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r0.mensagemSucesso);\n  }\n}\nfunction TrelloRegisterComponent_div_51_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Nome \\u00E9 obrigat\\u00F3rio\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TrelloRegisterComponent_div_51_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Nome deve ter pelo menos 2 caracteres\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TrelloRegisterComponent_div_51_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Nome deve ter no m\\u00E1ximo 100 caracteres\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TrelloRegisterComponent_div_51_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Nome cont\\u00E9m caracteres inv\\u00E1lidos\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TrelloRegisterComponent_div_51_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Nome n\\u00E3o pode come\\u00E7ar ou terminar com espa\\u00E7os\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TrelloRegisterComponent_div_51_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 44);\n    i0.ɵɵtemplate(1, TrelloRegisterComponent_div_51_span_1_Template, 2, 0, \"span\", 12)(2, TrelloRegisterComponent_div_51_span_2_Template, 2, 0, \"span\", 12)(3, TrelloRegisterComponent_div_51_span_3_Template, 2, 0, \"span\", 12)(4, TrelloRegisterComponent_div_51_span_4_Template, 2, 0, \"span\", 12)(5, TrelloRegisterComponent_div_51_span_5_Template, 2, 0, \"span\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    let tmp_1_0;\n    let tmp_2_0;\n    let tmp_3_0;\n    let tmp_4_0;\n    let tmp_5_0;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r0.registerForm.get(\"nome\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"required\"]);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx_r0.registerForm.get(\"nome\")) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors[\"minlength\"]);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", (tmp_3_0 = ctx_r0.registerForm.get(\"nome\")) == null ? null : tmp_3_0.errors == null ? null : tmp_3_0.errors[\"maxlength\"]);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", (tmp_4_0 = ctx_r0.registerForm.get(\"nome\")) == null ? null : tmp_4_0.errors == null ? null : tmp_4_0.errors[\"invalidCharacters\"]);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", (tmp_5_0 = ctx_r0.registerForm.get(\"nome\")) == null ? null : tmp_5_0.errors == null ? null : tmp_5_0.errors[\"leadingTrailingSpaces\"]);\n  }\n}\nfunction TrelloRegisterComponent_div_56_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"E-mail \\u00E9 obrigat\\u00F3rio\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TrelloRegisterComponent_div_56_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Formato de e-mail inv\\u00E1lido\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TrelloRegisterComponent_div_56_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Dom\\u00EDnio de e-mail inv\\u00E1lido\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TrelloRegisterComponent_div_56_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"N\\u00E3o \\u00E9 permitido m\\u00FAltiplos e-mails\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TrelloRegisterComponent_div_56_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"E-mail internacional n\\u00E3o suportado\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TrelloRegisterComponent_div_56_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 44);\n    i0.ɵɵtemplate(1, TrelloRegisterComponent_div_56_span_1_Template, 2, 0, \"span\", 12)(2, TrelloRegisterComponent_div_56_span_2_Template, 2, 0, \"span\", 12)(3, TrelloRegisterComponent_div_56_span_3_Template, 2, 0, \"span\", 12)(4, TrelloRegisterComponent_div_56_span_4_Template, 2, 0, \"span\", 12)(5, TrelloRegisterComponent_div_56_span_5_Template, 2, 0, \"span\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    let tmp_1_0;\n    let tmp_2_0;\n    let tmp_3_0;\n    let tmp_4_0;\n    let tmp_5_0;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r0.registerForm.get(\"email\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"required\"]);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx_r0.registerForm.get(\"email\")) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors[\"invalidFormat\"]);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", (tmp_3_0 = ctx_r0.registerForm.get(\"email\")) == null ? null : tmp_3_0.errors == null ? null : tmp_3_0.errors[\"invalidDomain\"]);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", (tmp_4_0 = ctx_r0.registerForm.get(\"email\")) == null ? null : tmp_4_0.errors == null ? null : tmp_4_0.errors[\"multipleEmails\"]);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", (tmp_5_0 = ctx_r0.registerForm.get(\"email\")) == null ? null : tmp_5_0.errors == null ? null : tmp_5_0.errors[\"internationalEmail\"]);\n  }\n}\nfunction TrelloRegisterComponent_div_61_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Senha \\u00E9 obrigat\\u00F3ria\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TrelloRegisterComponent_div_61_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Senha deve ter pelo menos 6 caracteres\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TrelloRegisterComponent_div_61_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 44);\n    i0.ɵɵtemplate(1, TrelloRegisterComponent_div_61_span_1_Template, 2, 0, \"span\", 12)(2, TrelloRegisterComponent_div_61_span_2_Template, 2, 0, \"span\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    let tmp_1_0;\n    let tmp_2_0;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r0.registerForm.get(\"senha\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"required\"]);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", (tmp_2_0 = ctx_r0.registerForm.get(\"senha\")) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors[\"minlength\"]);\n  }\n}\nfunction TrelloRegisterComponent_div_66_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"Confirma\\u00E7\\u00E3o de senha \\u00E9 obrigat\\u00F3ria\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TrelloRegisterComponent_div_66_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"As senhas n\\u00E3o coincidem\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TrelloRegisterComponent_div_66_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 44);\n    i0.ɵɵtemplate(1, TrelloRegisterComponent_div_66_span_1_Template, 2, 0, \"span\", 12)(2, TrelloRegisterComponent_div_66_span_2_Template, 2, 0, \"span\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    let tmp_1_0;\n    let tmp_2_0;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", (tmp_1_0 = ctx_r0.registerForm.get(\"confirmarSenha\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"required\"]);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", (ctx_r0.registerForm.errors == null ? null : ctx_r0.registerForm.errors[\"passwordMismatch\"]) && ((tmp_2_0 = ctx_r0.registerForm.get(\"confirmarSenha\")) == null ? null : tmp_2_0.touched));\n  }\n}\nfunction TrelloRegisterComponent_div_68_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 45);\n  }\n}\nfunction TrelloRegisterComponent__svg_svg_69_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(0, \"svg\", 46);\n    i0.ɵɵelement(1, \"path\", 47);\n    i0.ɵɵelementEnd();\n  }\n}\nexport class TrelloRegisterComponent {\n  fb;\n  usuarioService;\n  router;\n  route;\n  checkoutService;\n  errorHandler;\n  registerForm;\n  mensagemErro = '';\n  mensagemSucesso = '';\n  carregando = false;\n  plano = '';\n  planoNome = '';\n  constructor(fb, usuarioService, router, route, checkoutService, errorHandler) {\n    this.fb = fb;\n    this.usuarioService = usuarioService;\n    this.router = router;\n    this.route = route;\n    this.checkoutService = checkoutService;\n    this.errorHandler = errorHandler;\n    this.registerForm = this.fb.group({\n      nome: ['', [Validators.required, Validators.minLength(2), Validators.maxLength(100), this.nomeValidator]],\n      email: ['', [Validators.required, this.emailValidator]],\n      senha: ['', [Validators.required, Validators.minLength(6)]],\n      confirmarSenha: ['', [Validators.required]]\n    }, {\n      validators: this.passwordMatchValidator\n    });\n  }\n  ngOnInit() {\n    this.route.queryParams.subscribe(params => {\n      // Atualiza o plano sempre que o query param mudar\n      this.plano = params['plano'] || 'PESSOAL';\n      this.planoNome = this.getNomePlano(this.plano);\n    });\n  }\n  // Validador customizado para o campo nome\n  nomeValidator(control) {\n    if (!control.value) return null;\n    const nome = control.value;\n    // Verifica se há espaços no início ou fim\n    if (nome.trim() !== nome) {\n      return {\n        leadingTrailingSpaces: true\n      };\n    }\n    // Verifica se contém apenas caracteres válidos (letras, números, espaços, acentos, hífens e apóstrofos)\n    // Padrão permite: A-Z, a-z, 0-9, À-ÿ (acentos), espaços, hífens (-) e apóstrofos (')\n    const validPattern = /^[a-zA-Z0-9À-ÿ\\u00C0-\\u017F\\s\\-']+$/;\n    if (!validPattern.test(nome)) {\n      return {\n        invalidCharacters: true\n      };\n    }\n    return null;\n  }\n  // Validador customizado para o campo email\n  emailValidator(control) {\n    if (!control.value) return null;\n    const email = control.value;\n    // Verifica se há espaços no início ou fim\n    if (email.trim() !== email) {\n      return {\n        invalidFormat: true\n      };\n    }\n    // Verifica se contém múltiplos emails (separados por vírgula, ponto e vírgula, etc.)\n    if (email.includes(',') || email.includes(';') || email.includes('|')) {\n      return {\n        multipleEmails: true\n      };\n    }\n    // Regex básico para formato de email\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    if (!emailRegex.test(email)) {\n      return {\n        invalidFormat: true\n      };\n    }\n    // Verifica se o domínio é válido (pelo menos 2 caracteres após o ponto)\n    const domainPart = email.split('@')[1];\n    if (!domainPart || domainPart.split('.')[1]?.length < 2) {\n      return {\n        invalidDomain: true\n      };\n    }\n    // Verifica se é um email internacional (domínios de país com mais de 2 caracteres)\n    const countryDomains = ['com', 'org', 'net', 'edu', 'gov', 'mil', 'int'];\n    const domainParts = domainPart.split('.');\n    const topLevelDomain = domainParts[domainParts.length - 1];\n    if (topLevelDomain.length > 3 && !countryDomains.includes(topLevelDomain)) {\n      return {\n        internationalEmail: true\n      };\n    }\n    return null;\n  }\n  // Validador personalizado para verificar se as senhas coincidem\n  passwordMatchValidator(form) {\n    const senha = form.get('senha')?.value;\n    const confirmarSenha = form.get('confirmarSenha')?.value;\n    return senha === confirmarSenha ? null : {\n      passwordMismatch: true\n    };\n  }\n  // Getters para facilitar o acesso aos campos do formulário\n  get nome() {\n    return this.registerForm.get('nome')?.value;\n  }\n  get email() {\n    return this.registerForm.get('email')?.value;\n  }\n  get senha() {\n    return this.registerForm.get('senha')?.value;\n  }\n  get confirmarSenha() {\n    return this.registerForm.get('confirmarSenha')?.value;\n  }\n  // Marca todos os campos como tocados para exibir as validações\n  marcarCamposComoTocados() {\n    Object.keys(this.registerForm.controls).forEach(key => {\n      const control = this.registerForm.get(key);\n      control?.markAsTouched();\n    });\n  }\n  getNomePlano(plano) {\n    switch (plano) {\n      // Planos Especializados\n      case 'RH':\n        return 'FormSync RH (R$ 49,90/mês)';\n      case 'VENDAS':\n        return 'FormSync Vendas (R$ 49,90/mês)';\n      case 'ECOMMERCE':\n        return 'FormSync Varejo (R$ 49,90/mês)';\n      // Novos Planos\n      case 'FREE':\n        return 'Free (R$ 0,00)';\n      case 'PESSOAL':\n        return 'Pessoal (R$ 9,90/mês)';\n      case 'PROFISSIONAL':\n        return 'Profissional (R$ 24,90/mês)';\n      case 'EMPRESARIAL':\n        return 'Empresarial (Sob demanda)';\n      default:\n        return 'Pessoal (R$ 9,90/mês)';\n    }\n  }\n  /**\n   * Verifica se o plano é especializado\n   */\n  isPlanoEspecializado() {\n    return ['RH', 'VENDAS', 'ECOMMERCE'].includes(this.plano);\n  }\n  /**\n   * Obtém o número de sites mapeados por área\n   */\n  getSitesCount() {\n    switch (this.plano) {\n      case 'RH':\n        return '6+';\n      case 'VENDAS':\n        return '6+';\n      case 'ECOMMERCE':\n        return '6+';\n      default:\n        return '10+';\n    }\n  }\n  registrar() {\n    if (this.registerForm.invalid) {\n      this.marcarCamposComoTocados();\n      this.mensagemErro = 'Por favor, corrija os erros no formulário.';\n      this.mensagemSucesso = '';\n      return;\n    }\n    this.carregando = true;\n    // Se for plano gratuito, cadastra normalmente\n    if (this.plano === 'FREE') {\n      const novoUsuario = {\n        nome: this.registerForm.get('nome')?.value,\n        email: this.registerForm.get('email')?.value,\n        senha: this.registerForm.get('senha')?.value,\n        plano: this.plano // Usa o código do plano, não o nome\n      };\n      this.usuarioService.cadastrar(novoUsuario).subscribe({\n        next: usuarioCriado => {\n          this.mensagemErro = '';\n          this.mensagemSucesso = 'Cadastro realizado com sucesso!';\n          this.carregando = false;\n          this.registerForm.reset();\n          setTimeout(() => {\n            this.router.navigate(['/trello-login']);\n          }, 1500);\n        },\n        error: err => {\n          this.carregando = false;\n          this.mensagemSucesso = '';\n          this.mensagemErro = this.errorHandler.getErrorMessage(err);\n        }\n      });\n      return;\n    }\n    // Se for plano pago (incluindo especializados), primeiro garante cadastro do usuário\n    console.log('🔔 [FRONTEND_CHECKOUT] Preparando cadastro e pagamento...');\n    const novoUsuario = {\n      nome: this.registerForm.get('nome')?.value,\n      email: this.registerForm.get('email')?.value,\n      senha: this.registerForm.get('senha')?.value,\n      plano: this.plano\n    };\n    this.usuarioService.cadastrar(novoUsuario).subscribe({\n      next: () => {\n        console.log('✅ [FRONTEND_CHECKOUT] Usuário cadastrado, seguindo para checkout');\n        this.criarCheckoutERedirecionar();\n      },\n      error: err => {\n        console.error('❌ [FRONTEND_CHECKOUT] Erro ao cadastrar usuário antes do checkout:', err);\n        console.error('   - Status:', err.status);\n        console.error('   - Error object:', err.error);\n        console.error('   - Full error:', err);\n        // IMPORTANTE: Verificar se é erro 409 e mostrar mensagem\n        if (err.status === 409) {\n          console.log('🚨 [FRONTEND_CHECKOUT] Erro 409 detectado - Usuário já existe');\n          this.carregando = false;\n          this.mensagemErro = 'Este email já está cadastrado. Use outro email ou faça login.';\n          console.log('   - Mensagem de erro exibida:', this.mensagemErro);\n          return; // IMPORTANTE: Não continuar para checkout\n        }\n        this.carregando = false;\n        this.mensagemErro = this.errorHandler.getErrorMessage(err);\n        console.log('   - Mensagem de erro exibida:', this.mensagemErro);\n      }\n    });\n  }\n  criarCheckoutERedirecionar() {\n    this.checkoutService.criarCheckout({\n      plano: this.plano,\n      email: this.registerForm.get('email')?.value\n    }).subscribe({\n      next: res => {\n        console.log('✅ [FRONTEND_CHECKOUT] Checkout criado no backend:', res);\n        console.log('   - Session ID:', res.id);\n        this.initializeStripeCheckout(res.id);\n      },\n      error: err => {\n        console.error('❌ [FRONTEND_CHECKOUT] Erro ao criar checkout:', err);\n        this.carregando = false;\n        this.mensagemErro = this.errorHandler.getErrorMessage(err);\n      }\n    });\n  }\n  initializeStripeCheckout(sessionId) {\n    console.log('🔍 [FRONTEND_STRIPE] Iniciando Stripe checkout...');\n    console.log('   - Session ID:', sessionId);\n    console.log('   - Timestamp:', new Date().toISOString());\n    // Aguarda o Stripe carregar se não estiver disponível\n    if (typeof Stripe === 'undefined') {\n      console.log('⏳ [FRONTEND_STRIPE] Stripe não carregado ainda. Aguardando...');\n      setTimeout(() => this.initializeStripeCheckout(sessionId), 100);\n      return;\n    }\n    console.log('✅ [FRONTEND_STRIPE] Stripe carregado. Iniciando redirecionamento...');\n    console.log('   - Stripe global object:', typeof Stripe);\n    console.log('   - Environment publishable key:', environment.stripe.publishableKey.substring(0, 10) + '...');\n    try {\n      console.log('🔐 [FRONTEND_STRIPE] Criando instância Stripe...');\n      const stripe = Stripe(environment.stripe.publishableKey);\n      console.log('🚀 [FRONTEND_STRIPE] Redirecionando para checkout Stripe...');\n      console.log('   - Usando sessionId:', sessionId);\n      // Usar abordagem mais simples que evita chamadas automáticas problemáticas\n      stripe.redirectToCheckout({\n        sessionId\n      }).then(result => {\n        console.log('📡 [FRONTEND_STRIPE] Resposta do redirectToCheckout:', result);\n        if (result.error) {\n          console.error('❌ [FRONTEND_STRIPE] Erro no redirecionamento:', result.error);\n          console.error('   - Error type:', result.error.type);\n          console.error('   - Error message:', result.error.message);\n          // Verificar se é erro conhecido do payment_pages\n          if (result.error.message && result.error.message.includes('payment_pages')) {\n            console.log('⚠️ [FRONTEND_STRIPE] Erro conhecido do payment_pages - funcionalidade não afetada');\n            return;\n          }\n          this.carregando = false;\n          this.mensagemErro = result.error.message || 'Erro ao processar pagamento.';\n        } else {\n          console.log('✅ [FRONTEND_STRIPE] Redirecionamento bem-sucedido');\n        }\n      }).catch(error => {\n        console.error('❌ [FRONTEND_STRIPE] Erro no checkout Stripe:', error);\n        console.error('   - Error stack:', error.stack);\n        // Verificar se é erro conhecido do payment_pages\n        if (error.message && (error.message.includes('payment_pages') || error.message.includes('401'))) {\n          console.log('⚠️ [FRONTEND_STRIPE] Erro conhecido ignorado - checkout continua funcionando');\n          console.log('🔄 [FRONTEND_STRIPE] Tentando redirecionamento manual como fallback...');\n          // Tentar redirecionamento manual como fallback\n          const fallbackUrl = `https://checkout.stripe.com/pay/${sessionId}`;\n          console.log('   - Fallback URL:', fallbackUrl);\n          window.location.href = fallbackUrl;\n          return;\n        }\n        this.carregando = false;\n        this.mensagemErro = 'Erro ao processar pagamento. Tente novamente.';\n      });\n    } catch (error) {\n      console.error('❌ [FRONTEND_STRIPE] Erro ao inicializar Stripe:', error);\n      console.error('   - Error details:', error);\n      this.carregando = false;\n      this.mensagemErro = 'Erro ao carregar sistema de pagamento. Tente novamente.';\n    }\n  }\n  static ɵfac = function TrelloRegisterComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TrelloRegisterComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.UsuarioService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i4.CheckoutService), i0.ɵɵdirectiveInject(i5.ErrorHandlerService));\n  };\n  static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TrelloRegisterComponent,\n    selectors: [[\"app-trello-register\"]],\n    decls: 75,\n    vars: 27,\n    consts: [[1, \"py-16\", \"bg-white\", \"text-gray-900\", \"flex\", \"items-center\", \"justify-center\", \"px-6\"], [1, \"w-full\", \"max-w-6xl\"], [1, \"grid\", \"grid-cols-1\", \"lg:grid-cols-2\", \"gap-12\", \"items-center\"], [1, \"text-center\", \"lg:text-left\", \"lg:pl-4\"], [1, \"text-5xl\", \"lg:text-5xl\", \"font-black\", \"text-gray-900\", \"mb-6\", \"leading-tight\"], [1, \"text-xl\", \"mb-8\", \"text-gray-600\", \"leading-relaxed\"], [1, \"bg-gray-50\", \"rounded-lg\", \"p-8\", \"border\", \"border-gray-200\", \"mb-8\"], [1, \"text-center\", \"mb-4\"], [1, \"inline-flex\", \"items-center\", \"gap-2\", \"px-4\", \"py-2\", \"bg-blue-100\", \"text-blue-700\", \"rounded-full\", \"text-sm\", \"font-medium\", \"border\", \"border-blue-200\", \"mb-3\"], [\"fill\", \"none\", \"stroke\", \"currentColor\", \"viewBox\", \"0 0 24 24\", 1, \"w-4\", \"h-4\"], [\"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\", \"stroke-width\", \"2\", \"d\", \"M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z\"], [1, \"text-gray-600\", \"text-sm\"], [4, \"ngIf\"], [1, \"text-center\"], [\"routerLink\", \"/planos\", 1, \"text-blue-600\", \"hover:underline\", \"font-medium\", \"transition-colors\", \"duration-200\"], [1, \"space-y-4\"], [1, \"flex\", \"items-center\", \"gap-3\", \"justify-center\", \"lg:justify-start\"], [1, \"w-2\", \"h-2\", \"bg-green-500\", \"rounded-full\"], [1, \"text-gray-600\"], [1, \"bg-gray-50\", \"rounded-lg\", \"p-8\", \"border\", \"border-gray-200\", \"lg:pr-4\", \"mt-8\"], [1, \"text-center\", \"mb-8\"], [1, \"text-2xl\", \"font-bold\", \"text-gray-900\", \"mb-2\"], [\"class\", \"bg-red-50 border border-red-200 rounded-lg p-4 mb-6\", 4, \"ngIf\"], [\"class\", \"bg-green-50 border border-green-200 rounded-lg p-4 mb-6\", 4, \"ngIf\"], [1, \"space-y-6\", 3, \"ngSubmit\", \"formGroup\"], [1, \"block\", \"text-sm\", \"font-medium\", \"text-gray-700\", \"mb-2\"], [\"type\", \"text\", \"formControlName\", \"nome\", \"placeholder\", \"Digite seu nome\", \"data-cy\", \"name\"], [\"class\", \"mt-2 text-sm text-red-600\", 4, \"ngIf\"], [\"type\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"Digite seu e-mail\", \"autocomplete\", \"email\", \"data-cy\", \"email\"], [\"type\", \"password\", \"formControlName\", \"senha\", \"placeholder\", \"Crie uma senha\", \"autocomplete\", \"new-password\", \"data-cy\", \"password\"], [\"type\", \"password\", \"formControlName\", \"confirmarSenha\", \"placeholder\", \"Confirme sua senha\", \"autocomplete\", \"new-password\", \"data-cy\", \"confirm-password\"], [\"type\", \"submit\", \"data-cy\", \"register-button\", 1, \"w-full\", \"py-4\", \"px-6\", \"bg-blue-600\", \"text-white\", \"font-semibold\", \"text-lg\", \"rounded-lg\", \"hover:bg-blue-700\", \"transition-colors\", \"duration-200\", \"disabled:bg-gray-400\", \"disabled:cursor-not-allowed\", \"flex\", \"items-center\", \"justify-center\", \"gap-3\", 3, \"disabled\"], [\"class\", \"w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin\", 4, \"ngIf\"], [\"class\", \"w-5 h-5\", \"fill\", \"none\", \"stroke\", \"currentColor\", \"viewBox\", \"0 0 24 24\", 4, \"ngIf\"], [\"routerLink\", \"/trello-login\", 1, \"text-gray-600\", \"font-medium\", \"hover:text-gray-900\", \"transition-colors\", \"duration-200\"], [1, \"bg-red-50\", \"border\", \"border-red-200\", \"rounded-lg\", \"p-4\", \"mb-6\"], [1, \"flex\", \"items-center\", \"gap-3\"], [\"fill\", \"none\", \"stroke\", \"currentColor\", \"viewBox\", \"0 0 24 24\", 1, \"w-5\", \"h-5\", \"text-red-600\", \"flex-shrink-0\"], [\"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\", \"stroke-width\", \"2\", \"d\", \"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.34 16.5c-.77.833.192 2.5 1.732 2.5z\"], [1, \"text-red-800\", \"text-sm\", \"font-medium\"], [1, \"bg-green-50\", \"border\", \"border-green-200\", \"rounded-lg\", \"p-4\", \"mb-6\"], [\"fill\", \"none\", \"stroke\", \"currentColor\", \"viewBox\", \"0 0 24 24\", 1, \"w-5\", \"h-5\", \"text-green-600\", \"flex-shrink-0\"], [\"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\", \"stroke-width\", \"2\", \"d\", \"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"], [1, \"text-green-800\", \"text-sm\", \"font-medium\"], [1, \"mt-2\", \"text-sm\", \"text-red-600\"], [1, \"w-5\", \"h-5\", \"border-2\", \"border-white\", \"border-t-transparent\", \"rounded-full\", \"animate-spin\"], [\"fill\", \"none\", \"stroke\", \"currentColor\", \"viewBox\", \"0 0 24 24\", 1, \"w-5\", \"h-5\"], [\"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\", \"stroke-width\", \"2\", \"d\", \"M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z\"]],\n    template: function TrelloRegisterComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h1\", 4);\n        i0.ɵɵtext(5, \" Crie sua conta \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"p\", 5);\n        i0.ɵɵtext(7, \" Comece gratuitamente em segundos e automatize qualquer formul\\u00E1rio na internet \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 6)(9, \"div\", 7)(10, \"div\", 8);\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵelementStart(11, \"svg\", 9);\n        i0.ɵɵelement(12, \"path\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵnamespaceHTML();\n        i0.ɵɵelementStart(14, \"p\", 11);\n        i0.ɵɵtemplate(15, TrelloRegisterComponent_span_15_Template, 2, 0, \"span\", 12)(16, TrelloRegisterComponent_span_16_Template, 2, 0, \"span\", 12)(17, TrelloRegisterComponent_span_17_Template, 2, 0, \"span\", 12)(18, TrelloRegisterComponent_span_18_Template, 2, 0, \"span\", 12)(19, TrelloRegisterComponent_span_19_Template, 2, 0, \"span\", 12)(20, TrelloRegisterComponent_span_20_Template, 2, 0, \"span\", 12)(21, TrelloRegisterComponent_span_21_Template, 2, 0, \"span\", 12);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(22, \"div\", 13)(23, \"a\", 14);\n        i0.ɵɵtext(24, \" Trocar plano \\u2192 \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(25, \"div\", 15)(26, \"div\", 16);\n        i0.ɵɵelement(27, \"div\", 17);\n        i0.ɵɵelementStart(28, \"span\", 18);\n        i0.ɵɵtext(29, \"Sem cart\\u00E3o de cr\\u00E9dito\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(30, \"div\", 16);\n        i0.ɵɵelement(31, \"div\", 17);\n        i0.ɵɵelementStart(32, \"span\", 18);\n        i0.ɵɵtext(33, \"7 dias gr\\u00E1tis\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(34, \"div\", 16);\n        i0.ɵɵelement(35, \"div\", 17);\n        i0.ɵɵelementStart(36, \"span\", 18);\n        i0.ɵɵtext(37, \"100% de precis\\u00E3o\");\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(38, \"div\", 19)(39, \"div\", 20)(40, \"h2\", 21);\n        i0.ɵɵtext(41, \"Criar conta\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"p\", 18);\n        i0.ɵɵtext(43, \"Preencha seus dados para come\\u00E7ar\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(44, TrelloRegisterComponent_div_44_Template, 6, 1, \"div\", 22)(45, TrelloRegisterComponent_div_45_Template, 6, 1, \"div\", 23);\n        i0.ɵɵelementStart(46, \"form\", 24);\n        i0.ɵɵlistener(\"ngSubmit\", function TrelloRegisterComponent_Template_form_ngSubmit_46_listener() {\n          return ctx.registrar();\n        });\n        i0.ɵɵelementStart(47, \"div\")(48, \"label\", 25);\n        i0.ɵɵtext(49, \"Nome completo\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(50, \"input\", 26);\n        i0.ɵɵtemplate(51, TrelloRegisterComponent_div_51_Template, 6, 5, \"div\", 27);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(52, \"div\")(53, \"label\", 25);\n        i0.ɵɵtext(54, \"E-mail\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(55, \"input\", 28);\n        i0.ɵɵtemplate(56, TrelloRegisterComponent_div_56_Template, 6, 5, \"div\", 27);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(57, \"div\")(58, \"label\", 25);\n        i0.ɵɵtext(59, \"Senha\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(60, \"input\", 29);\n        i0.ɵɵtemplate(61, TrelloRegisterComponent_div_61_Template, 3, 2, \"div\", 27);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(62, \"div\")(63, \"label\", 25);\n        i0.ɵɵtext(64, \"Confirmar Senha\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(65, \"input\", 30);\n        i0.ɵɵtemplate(66, TrelloRegisterComponent_div_66_Template, 3, 2, \"div\", 27);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(67, \"button\", 31);\n        i0.ɵɵtemplate(68, TrelloRegisterComponent_div_68_Template, 1, 0, \"div\", 32)(69, TrelloRegisterComponent__svg_svg_69_Template, 2, 0, \"svg\", 33);\n        i0.ɵɵtext(70);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(71, \"div\", 13)(72, \"a\", 34);\n        i0.ɵɵtext(73, \" J\\u00E1 tem conta? Entrar \\u2192 \");\n        i0.ɵɵelementEnd()()()()()()();\n        i0.ɵɵelement(74, \"app-footer\");\n      }\n      if (rf & 2) {\n        let tmp_11_0;\n        let tmp_12_0;\n        let tmp_13_0;\n        let tmp_14_0;\n        let tmp_15_0;\n        let tmp_16_0;\n        let tmp_17_0;\n        let tmp_18_0;\n        i0.ɵɵadvance(13);\n        i0.ɵɵtextInterpolate1(\" \", ctx.planoNome, \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.plano === \"RH\");\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.plano === \"VENDAS\");\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.plano === \"ECOMMERCE\");\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.plano === \"FREE\");\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.plano === \"PESSOAL\");\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.plano === \"PROFISSIONAL\");\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.plano === \"EMPRESARIAL\");\n        i0.ɵɵadvance(23);\n        i0.ɵɵproperty(\"ngIf\", ctx.mensagemErro);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.mensagemSucesso);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"formGroup\", ctx.registerForm);\n        i0.ɵɵadvance(4);\n        i0.ɵɵclassMap(\"w-full px-4 py-3 border rounded-lg bg-white focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-colors duration-200 text-gray-900 placeholder-gray-400 \" + (((tmp_11_0 = ctx.registerForm.get(\"nome\")) == null ? null : tmp_11_0.invalid) && ((tmp_11_0 = ctx.registerForm.get(\"nome\")) == null ? null : tmp_11_0.touched) ? \"border-red-500\" : \"border-gray-300\"));\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ((tmp_12_0 = ctx.registerForm.get(\"nome\")) == null ? null : tmp_12_0.invalid) && ((tmp_12_0 = ctx.registerForm.get(\"nome\")) == null ? null : tmp_12_0.touched));\n        i0.ɵɵadvance(4);\n        i0.ɵɵclassMap(\"w-full px-4 py-3 border rounded-lg bg-white focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-colors duration-200 text-gray-900 placeholder-gray-400 \" + (((tmp_13_0 = ctx.registerForm.get(\"email\")) == null ? null : tmp_13_0.invalid) && ((tmp_13_0 = ctx.registerForm.get(\"email\")) == null ? null : tmp_13_0.touched) ? \"border-red-500\" : \"border-gray-300\"));\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ((tmp_14_0 = ctx.registerForm.get(\"email\")) == null ? null : tmp_14_0.invalid) && ((tmp_14_0 = ctx.registerForm.get(\"email\")) == null ? null : tmp_14_0.touched));\n        i0.ɵɵadvance(4);\n        i0.ɵɵclassMap(\"w-full px-4 py-3 border rounded-lg bg-white focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-colors duration-200 text-gray-900 placeholder-gray-400 \" + (((tmp_15_0 = ctx.registerForm.get(\"senha\")) == null ? null : tmp_15_0.invalid) && ((tmp_15_0 = ctx.registerForm.get(\"senha\")) == null ? null : tmp_15_0.touched) ? \"border-red-500\" : \"border-gray-300\"));\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ((tmp_16_0 = ctx.registerForm.get(\"senha\")) == null ? null : tmp_16_0.invalid) && ((tmp_16_0 = ctx.registerForm.get(\"senha\")) == null ? null : tmp_16_0.touched));\n        i0.ɵɵadvance(4);\n        i0.ɵɵclassMap(\"w-full px-4 py-3 border rounded-lg bg-white focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-colors duration-200 text-gray-900 placeholder-gray-400 \" + (((tmp_17_0 = ctx.registerForm.get(\"confirmarSenha\")) == null ? null : tmp_17_0.invalid) && ((tmp_17_0 = ctx.registerForm.get(\"confirmarSenha\")) == null ? null : tmp_17_0.touched) ? \"border-red-500\" : \"border-gray-300\"));\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ((tmp_18_0 = ctx.registerForm.get(\"confirmarSenha\")) == null ? null : tmp_18_0.invalid) && ((tmp_18_0 = ctx.registerForm.get(\"confirmarSenha\")) == null ? null : tmp_18_0.touched));\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"disabled\", ctx.registerForm.invalid || ctx.carregando);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", ctx.carregando);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"ngIf\", !ctx.carregando);\n        i0.ɵɵadvance();\n        i0.ɵɵtextInterpolate1(\" \", ctx.carregando ? \"Criando conta...\" : \"Criar conta\", \" \");\n      }\n    },\n    dependencies: [CommonModule, i6.NgIf, FormsModule, i1.ɵNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, ReactiveFormsModule, i1.FormGroupDirective, i1.FormControlName, FooterComponent],\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["ActivatedRoute","Router","CommonModule","FormsModule","ReactiveFormsModule","FormBuilder","Validators","UsuarioService","CheckoutService","ErrorHandlerService","environment","FooterComponent","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵelement","ɵɵadvance","ɵɵtextInterpolate","ctx_r0","mensagemErro","mensagemSucesso","ɵɵtemplate","TrelloRegisterComponent_div_51_span_1_Template","TrelloRegisterComponent_div_51_span_2_Template","TrelloRegisterComponent_div_51_span_3_Template","TrelloRegisterComponent_div_51_span_4_Template","TrelloRegisterComponent_div_51_span_5_Template","ɵɵproperty","tmp_1_0","registerForm","get","errors","tmp_2_0","tmp_3_0","tmp_4_0","tmp_5_0","TrelloRegisterComponent_div_56_span_1_Template","TrelloRegisterComponent_div_56_span_2_Template","TrelloRegisterComponent_div_56_span_3_Template","TrelloRegisterComponent_div_56_span_4_Template","TrelloRegisterComponent_div_56_span_5_Template","TrelloRegisterComponent_div_61_span_1_Template","TrelloRegisterComponent_div_61_span_2_Template","TrelloRegisterComponent_div_66_span_1_Template","TrelloRegisterComponent_div_66_span_2_Template","touched","TrelloRegisterComponent","fb","usuarioService","router","route","checkoutService","errorHandler","carregando","plano","planoNome","constructor","group","nome","required","minLength","maxLength","nomeValidator","email","emailValidator","senha","confirmarSenha","validators","passwordMatchValidator","ngOnInit","queryParams","subscribe","params","getNomePlano","control","value","trim","leadingTrailingSpaces","validPattern","test","invalidCharacters","invalidFormat","includes","multipleEmails","emailRegex","domainPart","split","length","invalidDomain","countryDomains","domainParts","topLevelDomain","internationalEmail","form","passwordMismatch","marcarCamposComoTocados","Object","keys","controls","forEach","key","markAsTouched","isPlanoEspecializado","getSitesCount","registrar","invalid","novoUsuario","cadastrar","next","usuarioCriado","reset","setTimeout","navigate","error","err","getErrorMessage","console","log","criarCheckoutERedirecionar","status","criarCheckout","res","id","initializeStripeCheckout","sessionId","Date","toISOString","Stripe","stripe","publishableKey","substring","redirectToCheckout","then","result","type","message","catch","stack","fallbackUrl","window","location","href","ɵɵdirectiveInject","i1","i2","i3","i4","i5","selectors","decls","vars","consts","template","TrelloRegisterComponent_Template","rf","ctx","TrelloRegisterComponent_span_15_Template","TrelloRegisterComponent_span_16_Template","TrelloRegisterComponent_span_17_Template","TrelloRegisterComponent_span_18_Template","TrelloRegisterComponent_span_19_Template","TrelloRegisterComponent_span_20_Template","TrelloRegisterComponent_span_21_Template","TrelloRegisterComponent_div_44_Template","TrelloRegisterComponent_div_45_Template","ɵɵlistener","TrelloRegisterComponent_Template_form_ngSubmit_46_listener","TrelloRegisterComponent_div_51_Template","TrelloRegisterComponent_div_56_Template","TrelloRegisterComponent_div_61_Template","TrelloRegisterComponent_div_66_Template","TrelloRegisterComponent_div_68_Template","TrelloRegisterComponent__svg_svg_69_Template","ɵɵtextInterpolate1","ɵɵclassMap","tmp_11_0","tmp_12_0","tmp_13_0","tmp_14_0","tmp_15_0","tmp_16_0","tmp_17_0","tmp_18_0","i6","NgIf","ɵNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","FormGroupDirective","FormControlName","encapsulation"],"sources":["/home/danilo/Área de trabalho/formsync-nx/apps/front/src/app/components/trello-register/trello-register.component.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule, FormBuilder, FormGroup, Validators, AbstractControl, ValidationErrors } from '@angular/forms';\nimport { UsuarioService } from '../../services/usuario.service';\nimport { Usuario } from '../../models/usuario.model';\nimport { CheckoutService } from '../../services/checkout.service';\nimport { ErrorHandlerService } from '../../services/error-handler.service';\nimport { environment } from '../../../environments/environment';\nimport { FooterComponent } from '../footer/footer.component';\n\ndeclare const Stripe: any;\n\n@Component({\n  selector: 'app-trello-register',\n  standalone: true,\n  imports: [CommonModule, FormsModule, ReactiveFormsModule, FooterComponent],\n  template: `\n    <!-- Hero Section com Formulário de Cadastro - Estilo Trello -->\n    <section class=\"py-16 bg-white text-gray-900 flex items-center justify-center px-6\">\n      <div class=\"w-full max-w-6xl\">\n        <!-- Layout Principal -->\n        <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\n          \n          <!-- Conteúdo da Esquerda - Alinhado com a logo -->\n          <div class=\"text-center lg:text-left lg:pl-4\">\n            <!-- Header Principal -->\n            <h1 class=\"text-5xl lg:text-5xl font-black text-gray-900 mb-6 leading-tight\">\n              Crie sua conta\n            </h1>\n            \n            <!-- Subheading -->\n            <p class=\"text-xl mb-8 text-gray-600 leading-relaxed\">\n              Comece gratuitamente em segundos e automatize qualquer formulário na internet\n            </p>\n\n            <!-- Informações do Plano -->\n            <div class=\"bg-gray-50 rounded-lg p-8 border border-gray-200 mb-8\">\n              <div class=\"text-center mb-4\">\n                <div class=\"inline-flex items-center gap-2 px-4 py-2 bg-blue-100 text-blue-700 rounded-full text-sm font-medium border border-blue-200 mb-3\">\n                  <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M11.049 2.927c.3-.921 1.603-.921 1.902 0l1.519 4.674a1 1 0 00.95.69h4.915c.969 0 1.371 1.24.588 1.81l-3.976 2.888a1 1 0 00-.363 1.118l1.518 4.674c.3.922-.755 1.688-1.538 1.118l-3.976-2.888a1 1 0 00-1.176 0l-3.976 2.888c-.783.57-1.838-.197-1.538-1.118l1.518-4.674a1 1 0 00-.363-1.118l-3.976-2.888c-.784-.57-.38-1.81.588-1.81h4.914a1 1 0 00.951-.69l1.519-4.674z\"></path>\n                  </svg>\n                  {{ planoNome }}\n                </div>\n                <p class=\"text-gray-600 text-sm\">\n                  <span *ngIf=\"plano === 'RH'\">100% de funcionamento garantido em sites de RH como LinkedIn, Indeed, Catho e mais.</span>\n                  <span *ngIf=\"plano === 'VENDAS'\">Automação completa para CRMs e plataformas de vendas como Salesforce, HubSpot, Pipedrive.</span>\n                  <span *ngIf=\"plano === 'ECOMMERCE'\">Preenchimento perfeito em marketplaces como Mercado Livre, Amazon, Shopify.</span>\n                  <span *ngIf=\"plano === 'FREE'\">Até 10 templates, extensão básica.</span>\n                  <span *ngIf=\"plano === 'PESSOAL'\">Até 100 templates, backup/sync opcional.</span>\n                  <span *ngIf=\"plano === 'PROFISSIONAL'\">Até 500 templates, compartilhamento e relatórios.</span>\n                  <span *ngIf=\"plano === 'EMPRESARIAL'\">Plano sob demanda para empresas, recursos avançados.</span>\n                </p>\n              </div>\n              \n              <!-- Link para trocar plano -->\n              <div class=\"text-center\">\n                <a routerLink=\"/planos\" class=\"text-blue-600 hover:underline font-medium transition-colors duration-200\">\n                  Trocar plano →\n                </a>\n              </div>\n            </div>\n            \n            <!-- Benefícios -->\n            <div class=\"space-y-4\">\n              <div class=\"flex items-center gap-3 justify-center lg:justify-start\">\n                <div class=\"w-2 h-2 bg-green-500 rounded-full\"></div>\n                <span class=\"text-gray-600\">Sem cartão de crédito</span>\n              </div>\n              <div class=\"flex items-center gap-3 justify-center lg:justify-start\">\n                <div class=\"w-2 h-2 bg-green-500 rounded-full\"></div>\n                <span class=\"text-gray-600\">7 dias grátis</span>\n              </div>\n              <div class=\"flex items-center gap-3 justify-center lg:justify-start\">\n                <div class=\"w-2 h-2 bg-green-500 rounded-full\"></div>\n                <span class=\"text-gray-600\">100% de precisão</span>\n              </div>\n            </div>\n          </div>\n\n          <!-- Card de Cadastro - Alinhado com o botão \"Começar por R$ 14,90/mês\" -->\n          <div class=\"bg-gray-50 rounded-lg p-8 border border-gray-200 lg:pr-4 mt-8\">\n            <div class=\"text-center mb-8\">\n              <h2 class=\"text-2xl font-bold text-gray-900 mb-2\">Criar conta</h2>\n              <p class=\"text-gray-600\">Preencha seus dados para começar</p>\n            </div>\n\n            <!-- Mensagens de Status -->\n            <div *ngIf=\"mensagemErro\" class=\"bg-red-50 border border-red-200 rounded-lg p-4 mb-6\">\n              <div class=\"flex items-center gap-3\">\n                <svg class=\"w-5 h-5 text-red-600 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.34 16.5c-.77.833.192 2.5 1.732 2.5z\"></path>\n                </svg>\n                <span class=\"text-red-800 text-sm font-medium\">{{ mensagemErro }}</span>\n              </div>\n            </div>\n\n            <div *ngIf=\"mensagemSucesso\" class=\"bg-green-50 border border-green-200 rounded-lg p-4 mb-6\">\n              <div class=\"flex items-center gap-3\">\n                <svg class=\"w-5 h-5 text-green-600 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"></path>\n                </svg>\n                <span class=\"text-green-800 text-sm font-medium\">{{ mensagemSucesso }}</span>\n              </div>\n            </div>\n\n            <!-- Formulário de cadastro -->\n            <form [formGroup]=\"registerForm\" (ngSubmit)=\"registrar()\" class=\"space-y-6\">\n              <!-- Campo Nome -->\n              <div>\n                <label class=\"block text-sm font-medium text-gray-700 mb-2\">Nome completo</label>\n                <input \n                  type=\"text\" \n                  formControlName=\"nome\"\n                  placeholder=\"Digite seu nome\" \n                  data-cy=\"name\"\n                  [class]=\"'w-full px-4 py-3 border rounded-lg bg-white focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-colors duration-200 text-gray-900 placeholder-gray-400 ' + (registerForm.get('nome')?.invalid && registerForm.get('nome')?.touched ? 'border-red-500' : 'border-gray-300')\"\n                />\n                <!-- Mensagem de erro para nome -->\n                <div *ngIf=\"registerForm.get('nome')?.invalid && registerForm.get('nome')?.touched\" class=\"mt-2 text-sm text-red-600\">\n                  <span *ngIf=\"registerForm.get('nome')?.errors?.['required']\">Nome é obrigatório</span>\n                  <span *ngIf=\"registerForm.get('nome')?.errors?.['minlength']\">Nome deve ter pelo menos 2 caracteres</span>\n                  <span *ngIf=\"registerForm.get('nome')?.errors?.['maxlength']\">Nome deve ter no máximo 100 caracteres</span>\n                  <span *ngIf=\"registerForm.get('nome')?.errors?.['invalidCharacters']\">Nome contém caracteres inválidos</span>\n                  <span *ngIf=\"registerForm.get('nome')?.errors?.['leadingTrailingSpaces']\">Nome não pode começar ou terminar com espaços</span>\n                </div>\n              </div>\n\n              <!-- Campo Email -->\n              <div>\n                <label class=\"block text-sm font-medium text-gray-700 mb-2\">E-mail</label>\n                <input \n                  type=\"email\" \n                  formControlName=\"email\"\n                  placeholder=\"Digite seu e-mail\" \n                  autocomplete=\"email\"\n                  data-cy=\"email\"\n                  [class]=\"'w-full px-4 py-3 border rounded-lg bg-white focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-colors duration-200 text-gray-900 placeholder-gray-400 ' + (registerForm.get('email')?.invalid && registerForm.get('email')?.touched ? 'border-red-500' : 'border-gray-300')\"\n                />\n                <!-- Mensagem de erro para email -->\n                <div *ngIf=\"registerForm.get('email')?.invalid && registerForm.get('email')?.touched\" class=\"mt-2 text-sm text-red-600\">\n                  <span *ngIf=\"registerForm.get('email')?.errors?.['required']\">E-mail é obrigatório</span>\n                  <span *ngIf=\"registerForm.get('email')?.errors?.['invalidFormat']\">Formato de e-mail inválido</span>\n                  <span *ngIf=\"registerForm.get('email')?.errors?.['invalidDomain']\">Domínio de e-mail inválido</span>\n                  <span *ngIf=\"registerForm.get('email')?.errors?.['multipleEmails']\">Não é permitido múltiplos e-mails</span>\n                  <span *ngIf=\"registerForm.get('email')?.errors?.['internationalEmail']\">E-mail internacional não suportado</span>\n                </div>\n              </div>\n\n              <!-- Campo Senha -->\n              <div>\n                <label class=\"block text-sm font-medium text-gray-700 mb-2\">Senha</label>\n                <input \n                  type=\"password\" \n                  formControlName=\"senha\"\n                  placeholder=\"Crie uma senha\" \n                  autocomplete=\"new-password\"\n                  data-cy=\"password\"\n                  [class]=\"'w-full px-4 py-3 border rounded-lg bg-white focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-colors duration-200 text-gray-900 placeholder-gray-400 ' + (registerForm.get('senha')?.invalid && registerForm.get('senha')?.touched ? 'border-red-500' : 'border-gray-300')\"\n                />\n                <!-- Mensagem de erro para senha -->\n                <div *ngIf=\"registerForm.get('senha')?.invalid && registerForm.get('senha')?.touched\" class=\"mt-2 text-sm text-red-600\">\n                  <span *ngIf=\"registerForm.get('senha')?.errors?.['required']\">Senha é obrigatória</span>\n                  <span *ngIf=\"registerForm.get('senha')?.errors?.['minlength']\">Senha deve ter pelo menos 6 caracteres</span>\n                </div>\n              </div>\n\n              <!-- Campo Confirmar Senha -->\n              <div>\n                <label class=\"block text-sm font-medium text-gray-700 mb-2\">Confirmar Senha</label>\n                <input \n                  type=\"password\" \n                  formControlName=\"confirmarSenha\"\n                  placeholder=\"Confirme sua senha\" \n                  autocomplete=\"new-password\"\n                  data-cy=\"confirm-password\"\n                  [class]=\"'w-full px-4 py-3 border rounded-lg bg-white focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-colors duration-200 text-gray-900 placeholder-gray-400 ' + (registerForm.get('confirmarSenha')?.invalid && registerForm.get('confirmarSenha')?.touched ? 'border-red-500' : 'border-gray-300')\"\n                />\n                <!-- Mensagem de erro para confirmar senha -->\n                <div *ngIf=\"registerForm.get('confirmarSenha')?.invalid && registerForm.get('confirmarSenha')?.touched\" class=\"mt-2 text-sm text-red-600\">\n                  <span *ngIf=\"registerForm.get('confirmarSenha')?.errors?.['required']\">Confirmação de senha é obrigatória</span>\n                  <span *ngIf=\"registerForm.errors?.['passwordMismatch'] && registerForm.get('confirmarSenha')?.touched\">As senhas não coincidem</span>\n                </div>\n              </div>\n\n              <!-- CTA Principal -->\n              <button\n                type=\"submit\"\n                [disabled]=\"registerForm.invalid || carregando\"\n                data-cy=\"register-button\"\n                class=\"w-full py-4 px-6 bg-blue-600 text-white font-semibold text-lg rounded-lg hover:bg-blue-700 transition-colors duration-200 disabled:bg-gray-400 disabled:cursor-not-allowed flex items-center justify-center gap-3\"\n              >\n                <div *ngIf=\"carregando\" class=\"w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\n                <svg *ngIf=\"!carregando\" class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z\"></path>\n                </svg>\n                {{ carregando ? 'Criando conta...' : 'Criar conta' }}\n              </button>\n\n              <!-- Link secundário -->\n              <div class=\"text-center\">\n                <a routerLink=\"/trello-login\" class=\"text-gray-600 font-medium hover:text-gray-900 transition-colors duration-200\">\n                  Já tem conta? Entrar →\n                </a>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </section>\n    \n    <!-- Footer -->\n    <app-footer></app-footer>\n  `,\n  styles: [],\n})\nexport class TrelloRegisterComponent implements OnInit {\n  registerForm: FormGroup;\n  mensagemErro = '';\n  mensagemSucesso = '';\n  carregando = false;\n  plano: string = '';\n  planoNome: string = '';\n\n  constructor(\n    private fb: FormBuilder,\n    private usuarioService: UsuarioService,\n    private router: Router,\n    private route: ActivatedRoute,\n    private checkoutService: CheckoutService,\n    private errorHandler: ErrorHandlerService,\n  ) {\n    this.registerForm = this.fb.group({\n      nome: ['', [\n        Validators.required,\n        Validators.minLength(2),\n        Validators.maxLength(100),\n        this.nomeValidator\n      ]],\n      email: ['', [Validators.required, this.emailValidator]],\n      senha: ['', [Validators.required, Validators.minLength(6)]],\n      confirmarSenha: ['', [Validators.required]]\n    }, { validators: this.passwordMatchValidator });\n  }\n\n  ngOnInit(): void {\n    this.route.queryParams.subscribe((params) => {\n      // Atualiza o plano sempre que o query param mudar\n      this.plano = params['plano'] || 'PESSOAL';\n      this.planoNome = this.getNomePlano(this.plano);\n    });\n  }\n\n  // Validador customizado para o campo nome\n  nomeValidator(control: AbstractControl): ValidationErrors | null {\n    if (!control.value) return null;\n\n    const nome = control.value as string;\n\n    // Verifica se há espaços no início ou fim\n    if (nome.trim() !== nome) {\n      return { leadingTrailingSpaces: true };\n    }\n\n    // Verifica se contém apenas caracteres válidos (letras, números, espaços, acentos, hífens e apóstrofos)\n    // Padrão permite: A-Z, a-z, 0-9, À-ÿ (acentos), espaços, hífens (-) e apóstrofos (')\n    const validPattern = /^[a-zA-Z0-9À-ÿ\\u00C0-\\u017F\\s\\-']+$/;\n    if (!validPattern.test(nome)) {\n      return { invalidCharacters: true };\n    }\n\n    return null;\n  }\n\n  // Validador customizado para o campo email\n  emailValidator(control: AbstractControl): ValidationErrors | null {\n    if (!control.value) return null;\n\n    const email = control.value as string;\n\n    // Verifica se há espaços no início ou fim\n    if (email.trim() !== email) {\n      return { invalidFormat: true };\n    }\n\n    // Verifica se contém múltiplos emails (separados por vírgula, ponto e vírgula, etc.)\n    if (email.includes(',') || email.includes(';') || email.includes('|')) {\n      return { multipleEmails: true };\n    }\n\n    // Regex básico para formato de email\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    if (!emailRegex.test(email)) {\n      return { invalidFormat: true };\n    }\n\n    // Verifica se o domínio é válido (pelo menos 2 caracteres após o ponto)\n    const domainPart = email.split('@')[1];\n    if (!domainPart || domainPart.split('.')[1]?.length < 2) {\n      return { invalidDomain: true };\n    }\n\n    // Verifica se é um email internacional (domínios de país com mais de 2 caracteres)\n    const countryDomains = ['com', 'org', 'net', 'edu', 'gov', 'mil', 'int'];\n    const domainParts = domainPart.split('.');\n    const topLevelDomain = domainParts[domainParts.length - 1];\n\n    if (topLevelDomain.length > 3 && !countryDomains.includes(topLevelDomain)) {\n      return { internationalEmail: true };\n    }\n\n    return null;\n  }\n\n  // Validador personalizado para verificar se as senhas coincidem\n  passwordMatchValidator(form: FormGroup) {\n    const senha = form.get('senha')?.value;\n    const confirmarSenha = form.get('confirmarSenha')?.value;\n    return senha === confirmarSenha ? null : { passwordMismatch: true };\n  }\n\n  // Getters para facilitar o acesso aos campos do formulário\n  get nome() { return this.registerForm.get('nome')?.value; }\n  get email() { return this.registerForm.get('email')?.value; }\n  get senha() { return this.registerForm.get('senha')?.value; }\n  get confirmarSenha() { return this.registerForm.get('confirmarSenha')?.value; }\n\n  // Marca todos os campos como tocados para exibir as validações\n  marcarCamposComoTocados() {\n    Object.keys(this.registerForm.controls).forEach(key => {\n      const control = this.registerForm.get(key);\n      control?.markAsTouched();\n    });\n  }\n\n  getNomePlano(plano: string): string {\n    switch (plano) {\n      // Planos Especializados\n      case 'RH':\n        return 'FormSync RH (R$ 49,90/mês)';\n      case 'VENDAS':\n        return 'FormSync Vendas (R$ 49,90/mês)';\n      case 'ECOMMERCE':\n        return 'FormSync Varejo (R$ 49,90/mês)';\n\n      // Novos Planos\n      case 'FREE':\n        return 'Free (R$ 0,00)';\n      case 'PESSOAL':\n        return 'Pessoal (R$ 9,90/mês)';\n      case 'PROFISSIONAL':\n        return 'Profissional (R$ 24,90/mês)';\n      case 'EMPRESARIAL':\n        return 'Empresarial (Sob demanda)';\n      default:\n        return 'Pessoal (R$ 9,90/mês)';\n    }\n  }\n\n  /**\n   * Verifica se o plano é especializado\n   */\n  isPlanoEspecializado(): boolean {\n    return ['RH', 'VENDAS', 'ECOMMERCE'].includes(this.plano);\n  }\n\n  /**\n   * Obtém o número de sites mapeados por área\n   */\n  getSitesCount(): string {\n    switch (this.plano) {\n      case 'RH':\n        return '6+';\n      case 'VENDAS':\n        return '6+';\n      case 'ECOMMERCE':\n        return '6+';\n      default:\n        return '10+';\n    }\n  }\n\n  registrar() {\n    if (this.registerForm.invalid) {\n      this.marcarCamposComoTocados();\n      this.mensagemErro = 'Por favor, corrija os erros no formulário.';\n      this.mensagemSucesso = '';\n      return;\n    }\n\n    this.carregando = true;\n\n    // Se for plano gratuito, cadastra normalmente\n    if (this.plano === 'FREE') {\n      const novoUsuario: Usuario = {\n        nome: this.registerForm.get('nome')?.value,\n        email: this.registerForm.get('email')?.value,\n        senha: this.registerForm.get('senha')?.value,\n        plano: this.plano, // Usa o código do plano, não o nome\n      };\n      this.usuarioService.cadastrar(novoUsuario).subscribe({\n        next: (usuarioCriado: any) => {\n          this.mensagemErro = '';\n          this.mensagemSucesso = 'Cadastro realizado com sucesso!';\n          this.carregando = false;\n          this.registerForm.reset();\n          setTimeout(() => {\n            this.router.navigate(['/trello-login']);\n          }, 1500);\n        },\n        error: (err) => {\n          this.carregando = false;\n          this.mensagemSucesso = '';\n          this.mensagemErro = this.errorHandler.getErrorMessage(err);\n        },\n      });\n      return;\n    }\n\n    // Se for plano pago (incluindo especializados), primeiro garante cadastro do usuário\n    console.log('🔔 [FRONTEND_CHECKOUT] Preparando cadastro e pagamento...');\n    const novoUsuario: Usuario = {\n      nome: this.registerForm.get('nome')?.value,\n      email: this.registerForm.get('email')?.value,\n      senha: this.registerForm.get('senha')?.value,\n      plano: this.plano,\n    };\n\n    this.usuarioService.cadastrar(novoUsuario).subscribe({\n      next: () => {\n        console.log(\n          '✅ [FRONTEND_CHECKOUT] Usuário cadastrado, seguindo para checkout',\n        );\n        this.criarCheckoutERedirecionar();\n      },\n      error: (err: any) => {\n        console.error(\n          '❌ [FRONTEND_CHECKOUT] Erro ao cadastrar usuário antes do checkout:',\n          err,\n        );\n        console.error('   - Status:', err.status);\n        console.error('   - Error object:', err.error);\n        console.error('   - Full error:', err);\n\n        // IMPORTANTE: Verificar se é erro 409 e mostrar mensagem\n        if (err.status === 409) {\n          console.log('🚨 [FRONTEND_CHECKOUT] Erro 409 detectado - Usuário já existe');\n          this.carregando = false;\n          this.mensagemErro = 'Este email já está cadastrado. Use outro email ou faça login.';\n          console.log('   - Mensagem de erro exibida:', this.mensagemErro);\n          return; // IMPORTANTE: Não continuar para checkout\n        }\n\n        this.carregando = false;\n        this.mensagemErro = this.errorHandler.getErrorMessage(err);\n        console.log('   - Mensagem de erro exibida:', this.mensagemErro);\n      },\n    });\n  }\n\n  private criarCheckoutERedirecionar() {\n    this.checkoutService\n      .criarCheckout({ plano: this.plano, email: this.registerForm.get('email')?.value })\n      .subscribe({\n        next: (res: { id: string }) => {\n          console.log(\n            '✅ [FRONTEND_CHECKOUT] Checkout criado no backend:',\n            res,\n          );\n          console.log('   - Session ID:', res.id);\n          this.initializeStripeCheckout(res.id);\n        },\n        error: (err: any) => {\n          console.error('❌ [FRONTEND_CHECKOUT] Erro ao criar checkout:', err);\n          this.carregando = false;\n          this.mensagemErro = this.errorHandler.getErrorMessage(err);\n        },\n      });\n  }\n\n  private initializeStripeCheckout(sessionId: string): void {\n    console.log('🔍 [FRONTEND_STRIPE] Iniciando Stripe checkout...');\n    console.log('   - Session ID:', sessionId);\n    console.log('   - Timestamp:', new Date().toISOString());\n\n    // Aguarda o Stripe carregar se não estiver disponível\n    if (typeof Stripe === 'undefined') {\n      console.log(\n        '⏳ [FRONTEND_STRIPE] Stripe não carregado ainda. Aguardando...',\n      );\n      setTimeout(() => this.initializeStripeCheckout(sessionId), 100);\n      return;\n    }\n\n    console.log(\n      '✅ [FRONTEND_STRIPE] Stripe carregado. Iniciando redirecionamento...',\n    );\n    console.log('   - Stripe global object:', typeof Stripe);\n    console.log(\n      '   - Environment publishable key:',\n      environment.stripe.publishableKey.substring(0, 10) + '...',\n    );\n\n    try {\n      console.log('🔐 [FRONTEND_STRIPE] Criando instância Stripe...');\n      const stripe = Stripe(environment.stripe.publishableKey);\n      console.log(\n        '🚀 [FRONTEND_STRIPE] Redirecionando para checkout Stripe...',\n      );\n      console.log('   - Usando sessionId:', sessionId);\n\n      // Usar abordagem mais simples que evita chamadas automáticas problemáticas\n      stripe\n        .redirectToCheckout({ sessionId })\n        .then((result: any) => {\n          console.log(\n            '📡 [FRONTEND_STRIPE] Resposta do redirectToCheckout:',\n            result,\n          );\n\n          if (result.error) {\n            console.error(\n              '❌ [FRONTEND_STRIPE] Erro no redirecionamento:',\n              result.error,\n            );\n            console.error('   - Error type:', result.error.type);\n            console.error('   - Error message:', result.error.message);\n\n            // Verificar se é erro conhecido do payment_pages\n            if (\n              result.error.message &&\n              result.error.message.includes('payment_pages')\n            ) {\n              console.log(\n                '⚠️ [FRONTEND_STRIPE] Erro conhecido do payment_pages - funcionalidade não afetada',\n              );\n              return;\n            }\n            this.carregando = false;\n            this.mensagemErro =\n              result.error.message || 'Erro ao processar pagamento.';\n          } else {\n            console.log('✅ [FRONTEND_STRIPE] Redirecionamento bem-sucedido');\n          }\n        })\n        .catch((error: any) => {\n          console.error('❌ [FRONTEND_STRIPE] Erro no checkout Stripe:', error);\n          console.error('   - Error stack:', error.stack);\n\n          // Verificar se é erro conhecido do payment_pages\n          if (\n            error.message &&\n            (error.message.includes('payment_pages') ||\n              error.message.includes('401'))\n          ) {\n            console.log(\n              '⚠️ [FRONTEND_STRIPE] Erro conhecido ignorado - checkout continua funcionando',\n            );\n            console.log(\n              '🔄 [FRONTEND_STRIPE] Tentando redirecionamento manual como fallback...',\n            );\n\n            // Tentar redirecionamento manual como fallback\n            const fallbackUrl = `https://checkout.stripe.com/pay/${sessionId}`;\n            console.log('   - Fallback URL:', fallbackUrl);\n            window.location.href = fallbackUrl;\n            return;\n          }\n\n          this.carregando = false;\n          this.mensagemErro = 'Erro ao processar pagamento. Tente novamente.';\n        });\n    } catch (error: any) {\n      console.error('❌ [FRONTEND_STRIPE] Erro ao inicializar Stripe:', error);\n      console.error('   - Error details:', error);\n      this.carregando = false;\n      this.mensagemErro =\n        'Erro ao carregar sistema de pagamento. Tente novamente.';\n    }\n  }\n}\n"],"mappings":"AACA,SAASA,cAAc,EAAEC,MAAM,QAAQ,iBAAiB;AACxD,SAASC,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,WAAW,EAAEC,mBAAmB,EAAEC,WAAW,EAAaC,UAAU,QAA2C,gBAAgB;AACxI,SAASC,cAAc,QAAQ,gCAAgC;AAE/D,SAASC,eAAe,QAAQ,iCAAiC;AACjE,SAASC,mBAAmB,QAAQ,sCAAsC;AAC1E,SAASC,WAAW,QAAQ,mCAAmC;AAC/D,SAASC,eAAe,QAAQ,4BAA4B;;;;;;;;;;IAqC1CC,EAAA,CAAAC,cAAA,WAA6B;IAAAD,EAAA,CAAAE,MAAA,0FAAmF;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;;IACvHH,EAAA,CAAAC,cAAA,WAAiC;IAAAD,EAAA,CAAAE,MAAA,0GAAyF;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;;IACjIH,EAAA,CAAAC,cAAA,WAAoC;IAAAD,EAAA,CAAAE,MAAA,kFAA2E;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;;IACtHH,EAAA,CAAAC,cAAA,WAA+B;IAAAD,EAAA,CAAAE,MAAA,wDAAkC;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;;IACxEH,EAAA,CAAAC,cAAA,WAAkC;IAAAD,EAAA,CAAAE,MAAA,oDAAwC;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;;IACjFH,EAAA,CAAAC,cAAA,WAAuC;IAAAD,EAAA,CAAAE,MAAA,kEAAiD;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;;IAC/FH,EAAA,CAAAC,cAAA,WAAsC;IAAAD,EAAA,CAAAE,MAAA,gEAAoD;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;;IAsCrGH,EADF,CAAAC,cAAA,cAAsF,cAC/C;;IACnCD,EAAA,CAAAC,cAAA,cAAsG;IACpGD,EAAA,CAAAI,SAAA,eAA0N;IAC5NJ,EAAA,CAAAG,YAAA,EAAM;;IACNH,EAAA,CAAAC,cAAA,eAA+C;IAAAD,EAAA,CAAAE,MAAA,GAAkB;IAErEF,EAFqE,CAAAG,YAAA,EAAO,EACpE,EACF;;;;IAF6CH,EAAA,CAAAK,SAAA,GAAkB;IAAlBL,EAAA,CAAAM,iBAAA,CAAAC,MAAA,CAAAC,YAAA,CAAkB;;;;;IAKnER,EADF,CAAAC,cAAA,cAA6F,cACtD;;IACnCD,EAAA,CAAAC,cAAA,cAAwG;IACtGD,EAAA,CAAAI,SAAA,eAA+H;IACjIJ,EAAA,CAAAG,YAAA,EAAM;;IACNH,EAAA,CAAAC,cAAA,eAAiD;IAAAD,EAAA,CAAAE,MAAA,GAAqB;IAE1EF,EAF0E,CAAAG,YAAA,EAAO,EACzE,EACF;;;;IAF+CH,EAAA,CAAAK,SAAA,GAAqB;IAArBL,EAAA,CAAAM,iBAAA,CAAAC,MAAA,CAAAE,eAAA,CAAqB;;;;;IAkBpET,EAAA,CAAAC,cAAA,WAA6D;IAAAD,EAAA,CAAAE,MAAA,mCAAkB;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;;IACtFH,EAAA,CAAAC,cAAA,WAA8D;IAAAD,EAAA,CAAAE,MAAA,4CAAqC;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;;IAC1GH,EAAA,CAAAC,cAAA,WAA8D;IAAAD,EAAA,CAAAE,MAAA,kDAAsC;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;;IAC3GH,EAAA,CAAAC,cAAA,WAAsE;IAAAD,EAAA,CAAAE,MAAA,iDAAgC;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;;IAC7GH,EAAA,CAAAC,cAAA,WAA0E;IAAAD,EAAA,CAAAE,MAAA,mEAA6C;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;;IALhIH,EAAA,CAAAC,cAAA,cAAsH;IAKpHD,EAJA,CAAAU,UAAA,IAAAC,8CAAA,mBAA6D,IAAAC,8CAAA,mBACC,IAAAC,8CAAA,mBACA,IAAAC,8CAAA,mBACQ,IAAAC,8CAAA,mBACI;IAC5Ef,EAAA,CAAAG,YAAA,EAAM;;;;;;;;;IALGH,EAAA,CAAAK,SAAA,EAAoD;IAApDL,EAAA,CAAAgB,UAAA,UAAAC,OAAA,GAAAV,MAAA,CAAAW,YAAA,CAAAC,GAAA,2BAAAF,OAAA,CAAAG,MAAA,kBAAAH,OAAA,CAAAG,MAAA,aAAoD;IACpDpB,EAAA,CAAAK,SAAA,EAAqD;IAArDL,EAAA,CAAAgB,UAAA,UAAAK,OAAA,GAAAd,MAAA,CAAAW,YAAA,CAAAC,GAAA,2BAAAE,OAAA,CAAAD,MAAA,kBAAAC,OAAA,CAAAD,MAAA,cAAqD;IACrDpB,EAAA,CAAAK,SAAA,EAAqD;IAArDL,EAAA,CAAAgB,UAAA,UAAAM,OAAA,GAAAf,MAAA,CAAAW,YAAA,CAAAC,GAAA,2BAAAG,OAAA,CAAAF,MAAA,kBAAAE,OAAA,CAAAF,MAAA,cAAqD;IACrDpB,EAAA,CAAAK,SAAA,EAA6D;IAA7DL,EAAA,CAAAgB,UAAA,UAAAO,OAAA,GAAAhB,MAAA,CAAAW,YAAA,CAAAC,GAAA,2BAAAI,OAAA,CAAAH,MAAA,kBAAAG,OAAA,CAAAH,MAAA,sBAA6D;IAC7DpB,EAAA,CAAAK,SAAA,EAAiE;IAAjEL,EAAA,CAAAgB,UAAA,UAAAQ,OAAA,GAAAjB,MAAA,CAAAW,YAAA,CAAAC,GAAA,2BAAAK,OAAA,CAAAJ,MAAA,kBAAAI,OAAA,CAAAJ,MAAA,0BAAiE;;;;;IAiBxEpB,EAAA,CAAAC,cAAA,WAA8D;IAAAD,EAAA,CAAAE,MAAA,qCAAoB;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;;IACzFH,EAAA,CAAAC,cAAA,WAAmE;IAAAD,EAAA,CAAAE,MAAA,sCAA0B;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;;IACpGH,EAAA,CAAAC,cAAA,WAAmE;IAAAD,EAAA,CAAAE,MAAA,2CAA0B;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;;IACpGH,EAAA,CAAAC,cAAA,WAAoE;IAAAD,EAAA,CAAAE,MAAA,uDAAiC;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;;IAC5GH,EAAA,CAAAC,cAAA,WAAwE;IAAAD,EAAA,CAAAE,MAAA,8CAAkC;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;;IALnHH,EAAA,CAAAC,cAAA,cAAwH;IAKtHD,EAJA,CAAAU,UAAA,IAAAe,8CAAA,mBAA8D,IAAAC,8CAAA,mBACK,IAAAC,8CAAA,mBACA,IAAAC,8CAAA,mBACC,IAAAC,8CAAA,mBACI;IAC1E7B,EAAA,CAAAG,YAAA,EAAM;;;;;;;;;IALGH,EAAA,CAAAK,SAAA,EAAqD;IAArDL,EAAA,CAAAgB,UAAA,UAAAC,OAAA,GAAAV,MAAA,CAAAW,YAAA,CAAAC,GAAA,4BAAAF,OAAA,CAAAG,MAAA,kBAAAH,OAAA,CAAAG,MAAA,aAAqD;IACrDpB,EAAA,CAAAK,SAAA,EAA0D;IAA1DL,EAAA,CAAAgB,UAAA,UAAAK,OAAA,GAAAd,MAAA,CAAAW,YAAA,CAAAC,GAAA,4BAAAE,OAAA,CAAAD,MAAA,kBAAAC,OAAA,CAAAD,MAAA,kBAA0D;IAC1DpB,EAAA,CAAAK,SAAA,EAA0D;IAA1DL,EAAA,CAAAgB,UAAA,UAAAM,OAAA,GAAAf,MAAA,CAAAW,YAAA,CAAAC,GAAA,4BAAAG,OAAA,CAAAF,MAAA,kBAAAE,OAAA,CAAAF,MAAA,kBAA0D;IAC1DpB,EAAA,CAAAK,SAAA,EAA2D;IAA3DL,EAAA,CAAAgB,UAAA,UAAAO,OAAA,GAAAhB,MAAA,CAAAW,YAAA,CAAAC,GAAA,4BAAAI,OAAA,CAAAH,MAAA,kBAAAG,OAAA,CAAAH,MAAA,mBAA2D;IAC3DpB,EAAA,CAAAK,SAAA,EAA+D;IAA/DL,EAAA,CAAAgB,UAAA,UAAAQ,OAAA,GAAAjB,MAAA,CAAAW,YAAA,CAAAC,GAAA,4BAAAK,OAAA,CAAAJ,MAAA,kBAAAI,OAAA,CAAAJ,MAAA,uBAA+D;;;;;IAiBtEpB,EAAA,CAAAC,cAAA,WAA8D;IAAAD,EAAA,CAAAE,MAAA,oCAAmB;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;;IACxFH,EAAA,CAAAC,cAAA,WAA+D;IAAAD,EAAA,CAAAE,MAAA,6CAAsC;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;;IAF9GH,EAAA,CAAAC,cAAA,cAAwH;IAEtHD,EADA,CAAAU,UAAA,IAAAoB,8CAAA,mBAA8D,IAAAC,8CAAA,mBACC;IACjE/B,EAAA,CAAAG,YAAA,EAAM;;;;;;IAFGH,EAAA,CAAAK,SAAA,EAAqD;IAArDL,EAAA,CAAAgB,UAAA,UAAAC,OAAA,GAAAV,MAAA,CAAAW,YAAA,CAAAC,GAAA,4BAAAF,OAAA,CAAAG,MAAA,kBAAAH,OAAA,CAAAG,MAAA,aAAqD;IACrDpB,EAAA,CAAAK,SAAA,EAAsD;IAAtDL,EAAA,CAAAgB,UAAA,UAAAK,OAAA,GAAAd,MAAA,CAAAW,YAAA,CAAAC,GAAA,4BAAAE,OAAA,CAAAD,MAAA,kBAAAC,OAAA,CAAAD,MAAA,cAAsD;;;;;IAiB7DpB,EAAA,CAAAC,cAAA,WAAuE;IAAAD,EAAA,CAAAE,MAAA,6DAAkC;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;;IAChHH,EAAA,CAAAC,cAAA,WAAuG;IAAAD,EAAA,CAAAE,MAAA,mCAAuB;IAAAF,EAAA,CAAAG,YAAA,EAAO;;;;;IAFvIH,EAAA,CAAAC,cAAA,cAA0I;IAExID,EADA,CAAAU,UAAA,IAAAsB,8CAAA,mBAAuE,IAAAC,8CAAA,mBACgC;IACzGjC,EAAA,CAAAG,YAAA,EAAM;;;;;;IAFGH,EAAA,CAAAK,SAAA,EAA8D;IAA9DL,EAAA,CAAAgB,UAAA,UAAAC,OAAA,GAAAV,MAAA,CAAAW,YAAA,CAAAC,GAAA,qCAAAF,OAAA,CAAAG,MAAA,kBAAAH,OAAA,CAAAG,MAAA,aAA8D;IAC9DpB,EAAA,CAAAK,SAAA,EAA8F;IAA9FL,EAAA,CAAAgB,UAAA,UAAAT,MAAA,CAAAW,YAAA,CAAAE,MAAA,kBAAAb,MAAA,CAAAW,YAAA,CAAAE,MAAA,2BAAAC,OAAA,GAAAd,MAAA,CAAAW,YAAA,CAAAC,GAAA,qCAAAE,OAAA,CAAAa,OAAA,EAA8F;;;;;IAWvGlC,EAAA,CAAAI,SAAA,cAAmH;;;;;;IACnHJ,EAAA,CAAAC,cAAA,cAA+F;IAC7FD,EAAA,CAAAI,SAAA,eAAsK;IACxKJ,EAAA,CAAAG,YAAA,EAAM;;;AAqBtB,OAAM,MAAOgC,uBAAuB;EASxBC,EAAA;EACAC,cAAA;EACAC,MAAA;EACAC,KAAA;EACAC,eAAA;EACAC,YAAA;EAbVvB,YAAY;EACZV,YAAY,GAAG,EAAE;EACjBC,eAAe,GAAG,EAAE;EACpBiC,UAAU,GAAG,KAAK;EAClBC,KAAK,GAAW,EAAE;EAClBC,SAAS,GAAW,EAAE;EAEtBC,YACUT,EAAe,EACfC,cAA8B,EAC9BC,MAAc,EACdC,KAAqB,EACrBC,eAAgC,EAChCC,YAAiC;IALjC,KAAAL,EAAE,GAAFA,EAAE;IACF,KAAAC,cAAc,GAAdA,cAAc;IACd,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,KAAK,GAALA,KAAK;IACL,KAAAC,eAAe,GAAfA,eAAe;IACf,KAAAC,YAAY,GAAZA,YAAY;IAEpB,IAAI,CAACvB,YAAY,GAAG,IAAI,CAACkB,EAAE,CAACU,KAAK,CAAC;MAChCC,IAAI,EAAE,CAAC,EAAE,EAAE,CACTrD,UAAU,CAACsD,QAAQ,EACnBtD,UAAU,CAACuD,SAAS,CAAC,CAAC,CAAC,EACvBvD,UAAU,CAACwD,SAAS,CAAC,GAAG,CAAC,EACzB,IAAI,CAACC,aAAa,CACnB,CAAC;MACFC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC1D,UAAU,CAACsD,QAAQ,EAAE,IAAI,CAACK,cAAc,CAAC,CAAC;MACvDC,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC5D,UAAU,CAACsD,QAAQ,EAAEtD,UAAU,CAACuD,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;MAC3DM,cAAc,EAAE,CAAC,EAAE,EAAE,CAAC7D,UAAU,CAACsD,QAAQ,CAAC;KAC3C,EAAE;MAAEQ,UAAU,EAAE,IAAI,CAACC;IAAsB,CAAE,CAAC;EACjD;EAEAC,QAAQA,CAAA;IACN,IAAI,CAACnB,KAAK,CAACoB,WAAW,CAACC,SAAS,CAAEC,MAAM,IAAI;MAC1C;MACA,IAAI,CAAClB,KAAK,GAAGkB,MAAM,CAAC,OAAO,CAAC,IAAI,SAAS;MACzC,IAAI,CAACjB,SAAS,GAAG,IAAI,CAACkB,YAAY,CAAC,IAAI,CAACnB,KAAK,CAAC;IAChD,CAAC,CAAC;EACJ;EAEA;EACAQ,aAAaA,CAACY,OAAwB;IACpC,IAAI,CAACA,OAAO,CAACC,KAAK,EAAE,OAAO,IAAI;IAE/B,MAAMjB,IAAI,GAAGgB,OAAO,CAACC,KAAe;IAEpC;IACA,IAAIjB,IAAI,CAACkB,IAAI,EAAE,KAAKlB,IAAI,EAAE;MACxB,OAAO;QAAEmB,qBAAqB,EAAE;MAAI,CAAE;IACxC;IAEA;IACA;IACA,MAAMC,YAAY,GAAG,qCAAqC;IAC1D,IAAI,CAACA,YAAY,CAACC,IAAI,CAACrB,IAAI,CAAC,EAAE;MAC5B,OAAO;QAAEsB,iBAAiB,EAAE;MAAI,CAAE;IACpC;IAEA,OAAO,IAAI;EACb;EAEA;EACAhB,cAAcA,CAACU,OAAwB;IACrC,IAAI,CAACA,OAAO,CAACC,KAAK,EAAE,OAAO,IAAI;IAE/B,MAAMZ,KAAK,GAAGW,OAAO,CAACC,KAAe;IAErC;IACA,IAAIZ,KAAK,CAACa,IAAI,EAAE,KAAKb,KAAK,EAAE;MAC1B,OAAO;QAAEkB,aAAa,EAAE;MAAI,CAAE;IAChC;IAEA;IACA,IAAIlB,KAAK,CAACmB,QAAQ,CAAC,GAAG,CAAC,IAAInB,KAAK,CAACmB,QAAQ,CAAC,GAAG,CAAC,IAAInB,KAAK,CAACmB,QAAQ,CAAC,GAAG,CAAC,EAAE;MACrE,OAAO;QAAEC,cAAc,EAAE;MAAI,CAAE;IACjC;IAEA;IACA,MAAMC,UAAU,GAAG,kDAAkD;IACrE,IAAI,CAACA,UAAU,CAACL,IAAI,CAAChB,KAAK,CAAC,EAAE;MAC3B,OAAO;QAAEkB,aAAa,EAAE;MAAI,CAAE;IAChC;IAEA;IACA,MAAMI,UAAU,GAAGtB,KAAK,CAACuB,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IACtC,IAAI,CAACD,UAAU,IAAIA,UAAU,CAACC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAEC,MAAM,GAAG,CAAC,EAAE;MACvD,OAAO;QAAEC,aAAa,EAAE;MAAI,CAAE;IAChC;IAEA;IACA,MAAMC,cAAc,GAAG,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,KAAK,CAAC;IACxE,MAAMC,WAAW,GAAGL,UAAU,CAACC,KAAK,CAAC,GAAG,CAAC;IACzC,MAAMK,cAAc,GAAGD,WAAW,CAACA,WAAW,CAACH,MAAM,GAAG,CAAC,CAAC;IAE1D,IAAII,cAAc,CAACJ,MAAM,GAAG,CAAC,IAAI,CAACE,cAAc,CAACP,QAAQ,CAACS,cAAc,CAAC,EAAE;MACzE,OAAO;QAAEC,kBAAkB,EAAE;MAAI,CAAE;IACrC;IAEA,OAAO,IAAI;EACb;EAEA;EACAxB,sBAAsBA,CAACyB,IAAe;IACpC,MAAM5B,KAAK,GAAG4B,IAAI,CAAC/D,GAAG,CAAC,OAAO,CAAC,EAAE6C,KAAK;IACtC,MAAMT,cAAc,GAAG2B,IAAI,CAAC/D,GAAG,CAAC,gBAAgB,CAAC,EAAE6C,KAAK;IACxD,OAAOV,KAAK,KAAKC,cAAc,GAAG,IAAI,GAAG;MAAE4B,gBAAgB,EAAE;IAAI,CAAE;EACrE;EAEA;EACA,IAAIpC,IAAIA,CAAA;IAAK,OAAO,IAAI,CAAC7B,YAAY,CAACC,GAAG,CAAC,MAAM,CAAC,EAAE6C,KAAK;EAAE;EAC1D,IAAIZ,KAAKA,CAAA;IAAK,OAAO,IAAI,CAAClC,YAAY,CAACC,GAAG,CAAC,OAAO,CAAC,EAAE6C,KAAK;EAAE;EAC5D,IAAIV,KAAKA,CAAA;IAAK,OAAO,IAAI,CAACpC,YAAY,CAACC,GAAG,CAAC,OAAO,CAAC,EAAE6C,KAAK;EAAE;EAC5D,IAAIT,cAAcA,CAAA;IAAK,OAAO,IAAI,CAACrC,YAAY,CAACC,GAAG,CAAC,gBAAgB,CAAC,EAAE6C,KAAK;EAAE;EAE9E;EACAoB,uBAAuBA,CAAA;IACrBC,MAAM,CAACC,IAAI,CAAC,IAAI,CAACpE,YAAY,CAACqE,QAAQ,CAAC,CAACC,OAAO,CAACC,GAAG,IAAG;MACpD,MAAM1B,OAAO,GAAG,IAAI,CAAC7C,YAAY,CAACC,GAAG,CAACsE,GAAG,CAAC;MAC1C1B,OAAO,EAAE2B,aAAa,EAAE;IAC1B,CAAC,CAAC;EACJ;EAEA5B,YAAYA,CAACnB,KAAa;IACxB,QAAQA,KAAK;MACX;MACA,KAAK,IAAI;QACP,OAAO,4BAA4B;MACrC,KAAK,QAAQ;QACX,OAAO,gCAAgC;MACzC,KAAK,WAAW;QACd,OAAO,gCAAgC;MAEzC;MACA,KAAK,MAAM;QACT,OAAO,gBAAgB;MACzB,KAAK,SAAS;QACZ,OAAO,uBAAuB;MAChC,KAAK,cAAc;QACjB,OAAO,6BAA6B;MACtC,KAAK,aAAa;QAChB,OAAO,2BAA2B;MACpC;QACE,OAAO,uBAAuB;IAClC;EACF;EAEA;;;EAGAgD,oBAAoBA,CAAA;IAClB,OAAO,CAAC,IAAI,EAAE,QAAQ,EAAE,WAAW,CAAC,CAACpB,QAAQ,CAAC,IAAI,CAAC5B,KAAK,CAAC;EAC3D;EAEA;;;EAGAiD,aAAaA,CAAA;IACX,QAAQ,IAAI,CAACjD,KAAK;MAChB,KAAK,IAAI;QACP,OAAO,IAAI;MACb,KAAK,QAAQ;QACX,OAAO,IAAI;MACb,KAAK,WAAW;QACd,OAAO,IAAI;MACb;QACE,OAAO,KAAK;IAChB;EACF;EAEAkD,SAASA,CAAA;IACP,IAAI,IAAI,CAAC3E,YAAY,CAAC4E,OAAO,EAAE;MAC7B,IAAI,CAACV,uBAAuB,EAAE;MAC9B,IAAI,CAAC5E,YAAY,GAAG,4CAA4C;MAChE,IAAI,CAACC,eAAe,GAAG,EAAE;MACzB;IACF;IAEA,IAAI,CAACiC,UAAU,GAAG,IAAI;IAEtB;IACA,IAAI,IAAI,CAACC,KAAK,KAAK,MAAM,EAAE;MACzB,MAAMoD,WAAW,GAAY;QAC3BhD,IAAI,EAAE,IAAI,CAAC7B,YAAY,CAACC,GAAG,CAAC,MAAM,CAAC,EAAE6C,KAAK;QAC1CZ,KAAK,EAAE,IAAI,CAAClC,YAAY,CAACC,GAAG,CAAC,OAAO,CAAC,EAAE6C,KAAK;QAC5CV,KAAK,EAAE,IAAI,CAACpC,YAAY,CAACC,GAAG,CAAC,OAAO,CAAC,EAAE6C,KAAK;QAC5CrB,KAAK,EAAE,IAAI,CAACA,KAAK,CAAE;OACpB;MACD,IAAI,CAACN,cAAc,CAAC2D,SAAS,CAACD,WAAW,CAAC,CAACnC,SAAS,CAAC;QACnDqC,IAAI,EAAGC,aAAkB,IAAI;UAC3B,IAAI,CAAC1F,YAAY,GAAG,EAAE;UACtB,IAAI,CAACC,eAAe,GAAG,iCAAiC;UACxD,IAAI,CAACiC,UAAU,GAAG,KAAK;UACvB,IAAI,CAACxB,YAAY,CAACiF,KAAK,EAAE;UACzBC,UAAU,CAAC,MAAK;YACd,IAAI,CAAC9D,MAAM,CAAC+D,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC;UACzC,CAAC,EAAE,IAAI,CAAC;QACV,CAAC;QACDC,KAAK,EAAGC,GAAG,IAAI;UACb,IAAI,CAAC7D,UAAU,GAAG,KAAK;UACvB,IAAI,CAACjC,eAAe,GAAG,EAAE;UACzB,IAAI,CAACD,YAAY,GAAG,IAAI,CAACiC,YAAY,CAAC+D,eAAe,CAACD,GAAG,CAAC;QAC5D;OACD,CAAC;MACF;IACF;IAEA;IACAE,OAAO,CAACC,GAAG,CAAC,2DAA2D,CAAC;IACxE,MAAMX,WAAW,GAAY;MAC3BhD,IAAI,EAAE,IAAI,CAAC7B,YAAY,CAACC,GAAG,CAAC,MAAM,CAAC,EAAE6C,KAAK;MAC1CZ,KAAK,EAAE,IAAI,CAAClC,YAAY,CAACC,GAAG,CAAC,OAAO,CAAC,EAAE6C,KAAK;MAC5CV,KAAK,EAAE,IAAI,CAACpC,YAAY,CAACC,GAAG,CAAC,OAAO,CAAC,EAAE6C,KAAK;MAC5CrB,KAAK,EAAE,IAAI,CAACA;KACb;IAED,IAAI,CAACN,cAAc,CAAC2D,SAAS,CAACD,WAAW,CAAC,CAACnC,SAAS,CAAC;MACnDqC,IAAI,EAAEA,CAAA,KAAK;QACTQ,OAAO,CAACC,GAAG,CACT,kEAAkE,CACnE;QACD,IAAI,CAACC,0BAA0B,EAAE;MACnC,CAAC;MACDL,KAAK,EAAGC,GAAQ,IAAI;QAClBE,OAAO,CAACH,KAAK,CACX,oEAAoE,EACpEC,GAAG,CACJ;QACDE,OAAO,CAACH,KAAK,CAAC,cAAc,EAAEC,GAAG,CAACK,MAAM,CAAC;QACzCH,OAAO,CAACH,KAAK,CAAC,oBAAoB,EAAEC,GAAG,CAACD,KAAK,CAAC;QAC9CG,OAAO,CAACH,KAAK,CAAC,kBAAkB,EAAEC,GAAG,CAAC;QAEtC;QACA,IAAIA,GAAG,CAACK,MAAM,KAAK,GAAG,EAAE;UACtBH,OAAO,CAACC,GAAG,CAAC,+DAA+D,CAAC;UAC5E,IAAI,CAAChE,UAAU,GAAG,KAAK;UACvB,IAAI,CAAClC,YAAY,GAAG,+DAA+D;UACnFiG,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAE,IAAI,CAAClG,YAAY,CAAC;UAChE,OAAO,CAAC;QACV;QAEA,IAAI,CAACkC,UAAU,GAAG,KAAK;QACvB,IAAI,CAAClC,YAAY,GAAG,IAAI,CAACiC,YAAY,CAAC+D,eAAe,CAACD,GAAG,CAAC;QAC1DE,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAE,IAAI,CAAClG,YAAY,CAAC;MAClE;KACD,CAAC;EACJ;EAEQmG,0BAA0BA,CAAA;IAChC,IAAI,CAACnE,eAAe,CACjBqE,aAAa,CAAC;MAAElE,KAAK,EAAE,IAAI,CAACA,KAAK;MAAES,KAAK,EAAE,IAAI,CAAClC,YAAY,CAACC,GAAG,CAAC,OAAO,CAAC,EAAE6C;IAAK,CAAE,CAAC,CAClFJ,SAAS,CAAC;MACTqC,IAAI,EAAGa,GAAmB,IAAI;QAC5BL,OAAO,CAACC,GAAG,CACT,mDAAmD,EACnDI,GAAG,CACJ;QACDL,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEI,GAAG,CAACC,EAAE,CAAC;QACvC,IAAI,CAACC,wBAAwB,CAACF,GAAG,CAACC,EAAE,CAAC;MACvC,CAAC;MACDT,KAAK,EAAGC,GAAQ,IAAI;QAClBE,OAAO,CAACH,KAAK,CAAC,+CAA+C,EAAEC,GAAG,CAAC;QACnE,IAAI,CAAC7D,UAAU,GAAG,KAAK;QACvB,IAAI,CAAClC,YAAY,GAAG,IAAI,CAACiC,YAAY,CAAC+D,eAAe,CAACD,GAAG,CAAC;MAC5D;KACD,CAAC;EACN;EAEQS,wBAAwBA,CAACC,SAAiB;IAChDR,OAAO,CAACC,GAAG,CAAC,mDAAmD,CAAC;IAChED,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEO,SAAS,CAAC;IAC1CR,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAE,IAAIQ,IAAI,EAAE,CAACC,WAAW,EAAE,CAAC;IAExD;IACA,IAAI,OAAOC,MAAM,KAAK,WAAW,EAAE;MACjCX,OAAO,CAACC,GAAG,CACT,+DAA+D,CAChE;MACDN,UAAU,CAAC,MAAM,IAAI,CAACY,wBAAwB,CAACC,SAAS,CAAC,EAAE,GAAG,CAAC;MAC/D;IACF;IAEAR,OAAO,CAACC,GAAG,CACT,qEAAqE,CACtE;IACDD,OAAO,CAACC,GAAG,CAAC,4BAA4B,EAAE,OAAOU,MAAM,CAAC;IACxDX,OAAO,CAACC,GAAG,CACT,mCAAmC,EACnC5G,WAAW,CAACuH,MAAM,CAACC,cAAc,CAACC,SAAS,CAAC,CAAC,EAAE,EAAE,CAAC,GAAG,KAAK,CAC3D;IAED,IAAI;MACFd,OAAO,CAACC,GAAG,CAAC,kDAAkD,CAAC;MAC/D,MAAMW,MAAM,GAAGD,MAAM,CAACtH,WAAW,CAACuH,MAAM,CAACC,cAAc,CAAC;MACxDb,OAAO,CAACC,GAAG,CACT,6DAA6D,CAC9D;MACDD,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEO,SAAS,CAAC;MAEhD;MACAI,MAAM,CACHG,kBAAkB,CAAC;QAAEP;MAAS,CAAE,CAAC,CACjCQ,IAAI,CAAEC,MAAW,IAAI;QACpBjB,OAAO,CAACC,GAAG,CACT,sDAAsD,EACtDgB,MAAM,CACP;QAED,IAAIA,MAAM,CAACpB,KAAK,EAAE;UAChBG,OAAO,CAACH,KAAK,CACX,+CAA+C,EAC/CoB,MAAM,CAACpB,KAAK,CACb;UACDG,OAAO,CAACH,KAAK,CAAC,kBAAkB,EAAEoB,MAAM,CAACpB,KAAK,CAACqB,IAAI,CAAC;UACpDlB,OAAO,CAACH,KAAK,CAAC,qBAAqB,EAAEoB,MAAM,CAACpB,KAAK,CAACsB,OAAO,CAAC;UAE1D;UACA,IACEF,MAAM,CAACpB,KAAK,CAACsB,OAAO,IACpBF,MAAM,CAACpB,KAAK,CAACsB,OAAO,CAACrD,QAAQ,CAAC,eAAe,CAAC,EAC9C;YACAkC,OAAO,CAACC,GAAG,CACT,mFAAmF,CACpF;YACD;UACF;UACA,IAAI,CAAChE,UAAU,GAAG,KAAK;UACvB,IAAI,CAAClC,YAAY,GACfkH,MAAM,CAACpB,KAAK,CAACsB,OAAO,IAAI,8BAA8B;QAC1D,CAAC,MAAM;UACLnB,OAAO,CAACC,GAAG,CAAC,mDAAmD,CAAC;QAClE;MACF,CAAC,CAAC,CACDmB,KAAK,CAAEvB,KAAU,IAAI;QACpBG,OAAO,CAACH,KAAK,CAAC,8CAA8C,EAAEA,KAAK,CAAC;QACpEG,OAAO,CAACH,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAACwB,KAAK,CAAC;QAE/C;QACA,IACExB,KAAK,CAACsB,OAAO,KACZtB,KAAK,CAACsB,OAAO,CAACrD,QAAQ,CAAC,eAAe,CAAC,IACtC+B,KAAK,CAACsB,OAAO,CAACrD,QAAQ,CAAC,KAAK,CAAC,CAAC,EAChC;UACAkC,OAAO,CAACC,GAAG,CACT,8EAA8E,CAC/E;UACDD,OAAO,CAACC,GAAG,CACT,wEAAwE,CACzE;UAED;UACA,MAAMqB,WAAW,GAAG,mCAAmCd,SAAS,EAAE;UAClER,OAAO,CAACC,GAAG,CAAC,oBAAoB,EAAEqB,WAAW,CAAC;UAC9CC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAGH,WAAW;UAClC;QACF;QAEA,IAAI,CAACrF,UAAU,GAAG,KAAK;QACvB,IAAI,CAAClC,YAAY,GAAG,+CAA+C;MACrE,CAAC,CAAC;IACN,CAAC,CAAC,OAAO8F,KAAU,EAAE;MACnBG,OAAO,CAACH,KAAK,CAAC,iDAAiD,EAAEA,KAAK,CAAC;MACvEG,OAAO,CAACH,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3C,IAAI,CAAC5D,UAAU,GAAG,KAAK;MACvB,IAAI,CAAClC,YAAY,GACf,yDAAyD;IAC7D;EACF;;qCA3WW2B,uBAAuB,EAAAnC,EAAA,CAAAmI,iBAAA,CAAAC,EAAA,CAAA3I,WAAA,GAAAO,EAAA,CAAAmI,iBAAA,CAAAE,EAAA,CAAA1I,cAAA,GAAAK,EAAA,CAAAmI,iBAAA,CAAAG,EAAA,CAAAjJ,MAAA,GAAAW,EAAA,CAAAmI,iBAAA,CAAAG,EAAA,CAAAlJ,cAAA,GAAAY,EAAA,CAAAmI,iBAAA,CAAAI,EAAA,CAAA3I,eAAA,GAAAI,EAAA,CAAAmI,iBAAA,CAAAK,EAAA,CAAA3I,mBAAA;EAAA;;UAAvBsC,uBAAuB;IAAAsG,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,iCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QA9LxB/I,EARR,CAAAC,cAAA,iBAAoF,aACpD,aAEqC,aAGjB,YAEiC;QAC3ED,EAAA,CAAAE,MAAA,uBACF;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAGLH,EAAA,CAAAC,cAAA,WAAsD;QACpDD,EAAA,CAAAE,MAAA,2FACF;QAAAF,EAAA,CAAAG,YAAA,EAAI;QAKAH,EAFJ,CAAAC,cAAA,aAAmE,aACnC,cACiH;;QAC3ID,EAAA,CAAAC,cAAA,cAA2E;QACzED,EAAA,CAAAI,SAAA,gBAAyb;QAC3bJ,EAAA,CAAAG,YAAA,EAAM;QACNH,EAAA,CAAAE,MAAA,IACF;QAAAF,EAAA,CAAAG,YAAA,EAAM;;QACNH,EAAA,CAAAC,cAAA,aAAiC;QAO/BD,EANA,CAAAU,UAAA,KAAAuI,wCAAA,mBAA6B,KAAAC,wCAAA,mBACI,KAAAC,wCAAA,mBACG,KAAAC,wCAAA,mBACL,KAAAC,wCAAA,mBACG,KAAAC,wCAAA,mBACK,KAAAC,wCAAA,mBACD;QAE1CvJ,EADE,CAAAG,YAAA,EAAI,EACA;QAIJH,EADF,CAAAC,cAAA,eAAyB,aACkF;QACvGD,EAAA,CAAAE,MAAA,6BACF;QAEJF,EAFI,CAAAG,YAAA,EAAI,EACA,EACF;QAIJH,EADF,CAAAC,cAAA,eAAuB,eACgD;QACnED,EAAA,CAAAI,SAAA,eAAqD;QACrDJ,EAAA,CAAAC,cAAA,gBAA4B;QAAAD,EAAA,CAAAE,MAAA,uCAAqB;QACnDF,EADmD,CAAAG,YAAA,EAAO,EACpD;QACNH,EAAA,CAAAC,cAAA,eAAqE;QACnED,EAAA,CAAAI,SAAA,eAAqD;QACrDJ,EAAA,CAAAC,cAAA,gBAA4B;QAAAD,EAAA,CAAAE,MAAA,0BAAa;QAC3CF,EAD2C,CAAAG,YAAA,EAAO,EAC5C;QACNH,EAAA,CAAAC,cAAA,eAAqE;QACnED,EAAA,CAAAI,SAAA,eAAqD;QACrDJ,EAAA,CAAAC,cAAA,gBAA4B;QAAAD,EAAA,CAAAE,MAAA,6BAAgB;QAGlDF,EAHkD,CAAAG,YAAA,EAAO,EAC/C,EACF,EACF;QAKFH,EAFJ,CAAAC,cAAA,eAA2E,eAC3C,cACsB;QAAAD,EAAA,CAAAE,MAAA,mBAAW;QAAAF,EAAA,CAAAG,YAAA,EAAK;QAClEH,EAAA,CAAAC,cAAA,aAAyB;QAAAD,EAAA,CAAAE,MAAA,6CAAgC;QAC3DF,EAD2D,CAAAG,YAAA,EAAI,EACzD;QAYNH,EATA,CAAAU,UAAA,KAAA8I,uCAAA,kBAAsF,KAAAC,uCAAA,kBASO;QAU7FzJ,EAAA,CAAAC,cAAA,gBAA4E;QAA3CD,EAAA,CAAA0J,UAAA,sBAAAC,2DAAA;UAAA,OAAYX,GAAA,CAAAnD,SAAA,EAAW;QAAA,EAAC;QAGrD7F,EADF,CAAAC,cAAA,WAAK,iBACyD;QAAAD,EAAA,CAAAE,MAAA,qBAAa;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QACjFH,EAAA,CAAAI,SAAA,iBAME;QAEFJ,EAAA,CAAAU,UAAA,KAAAkJ,uCAAA,kBAAsH;QAOxH5J,EAAA,CAAAG,YAAA,EAAM;QAIJH,EADF,CAAAC,cAAA,WAAK,iBACyD;QAAAD,EAAA,CAAAE,MAAA,cAAM;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QAC1EH,EAAA,CAAAI,SAAA,iBAOE;QAEFJ,EAAA,CAAAU,UAAA,KAAAmJ,uCAAA,kBAAwH;QAO1H7J,EAAA,CAAAG,YAAA,EAAM;QAIJH,EADF,CAAAC,cAAA,WAAK,iBACyD;QAAAD,EAAA,CAAAE,MAAA,aAAK;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QACzEH,EAAA,CAAAI,SAAA,iBAOE;QAEFJ,EAAA,CAAAU,UAAA,KAAAoJ,uCAAA,kBAAwH;QAI1H9J,EAAA,CAAAG,YAAA,EAAM;QAIJH,EADF,CAAAC,cAAA,WAAK,iBACyD;QAAAD,EAAA,CAAAE,MAAA,uBAAe;QAAAF,EAAA,CAAAG,YAAA,EAAQ;QACnFH,EAAA,CAAAI,SAAA,iBAOE;QAEFJ,EAAA,CAAAU,UAAA,KAAAqJ,uCAAA,kBAA0I;QAI5I/J,EAAA,CAAAG,YAAA,EAAM;QAGNH,EAAA,CAAAC,cAAA,kBAKC;QAECD,EADA,CAAAU,UAAA,KAAAsJ,uCAAA,kBAA6G,KAAAC,4CAAA,kBACd;QAG/FjK,EAAA,CAAAE,MAAA,IACF;QAAAF,EAAA,CAAAG,YAAA,EAAS;QAIPH,EADF,CAAAC,cAAA,eAAyB,aAC4F;QACjHD,EAAA,CAAAE,MAAA,0CACF;QAMZF,EANY,CAAAG,YAAA,EAAI,EACA,EACD,EACH,EACF,EACF,EACE;QAGVH,EAAA,CAAAI,SAAA,kBAAyB;;;;;;;;;;;QA1KXJ,EAAA,CAAAK,SAAA,IACF;QADEL,EAAA,CAAAkK,kBAAA,MAAAlB,GAAA,CAAApG,SAAA,MACF;QAES5C,EAAA,CAAAK,SAAA,GAAoB;QAApBL,EAAA,CAAAgB,UAAA,SAAAgI,GAAA,CAAArG,KAAA,UAAoB;QACpB3C,EAAA,CAAAK,SAAA,EAAwB;QAAxBL,EAAA,CAAAgB,UAAA,SAAAgI,GAAA,CAAArG,KAAA,cAAwB;QACxB3C,EAAA,CAAAK,SAAA,EAA2B;QAA3BL,EAAA,CAAAgB,UAAA,SAAAgI,GAAA,CAAArG,KAAA,iBAA2B;QAC3B3C,EAAA,CAAAK,SAAA,EAAsB;QAAtBL,EAAA,CAAAgB,UAAA,SAAAgI,GAAA,CAAArG,KAAA,YAAsB;QACtB3C,EAAA,CAAAK,SAAA,EAAyB;QAAzBL,EAAA,CAAAgB,UAAA,SAAAgI,GAAA,CAAArG,KAAA,eAAyB;QACzB3C,EAAA,CAAAK,SAAA,EAA8B;QAA9BL,EAAA,CAAAgB,UAAA,SAAAgI,GAAA,CAAArG,KAAA,oBAA8B;QAC9B3C,EAAA,CAAAK,SAAA,EAA6B;QAA7BL,EAAA,CAAAgB,UAAA,SAAAgI,GAAA,CAAArG,KAAA,mBAA6B;QAqCpC3C,EAAA,CAAAK,SAAA,IAAkB;QAAlBL,EAAA,CAAAgB,UAAA,SAAAgI,GAAA,CAAAxI,YAAA,CAAkB;QASlBR,EAAA,CAAAK,SAAA,EAAqB;QAArBL,EAAA,CAAAgB,UAAA,SAAAgI,GAAA,CAAAvI,eAAA,CAAqB;QAUrBT,EAAA,CAAAK,SAAA,EAA0B;QAA1BL,EAAA,CAAAgB,UAAA,cAAAgI,GAAA,CAAA9H,YAAA,CAA0B;QAS1BlB,EAAA,CAAAK,SAAA,GAA0T;QAA1TL,EAAA,CAAAmK,UAAA,qMAAAC,QAAA,GAAApB,GAAA,CAAA9H,YAAA,CAAAC,GAAA,2BAAAiJ,QAAA,CAAAtE,OAAA,OAAAsE,QAAA,GAAApB,GAAA,CAAA9H,YAAA,CAAAC,GAAA,2BAAAiJ,QAAA,CAAAlI,OAAA,0CAA0T;QAGtTlC,EAAA,CAAAK,SAAA,EAA4E;QAA5EL,EAAA,CAAAgB,UAAA,WAAAqJ,QAAA,GAAArB,GAAA,CAAA9H,YAAA,CAAAC,GAAA,2BAAAkJ,QAAA,CAAAvE,OAAA,OAAAuE,QAAA,GAAArB,GAAA,CAAA9H,YAAA,CAAAC,GAAA,2BAAAkJ,QAAA,CAAAnI,OAAA,EAA4E;QAkBhFlC,EAAA,CAAAK,SAAA,GAA4T;QAA5TL,EAAA,CAAAmK,UAAA,qMAAAG,QAAA,GAAAtB,GAAA,CAAA9H,YAAA,CAAAC,GAAA,4BAAAmJ,QAAA,CAAAxE,OAAA,OAAAwE,QAAA,GAAAtB,GAAA,CAAA9H,YAAA,CAAAC,GAAA,4BAAAmJ,QAAA,CAAApI,OAAA,0CAA4T;QAGxTlC,EAAA,CAAAK,SAAA,EAA8E;QAA9EL,EAAA,CAAAgB,UAAA,WAAAuJ,QAAA,GAAAvB,GAAA,CAAA9H,YAAA,CAAAC,GAAA,4BAAAoJ,QAAA,CAAAzE,OAAA,OAAAyE,QAAA,GAAAvB,GAAA,CAAA9H,YAAA,CAAAC,GAAA,4BAAAoJ,QAAA,CAAArI,OAAA,EAA8E;QAkBlFlC,EAAA,CAAAK,SAAA,GAA4T;QAA5TL,EAAA,CAAAmK,UAAA,qMAAAK,QAAA,GAAAxB,GAAA,CAAA9H,YAAA,CAAAC,GAAA,4BAAAqJ,QAAA,CAAA1E,OAAA,OAAA0E,QAAA,GAAAxB,GAAA,CAAA9H,YAAA,CAAAC,GAAA,4BAAAqJ,QAAA,CAAAtI,OAAA,0CAA4T;QAGxTlC,EAAA,CAAAK,SAAA,EAA8E;QAA9EL,EAAA,CAAAgB,UAAA,WAAAyJ,QAAA,GAAAzB,GAAA,CAAA9H,YAAA,CAAAC,GAAA,4BAAAsJ,QAAA,CAAA3E,OAAA,OAAA2E,QAAA,GAAAzB,GAAA,CAAA9H,YAAA,CAAAC,GAAA,4BAAAsJ,QAAA,CAAAvI,OAAA,EAA8E;QAelFlC,EAAA,CAAAK,SAAA,GAA8U;QAA9UL,EAAA,CAAAmK,UAAA,qMAAAO,QAAA,GAAA1B,GAAA,CAAA9H,YAAA,CAAAC,GAAA,qCAAAuJ,QAAA,CAAA5E,OAAA,OAAA4E,QAAA,GAAA1B,GAAA,CAAA9H,YAAA,CAAAC,GAAA,qCAAAuJ,QAAA,CAAAxI,OAAA,0CAA8U;QAG1UlC,EAAA,CAAAK,SAAA,EAAgG;QAAhGL,EAAA,CAAAgB,UAAA,WAAA2J,QAAA,GAAA3B,GAAA,CAAA9H,YAAA,CAAAC,GAAA,qCAAAwJ,QAAA,CAAA7E,OAAA,OAAA6E,QAAA,GAAA3B,GAAA,CAAA9H,YAAA,CAAAC,GAAA,qCAAAwJ,QAAA,CAAAzI,OAAA,EAAgG;QAStGlC,EAAA,CAAAK,SAAA,EAA+C;QAA/CL,EAAA,CAAAgB,UAAA,aAAAgI,GAAA,CAAA9H,YAAA,CAAA4E,OAAA,IAAAkD,GAAA,CAAAtG,UAAA,CAA+C;QAIzC1C,EAAA,CAAAK,SAAA,EAAgB;QAAhBL,EAAA,CAAAgB,UAAA,SAAAgI,GAAA,CAAAtG,UAAA,CAAgB;QAChB1C,EAAA,CAAAK,SAAA,EAAiB;QAAjBL,EAAA,CAAAgB,UAAA,UAAAgI,GAAA,CAAAtG,UAAA,CAAiB;QAGvB1C,EAAA,CAAAK,SAAA,EACF;QADEL,EAAA,CAAAkK,kBAAA,MAAAlB,GAAA,CAAAtG,UAAA,2CACF;;;mBAtLFpD,YAAY,EAAAsL,EAAA,CAAAC,IAAA,EAAEtL,WAAW,EAAA6I,EAAA,CAAA0C,aAAA,EAAA1C,EAAA,CAAA2C,oBAAA,EAAA3C,EAAA,CAAA4C,eAAA,EAAA5C,EAAA,CAAA6C,oBAAA,EAAEzL,mBAAmB,EAAA4I,EAAA,CAAA8C,kBAAA,EAAA9C,EAAA,CAAA+C,eAAA,EAAEpL,eAAe;IAAAqL,aAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}