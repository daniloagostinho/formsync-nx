{"ast":null,"code":"import { inject } from '@angular/core';\nimport { environment } from '../../environments/environment';\nimport { SecurityService } from '../services/security.service';\nexport const SecurityInterceptor = (req, next) => {\n  const securityService = inject(SecurityService);\n  // Verificar se o ambiente √© seguro\n  if (environment.production && !securityService.isSecureEnvironment()) {\n    console.warn('üîí Tentativa de requisi√ß√£o HTTP em ambiente de produ√ß√£o. Redirecionando para HTTPS.');\n    // Em produ√ß√£o, redirecionar para HTTPS\n    const httpsUrl = req.url.replace('http:', 'https:');\n    req = req.clone({\n      url: httpsUrl\n    });\n  }\n  // Adicionar headers de seguran√ßa\n  req = req.clone({\n    setHeaders: {\n      'X-Content-Type-Options': 'nosniff',\n      'X-Frame-Options': 'DENY',\n      'X-XSS-Protection': '1; mode=block',\n      'Referrer-Policy': 'strict-origin-when-cross-origin',\n      'Strict-Transport-Security': environment.production ? 'max-age=31536000; includeSubDomains' : '',\n      'Content-Security-Policy': environment.production ? \"default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://www.googletagmanager.com https://www.google-analytics.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https:; frame-src 'self' https://js.stripe.com;\" : '',\n      'Permissions-Policy': 'geolocation=(), microphone=(), camera=()',\n      'X-CSRF-Token': securityService.generateCSRFToken()\n    }\n  });\n  // Log de seguran√ßa para desenvolvimento\n  if (!environment.production) {\n    console.log('üîí [SECURITY_INTERCEPTOR] Headers de seguran√ßa adicionados:', req.headers);\n  }\n  return next(req);\n};","map":{"version":3,"names":["inject","environment","SecurityService","SecurityInterceptor","req","next","securityService","production","isSecureEnvironment","console","warn","httpsUrl","url","replace","clone","setHeaders","generateCSRFToken","log","headers"],"sources":["/home/danilo/√Årea de trabalho/formsync-nx/apps/front/src/app/interceptors/security.interceptor.ts"],"sourcesContent":["import { HttpInterceptorFn, HttpRequest, HttpHandlerFn, HttpEvent } from '@angular/common/http';\nimport { inject } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { SecurityService } from '../services/security.service';\n\nexport const SecurityInterceptor: HttpInterceptorFn = (\n  req: HttpRequest<unknown>,\n  next: HttpHandlerFn\n): Observable<HttpEvent<unknown>> => {\n  const securityService = inject(SecurityService);\n\n  // Verificar se o ambiente √© seguro\n  if (environment.production && !securityService.isSecureEnvironment()) {\n    console.warn('üîí Tentativa de requisi√ß√£o HTTP em ambiente de produ√ß√£o. Redirecionando para HTTPS.');\n    // Em produ√ß√£o, redirecionar para HTTPS\n    const httpsUrl = req.url.replace('http:', 'https:');\n    req = req.clone({ url: httpsUrl });\n  }\n\n  // Adicionar headers de seguran√ßa\n  req = req.clone({\n    setHeaders: {\n      'X-Content-Type-Options': 'nosniff',\n      'X-Frame-Options': 'DENY',\n      'X-XSS-Protection': '1; mode=block',\n      'Referrer-Policy': 'strict-origin-when-cross-origin',\n      'Strict-Transport-Security': environment.production ? 'max-age=31536000; includeSubDomains' : '',\n      'Content-Security-Policy': environment.production ? \n        \"default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval' https://www.googletagmanager.com https://www.google-analytics.com; style-src 'self' 'unsafe-inline' https://fonts.googleapis.com; font-src 'self' https://fonts.gstatic.com; img-src 'self' data: https:; connect-src 'self' https:; frame-src 'self' https://js.stripe.com;\" : '',\n      'Permissions-Policy': 'geolocation=(), microphone=(), camera=()',\n      'X-CSRF-Token': securityService.generateCSRFToken()\n    }\n  });\n\n  // Log de seguran√ßa para desenvolvimento\n  if (!environment.production) {\n    console.log('üîí [SECURITY_INTERCEPTOR] Headers de seguran√ßa adicionados:', req.headers);\n  }\n\n  return next(req);\n};\n"],"mappings":"AACA,SAASA,MAAM,QAAQ,eAAe;AAEtC,SAASC,WAAW,QAAQ,gCAAgC;AAC5D,SAASC,eAAe,QAAQ,8BAA8B;AAE9D,OAAO,MAAMC,mBAAmB,GAAsBA,CACpDC,GAAyB,EACzBC,IAAmB,KACe;EAClC,MAAMC,eAAe,GAAGN,MAAM,CAACE,eAAe,CAAC;EAE/C;EACA,IAAID,WAAW,CAACM,UAAU,IAAI,CAACD,eAAe,CAACE,mBAAmB,EAAE,EAAE;IACpEC,OAAO,CAACC,IAAI,CAAC,qFAAqF,CAAC;IACnG;IACA,MAAMC,QAAQ,GAAGP,GAAG,CAACQ,GAAG,CAACC,OAAO,CAAC,OAAO,EAAE,QAAQ,CAAC;IACnDT,GAAG,GAAGA,GAAG,CAACU,KAAK,CAAC;MAAEF,GAAG,EAAED;IAAQ,CAAE,CAAC;EACpC;EAEA;EACAP,GAAG,GAAGA,GAAG,CAACU,KAAK,CAAC;IACdC,UAAU,EAAE;MACV,wBAAwB,EAAE,SAAS;MACnC,iBAAiB,EAAE,MAAM;MACzB,kBAAkB,EAAE,eAAe;MACnC,iBAAiB,EAAE,iCAAiC;MACpD,2BAA2B,EAAEd,WAAW,CAACM,UAAU,GAAG,qCAAqC,GAAG,EAAE;MAChG,yBAAyB,EAAEN,WAAW,CAACM,UAAU,GAC/C,kVAAkV,GAAG,EAAE;MACzV,oBAAoB,EAAE,0CAA0C;MAChE,cAAc,EAAED,eAAe,CAACU,iBAAiB;;GAEpD,CAAC;EAEF;EACA,IAAI,CAACf,WAAW,CAACM,UAAU,EAAE;IAC3BE,OAAO,CAACQ,GAAG,CAAC,6DAA6D,EAAEb,GAAG,CAACc,OAAO,CAAC;EACzF;EAEA,OAAOb,IAAI,CAACD,GAAG,CAAC;AAClB,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}