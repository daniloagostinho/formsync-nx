{"ast":null,"code":"import { BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class TourService {\n  tourStateSubject = new BehaviorSubject({\n    isActive: false,\n    currentStep: 0,\n    totalSteps: 0,\n    isFirstTime: false\n  });\n  tourState$ = this.tourStateSubject.asObservable();\n  TOUR_STORAGE_KEY = 'formsync_tour_completed';\n  FIRST_TIME_KEY = 'formsync_first_visit';\n  // Defini√ß√£o dos passos do tour\n  TOUR_STEPS = [{\n    id: 'dashboard-overview',\n    title: 'üéØ Dashboard',\n    content: 'Bem-vindo ao FormSync! Aqui voc√™ encontra um resumo completo das suas atividades e estat√≠sticas.',\n    target: '.dashboard-title',\n    position: 'bottom',\n    showArrow: true,\n    showOverlay: true\n  }, {\n    id: 'stats-cards',\n    title: 'üìä Estat√≠sticas',\n    content: 'Acompanhe seus dados em tempo real: total de campos, formul√°rios preenchidos e status do seu plano.',\n    target: '.stats-grid',\n    position: 'top',\n    showArrow: true,\n    showOverlay: true\n  }, {\n    id: 'quick-actions',\n    title: '‚ö° A√ß√µes R√°pidas',\n    content: 'Acesse rapidamente as principais funcionalidades: gerenciar campos, editar perfil e suporte.',\n    target: '.actions-grid',\n    position: 'top',\n    showArrow: true,\n    showOverlay: true\n  }, {\n    id: 'sidebar-navigation',\n    title: 'üß≠ Navega√ß√£o',\n    content: 'Use o menu lateral para navegar entre as diferentes se√ß√µes do FormSync.',\n    target: '.sidebar',\n    position: 'right',\n    showArrow: true,\n    showOverlay: true\n  }, {\n    id: 'templates',\n    title: 'üìù Templates',\n    content: 'Gerencie todos os Seus Formul√°rios. Crie, edite e organize seus formul√°rios personalizados.',\n    target: 'a[routerLink=\"/templates\"]',\n    position: 'right',\n    showArrow: true,\n    showOverlay: true,\n    action: () => this.highlightElement('a[routerLink=\"/templates\"]')\n  }, {\n    id: 'upload-csv',\n    title: 'üìÅ Importar CSV',\n    content: 'Importe seus dados em massa atrav√©s de arquivos CSV. Ideal para grandes volumes de informa√ß√µes.',\n    target: 'a[routerLink=\"/upload-csv\"]',\n    position: 'right',\n    showArrow: true,\n    showOverlay: true,\n    action: () => this.highlightElement('a[routerLink=\"/upload-csv\"]')\n  }, {\n    id: 'profile-settings',\n    title: 'üë§ Perfil',\n    content: 'Configure suas informa√ß√µes pessoais e prefer√™ncias da conta.',\n    target: 'a[routerLink=\"/perfil\"]',\n    position: 'right',\n    showArrow: true,\n    showOverlay: true,\n    action: () => this.highlightElement('a[routerLink=\"/perfil\"]')\n  }, {\n    id: 'upgrade-plan',\n    title: '‚≠ê Upgrade',\n    content: 'Explore planos premium para acessar mais recursos e funcionalidades avan√ßadas.',\n    target: 'a[routerLink=\"/upgrade\"]',\n    position: 'right',\n    showArrow: true,\n    showOverlay: true,\n    action: () => this.highlightElement('a[routerLink=\"/upgrade\"]')\n  }, {\n    id: 'tour-completion',\n    title: 'üéâ Tudo Pronto!',\n    content: 'Voc√™ j√° conhece os principais recursos do FormSync. Comece a usar e aproveite ao m√°ximo a plataforma!',\n    target: '.dashboard-container',\n    position: 'top',\n    showArrow: false,\n    showOverlay: true\n  }];\n  constructor() {\n    this.checkFirstTime();\n  }\n  /**\n   * Verifica se √© a primeira visita do usu√°rio\n   */\n  checkFirstTime() {\n    const hasVisited = localStorage.getItem(this.FIRST_TIME_KEY);\n    if (!hasVisited) {\n      localStorage.setItem(this.FIRST_TIME_KEY, 'true');\n      this.tourStateSubject.next({\n        ...this.tourStateSubject.value,\n        isFirstTime: true\n      });\n    }\n  }\n  /**\n   * Verifica se o tour j√° foi completado\n   */\n  hasCompletedTour() {\n    return localStorage.getItem(this.TOUR_STORAGE_KEY) === 'true';\n  }\n  /**\n   * Marca o tour como completado\n   */\n  markTourCompleted() {\n    localStorage.setItem(this.TOUR_STORAGE_KEY, 'true');\n  }\n  /**\n   * Inicia o tour\n   */\n  startTour() {\n    const state = {\n      isActive: true,\n      currentStep: 0,\n      totalSteps: this.TOUR_STEPS.length,\n      isFirstTime: this.tourStateSubject.value.isFirstTime\n    };\n    this.tourStateSubject.next(state);\n    this.showStep(0);\n  }\n  /**\n   * Para o tour\n   */\n  stopTour() {\n    this.hideAllHighlights();\n    this.tourStateSubject.next({\n      ...this.tourStateSubject.value,\n      isActive: false,\n      currentStep: 0\n    });\n  }\n  /**\n   * Avan√ßa para o pr√≥ximo passo\n   */\n  nextStep() {\n    const currentState = this.tourStateSubject.value;\n    if (currentState.currentStep < this.TOUR_STEPS.length - 1) {\n      const nextStep = currentState.currentStep + 1;\n      this.tourStateSubject.next({\n        ...currentState,\n        currentStep: nextStep\n      });\n      this.showStep(nextStep);\n    } else {\n      this.completeTour();\n    }\n  }\n  /**\n   * Volta para o passo anterior\n   */\n  previousStep() {\n    const currentState = this.tourStateSubject.value;\n    if (currentState.currentStep > 0) {\n      const prevStep = currentState.currentStep - 1;\n      this.tourStateSubject.next({\n        ...currentState,\n        currentStep: prevStep\n      });\n      this.showStep(prevStep);\n    }\n  }\n  /**\n   * Completa o tour\n   */\n  completeTour() {\n    this.markTourCompleted();\n    this.stopTour();\n  }\n  /**\n   * Pula o tour\n   */\n  skipTour() {\n    this.markTourCompleted();\n    this.stopTour();\n  }\n  /**\n   * Obt√©m o passo atual\n   */\n  getCurrentStep() {\n    const currentState = this.tourStateSubject.value;\n    if (currentState.isActive && currentState.currentStep < this.TOUR_STEPS.length) {\n      return this.TOUR_STEPS[currentState.currentStep];\n    }\n    return null;\n  }\n  /**\n   * Obt√©m todos os passos\n   */\n  getAllSteps() {\n    return [...this.TOUR_STEPS];\n  }\n  /**\n   * Mostra um passo espec√≠fico\n   */\n  showStep(stepIndex) {\n    const step = this.TOUR_STEPS[stepIndex];\n    if (!step) return;\n    // Aguarda um pouco para garantir que o DOM est√° pronto\n    setTimeout(() => {\n      this.hideAllHighlights();\n      this.highlightElement(step.target);\n      if (step.action) {\n        step.action();\n      }\n    }, 100);\n  }\n  /**\n   * Destaca um elemento\n   */\n  highlightElement(selector) {\n    const element = document.querySelector(selector);\n    if (element) {\n      element.classList.add('tour-highlight');\n      element.scrollIntoView({\n        behavior: 'smooth',\n        block: 'center'\n      });\n    }\n  }\n  /**\n   * Remove todos os destaques\n   */\n  hideAllHighlights() {\n    const highlightedElements = document.querySelectorAll('.tour-highlight');\n    highlightedElements.forEach(element => {\n      element.classList.remove('tour-highlight');\n    });\n  }\n  /**\n   * Verifica se deve mostrar o tour automaticamente\n   */\n  shouldShowAutoTour() {\n    return this.tourStateSubject.value.isFirstTime && !this.hasCompletedTour();\n  }\n  /**\n   * Obt√©m o estado atual do tour\n   */\n  getCurrentState() {\n    return this.tourStateSubject.value;\n  }\n  /**\n   * Reseta o tour (para testes ou reset manual)\n   */\n  resetTour() {\n    localStorage.removeItem(this.TOUR_STORAGE_KEY);\n    localStorage.removeItem(this.FIRST_TIME_KEY);\n    this.tourStateSubject.next({\n      isActive: false,\n      currentStep: 0,\n      totalSteps: this.TOUR_STEPS.length,\n      isFirstTime: true\n    });\n  }\n  static …µfac = function TourService_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TourService)();\n  };\n  static …µprov = /*@__PURE__*/i0.…µ…µdefineInjectable({\n    token: TourService,\n    factory: TourService.…µfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["BehaviorSubject","TourService","tourStateSubject","isActive","currentStep","totalSteps","isFirstTime","tourState$","asObservable","TOUR_STORAGE_KEY","FIRST_TIME_KEY","TOUR_STEPS","id","title","content","target","position","showArrow","showOverlay","action","highlightElement","constructor","checkFirstTime","hasVisited","localStorage","getItem","setItem","next","value","hasCompletedTour","markTourCompleted","startTour","state","length","showStep","stopTour","hideAllHighlights","nextStep","currentState","completeTour","previousStep","prevStep","skipTour","getCurrentStep","getAllSteps","stepIndex","step","setTimeout","selector","element","document","querySelector","classList","add","scrollIntoView","behavior","block","highlightedElements","querySelectorAll","forEach","remove","shouldShowAutoTour","getCurrentState","resetTour","removeItem","factory","…µfac","providedIn"],"sources":["/home/danilo/√Årea de trabalho/formsync-nx/apps/front/src/app/services/tour.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { BehaviorSubject, Observable } from 'rxjs';\n\nexport interface TourStep {\n  id: string;\n  title: string;\n  content: string;\n  target: string; // CSS selector\n  position: 'top' | 'bottom' | 'left' | 'right';\n  showArrow?: boolean;\n  showOverlay?: boolean;\n  action?: () => void;\n}\n\nexport interface TourState {\n  isActive: boolean;\n  currentStep: number;\n  totalSteps: number;\n  isFirstTime: boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TourService {\n  private tourStateSubject = new BehaviorSubject<TourState>({\n    isActive: false,\n    currentStep: 0,\n    totalSteps: 0,\n    isFirstTime: false\n  });\n\n  public tourState$ = this.tourStateSubject.asObservable();\n\n  private readonly TOUR_STORAGE_KEY = 'formsync_tour_completed';\n  private readonly FIRST_TIME_KEY = 'formsync_first_visit';\n\n  // Defini√ß√£o dos passos do tour\n  private readonly TOUR_STEPS: TourStep[] = [\n    {\n      id: 'dashboard-overview',\n      title: 'üéØ Dashboard',\n      content: 'Bem-vindo ao FormSync! Aqui voc√™ encontra um resumo completo das suas atividades e estat√≠sticas.',\n      target: '.dashboard-title',\n      position: 'bottom',\n      showArrow: true,\n      showOverlay: true\n    },\n    {\n      id: 'stats-cards',\n      title: 'üìä Estat√≠sticas',\n      content: 'Acompanhe seus dados em tempo real: total de campos, formul√°rios preenchidos e status do seu plano.',\n      target: '.stats-grid',\n      position: 'top',\n      showArrow: true,\n      showOverlay: true\n    },\n    {\n      id: 'quick-actions',\n      title: '‚ö° A√ß√µes R√°pidas',\n      content: 'Acesse rapidamente as principais funcionalidades: gerenciar campos, editar perfil e suporte.',\n      target: '.actions-grid',\n      position: 'top',\n      showArrow: true,\n      showOverlay: true\n    },\n    {\n      id: 'sidebar-navigation',\n      title: 'üß≠ Navega√ß√£o',\n      content: 'Use o menu lateral para navegar entre as diferentes se√ß√µes do FormSync.',\n      target: '.sidebar',\n      position: 'right',\n      showArrow: true,\n      showOverlay: true\n    },\n    {\n      id: 'templates',\n      title: 'üìù Templates',\n      content: 'Gerencie todos os Seus Formul√°rios. Crie, edite e organize seus formul√°rios personalizados.',\n      target: 'a[routerLink=\"/templates\"]',\n      position: 'right',\n      showArrow: true,\n      showOverlay: true,\n      action: () => this.highlightElement('a[routerLink=\"/templates\"]')\n    },\n    {\n      id: 'upload-csv',\n      title: 'üìÅ Importar CSV',\n      content: 'Importe seus dados em massa atrav√©s de arquivos CSV. Ideal para grandes volumes de informa√ß√µes.',\n      target: 'a[routerLink=\"/upload-csv\"]',\n      position: 'right',\n      showArrow: true,\n      showOverlay: true,\n      action: () => this.highlightElement('a[routerLink=\"/upload-csv\"]')\n    },\n    {\n      id: 'profile-settings',\n      title: 'üë§ Perfil',\n      content: 'Configure suas informa√ß√µes pessoais e prefer√™ncias da conta.',\n      target: 'a[routerLink=\"/perfil\"]',\n      position: 'right',\n      showArrow: true,\n      showOverlay: true,\n      action: () => this.highlightElement('a[routerLink=\"/perfil\"]')\n    },\n    {\n      id: 'upgrade-plan',\n      title: '‚≠ê Upgrade',\n      content: 'Explore planos premium para acessar mais recursos e funcionalidades avan√ßadas.',\n      target: 'a[routerLink=\"/upgrade\"]',\n      position: 'right',\n      showArrow: true,\n      showOverlay: true,\n      action: () => this.highlightElement('a[routerLink=\"/upgrade\"]')\n    },\n    {\n      id: 'tour-completion',\n      title: 'üéâ Tudo Pronto!',\n      content: 'Voc√™ j√° conhece os principais recursos do FormSync. Comece a usar e aproveite ao m√°ximo a plataforma!',\n      target: '.dashboard-container',\n      position: 'top',\n      showArrow: false,\n      showOverlay: true\n    }\n  ];\n\n  constructor() {\n    this.checkFirstTime();\n  }\n\n  /**\n   * Verifica se √© a primeira visita do usu√°rio\n   */\n  private checkFirstTime(): void {\n    const hasVisited = localStorage.getItem(this.FIRST_TIME_KEY);\n    if (!hasVisited) {\n      localStorage.setItem(this.FIRST_TIME_KEY, 'true');\n      this.tourStateSubject.next({\n        ...this.tourStateSubject.value,\n        isFirstTime: true\n      });\n    }\n  }\n\n  /**\n   * Verifica se o tour j√° foi completado\n   */\n  hasCompletedTour(): boolean {\n    return localStorage.getItem(this.TOUR_STORAGE_KEY) === 'true';\n  }\n\n  /**\n   * Marca o tour como completado\n   */\n  markTourCompleted(): void {\n    localStorage.setItem(this.TOUR_STORAGE_KEY, 'true');\n  }\n\n  /**\n   * Inicia o tour\n   */\n  startTour(): void {\n    const state: TourState = {\n      isActive: true,\n      currentStep: 0,\n      totalSteps: this.TOUR_STEPS.length,\n      isFirstTime: this.tourStateSubject.value.isFirstTime\n    };\n\n    this.tourStateSubject.next(state);\n    this.showStep(0);\n  }\n\n  /**\n   * Para o tour\n   */\n  stopTour(): void {\n    this.hideAllHighlights();\n    this.tourStateSubject.next({\n      ...this.tourStateSubject.value,\n      isActive: false,\n      currentStep: 0\n    });\n  }\n\n  /**\n   * Avan√ßa para o pr√≥ximo passo\n   */\n  nextStep(): void {\n    const currentState = this.tourStateSubject.value;\n    if (currentState.currentStep < this.TOUR_STEPS.length - 1) {\n      const nextStep = currentState.currentStep + 1;\n      this.tourStateSubject.next({\n        ...currentState,\n        currentStep: nextStep\n      });\n      this.showStep(nextStep);\n    } else {\n      this.completeTour();\n    }\n  }\n\n  /**\n   * Volta para o passo anterior\n   */\n  previousStep(): void {\n    const currentState = this.tourStateSubject.value;\n    if (currentState.currentStep > 0) {\n      const prevStep = currentState.currentStep - 1;\n      this.tourStateSubject.next({\n        ...currentState,\n        currentStep: prevStep\n      });\n      this.showStep(prevStep);\n    }\n  }\n\n  /**\n   * Completa o tour\n   */\n  completeTour(): void {\n    this.markTourCompleted();\n    this.stopTour();\n  }\n\n  /**\n   * Pula o tour\n   */\n  skipTour(): void {\n    this.markTourCompleted();\n    this.stopTour();\n  }\n\n  /**\n   * Obt√©m o passo atual\n   */\n  getCurrentStep(): TourStep | null {\n    const currentState = this.tourStateSubject.value;\n    if (currentState.isActive && currentState.currentStep < this.TOUR_STEPS.length) {\n      return this.TOUR_STEPS[currentState.currentStep];\n    }\n    return null;\n  }\n\n  /**\n   * Obt√©m todos os passos\n   */\n  getAllSteps(): TourStep[] {\n    return [...this.TOUR_STEPS];\n  }\n\n  /**\n   * Mostra um passo espec√≠fico\n   */\n  private showStep(stepIndex: number): void {\n    const step = this.TOUR_STEPS[stepIndex];\n    if (!step) return;\n\n    // Aguarda um pouco para garantir que o DOM est√° pronto\n    setTimeout(() => {\n      this.hideAllHighlights();\n      this.highlightElement(step.target);\n\n      if (step.action) {\n        step.action();\n      }\n    }, 100);\n  }\n\n  /**\n   * Destaca um elemento\n   */\n  private highlightElement(selector: string): void {\n    const element = document.querySelector(selector);\n    if (element) {\n      element.classList.add('tour-highlight');\n      element.scrollIntoView({ behavior: 'smooth', block: 'center' });\n    }\n  }\n\n  /**\n   * Remove todos os destaques\n   */\n  private hideAllHighlights(): void {\n    const highlightedElements = document.querySelectorAll('.tour-highlight');\n    highlightedElements.forEach(element => {\n      element.classList.remove('tour-highlight');\n    });\n  }\n\n  /**\n   * Verifica se deve mostrar o tour automaticamente\n   */\n  shouldShowAutoTour(): boolean {\n    return this.tourStateSubject.value.isFirstTime && !this.hasCompletedTour();\n  }\n\n  /**\n   * Obt√©m o estado atual do tour\n   */\n  getCurrentState(): TourState {\n    return this.tourStateSubject.value;\n  }\n\n  /**\n   * Reseta o tour (para testes ou reset manual)\n   */\n  resetTour(): void {\n    localStorage.removeItem(this.TOUR_STORAGE_KEY);\n    localStorage.removeItem(this.FIRST_TIME_KEY);\n    this.tourStateSubject.next({\n      isActive: false,\n      currentStep: 0,\n      totalSteps: this.TOUR_STEPS.length,\n      isFirstTime: true\n    });\n  }\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}