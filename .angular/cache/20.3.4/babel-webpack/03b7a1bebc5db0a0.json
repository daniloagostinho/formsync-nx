{"ast":null,"code":"import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, catchError } from 'rxjs';\nimport { environment } from '../../environments/environment';\nimport { map } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class CampoService {\n  http;\n  apiUrl = `${environment.apiUrl}/campos`;\n  publicApiUrl = `${environment.apiUrl}/public/campos`;\n  constructor(http) {\n    this.http = http;\n  }\n  getAuthHeaders() {\n    const token = localStorage.getItem('token');\n    // Se n√£o h√° token ou token expirado, usar chave da extens√£o\n    if (!this.isAuthenticated()) {\n      console.log('üîë Usando chave da extens√£o (n√£o autenticado)');\n      return new HttpHeaders({\n        'X-Extension-Key': 'ext_2024_preenche_rapido_secure_key_987654321'\n      });\n    }\n    // Se autenticado, usar token JWT\n    console.log('üîê Usando token JWT (autenticado)');\n    return new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n  }\n  isAuthenticated() {\n    const token = localStorage.getItem('token');\n    if (!token) return false;\n    try {\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      const exp = payload.exp * 1000;\n      return Date.now() < exp;\n    } catch {\n      return false;\n    }\n  }\n  listarCampos() {\n    // Por enquanto, sempre usar endpoint p√∫blico para garantir funcionamento\n    console.log('üîÑ Usando endpoint p√∫blico para listar campos');\n    return this.listarCamposPublicos();\n    // C√≥digo original comentado para debug\n    /*\n    if (this.isAuthenticated()) {\n      // Usar endpoint privado se autenticado\n      return this.http.get<PaginatedResponse<Campo>>(this.apiUrl, {\n        headers: this.getAuthHeaders()\n      }).pipe(\n        map(response => response.content),\n        catchError(error => {\n          console.warn('Erro no endpoint privado, tentando p√∫blico:', error);\n          return this.listarCamposPublicos();\n        })\n      );\n    } else {\n      // Usar endpoint p√∫blico se n√£o autenticado\n      return this.listarCamposPublicos();\n    }\n    */\n  }\n  listarCamposPublicos() {\n    console.log('üîÑ Chamando endpoint p√∫blico com format=frontend');\n    // Sempre usar chave da extens√£o para endpoint p√∫blico\n    const headers = new HttpHeaders({\n      'X-Extension-Key': 'ext_2024_preenche_rapido_secure_key_987654321'\n    });\n    console.log('üîë Headers enviados:', headers);\n    return this.http.get(`${this.publicApiUrl}?format=frontend`, {\n      headers: headers\n    }).pipe(map(campos => {\n      console.log('üì¶ Resposta recebida:', campos);\n      const camposMapeados = campos.map(c => ({\n        id: c.id ? parseInt(c.id) : undefined,\n        nome: c.nome || '',\n        valor: c.valor || '',\n        site: c.site || '',\n        tipo: c.tipo || 'text',\n        descricao: c.descricao || null,\n        obrigatorio: c.obrigatorio === 'true',\n        valorPadrao: c.valorPadrao || c.valor || ''\n      }));\n      console.log('üîÑ Campos mapeados:', camposMapeados);\n      return camposMapeados;\n    }), catchError(error => {\n      console.error('‚ùå Erro ao listar campos p√∫blicos:', error);\n      return of([]);\n    }));\n  }\n  listarCamposPaginado(page = 0, size = 10, sortBy = 'nome', sortDir = 'asc') {\n    // Por enquanto, sempre usar endpoint p√∫blico para garantir funcionamento\n    console.log('üîÑ Usando endpoint p√∫blico para listagem paginada');\n    return this.listarCamposPublicos().pipe(map(campos => {\n      const totalElements = campos.length;\n      const totalPages = Math.ceil(totalElements / size);\n      const startIndex = page * size;\n      const endIndex = startIndex + size;\n      const content = campos.slice(startIndex, endIndex);\n      return {\n        content,\n        page,\n        size,\n        totalElements,\n        totalPages,\n        hasNext: page < totalPages - 1,\n        hasPrevious: page > 0,\n        first: page === 0,\n        last: page === totalPages - 1 || totalPages === 0\n      };\n    }));\n    // C√≥digo original comentado para debug\n    /*\n    if (this.isAuthenticated()) {\n      const params = {\n        page: page.toString(),\n        size: size.toString(),\n        sortBy,\n        sortDir\n      };\n      \n      return this.http.get<PaginatedResponse<Campo>>(this.apiUrl, {\n        params,\n        headers: this.getAuthHeaders()\n      }).pipe(\n        catchError(error => {\n          console.warn('Erro no endpoint privado, retornando lista vazia:', error);\n          return of({\n            content: [],\n            page: 0,\n            size: 20,\n            totalElements: 0,\n            totalPages: 0,\n            hasNext: false,\n            hasPrevious: false\n          });\n        })\n      );\n    } else {\n      // Para usu√°rios n√£o autenticados, retornar lista vazia paginada\n      return of({\n        content: [],\n        page: 0,\n        size: 20,\n        totalElements: 0,\n        totalPages: 0,\n        hasNext: false,\n        hasPrevious: false\n      });\n    }\n    */\n  }\n  salvarCampo(campo) {\n    if (!this.isAuthenticated()) {\n      return of(campo); // Retornar campo sem salvar se n√£o autenticado\n    }\n    const dto = {\n      nome: campo.nome,\n      tipo: 'text',\n      descricao: null,\n      obrigatorio: false,\n      valorPadrao: campo.valor,\n      valor: campo.valor,\n      site: campo.site || null\n    };\n    if (campo.id) {\n      return this.http.put(`${this.apiUrl}/${campo.id}`, dto, {\n        headers: this.getAuthHeaders()\n      });\n    } else {\n      return this.http.post(this.apiUrl, dto, {\n        headers: this.getAuthHeaders()\n      });\n    }\n  }\n  excluirCampo(id) {\n    if (!this.isAuthenticated()) {\n      return of(void 0); // Retornar sucesso sem deletar se n√£o autenticado\n    }\n    return this.http.delete(`${this.apiUrl}/${id}`, {\n      headers: this.getAuthHeaders()\n    });\n  }\n  obterCampo(id) {\n    if (!this.isAuthenticated()) {\n      return of(null); // Retornar null se n√£o autenticado\n    }\n    return this.http.get(`${this.apiUrl}/${id}`, {\n      headers: this.getAuthHeaders()\n    });\n  }\n  contarCampos() {\n    if (!this.isAuthenticated()) {\n      return of({\n        quantidade: 0,\n        mensagem: 'Usu√°rio n√£o autenticado'\n      });\n    }\n    return this.http.get(`${this.apiUrl}/contar`, {\n      headers: this.getAuthHeaders()\n    });\n  }\n  listarCamposCSV() {\n    if (!this.isAuthenticated()) {\n      return of([]);\n    }\n    return this.http.get(`${this.apiUrl}/csv`, {\n      headers: this.getAuthHeaders()\n    });\n  }\n  contarCamposCSV() {\n    return this.listarCamposCSV().pipe(map(campos => campos.length));\n  }\n  buscar(query) {\n    if (!this.isAuthenticated()) {\n      // Usar endpoint p√∫blico para busca\n      return this.http.get(`${this.publicApiUrl}?format=extension&q=${encodeURIComponent(query)}`, {\n        headers: this.getAuthHeaders()\n      }).pipe(map(campos => campos.map(c => ({\n        id: c.id ? parseInt(c.id) : undefined,\n        nome: c.username || '',\n        valor: c.password || '',\n        site: c.website || '',\n        tipo: 'text',\n        descricao: null,\n        obrigatorio: false,\n        valorPadrao: c.password || ''\n      }))), catchError(error => {\n        console.error('Erro na busca p√∫blica:', error);\n        return of([]);\n      }));\n    }\n    const params = {\n      q: query\n    };\n    return this.http.get(`${this.apiUrl}/search`, {\n      params,\n      headers: this.getAuthHeaders()\n    });\n  }\n  static …µfac = function CampoService_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || CampoService)(i0.…µ…µinject(i1.HttpClient));\n  };\n  static …µprov = /*@__PURE__*/i0.…µ…µdefineInjectable({\n    token: CampoService,\n    factory: CampoService.…µfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["HttpClient","HttpHeaders","Observable","of","catchError","environment","map","CampoService","http","apiUrl","publicApiUrl","constructor","getAuthHeaders","token","localStorage","getItem","isAuthenticated","console","log","payload","JSON","parse","atob","split","exp","Date","now","listarCampos","listarCamposPublicos","headers","get","pipe","campos","camposMapeados","c","id","parseInt","undefined","nome","valor","site","tipo","descricao","obrigatorio","valorPadrao","error","listarCamposPaginado","page","size","sortBy","sortDir","totalElements","length","totalPages","Math","ceil","startIndex","endIndex","content","slice","hasNext","hasPrevious","first","last","salvarCampo","campo","dto","put","post","excluirCampo","delete","obterCampo","contarCampos","quantidade","mensagem","listarCamposCSV","contarCamposCSV","buscar","query","encodeURIComponent","username","password","website","params","q","i0","…µ…µinject","i1","factory","…µfac","providedIn"],"sources":["/home/danilo/√Årea de trabalho/formsync-nx/apps/front/src/app/services/campo.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable, of, catchError, switchMap } from 'rxjs';\nimport { Campo } from '../models/campo.model';\nimport { environment } from '../../environments/environment';\nimport { map } from 'rxjs/operators';\n\nexport interface PaginatedResponse<T> {\n  content: T[];\n  page: number;\n  size: number;\n  totalElements: number;\n  totalPages: number;\n  hasNext: boolean;\n  hasPrevious: boolean;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CampoService {\n  private apiUrl = `${environment.apiUrl}/campos`;\n  private publicApiUrl = `${environment.apiUrl}/public/campos`;\n\n  constructor(private http: HttpClient) {}\n\n  private getAuthHeaders(): HttpHeaders {\n    const token = localStorage.getItem('token');\n    \n    // Se n√£o h√° token ou token expirado, usar chave da extens√£o\n    if (!this.isAuthenticated()) {\n      console.log('üîë Usando chave da extens√£o (n√£o autenticado)');\n      return new HttpHeaders({\n        'X-Extension-Key': 'ext_2024_preenche_rapido_secure_key_987654321'\n      });\n    }\n    \n    // Se autenticado, usar token JWT\n    console.log('üîê Usando token JWT (autenticado)');\n    return new HttpHeaders({\n      'Authorization': `Bearer ${token}`\n    });\n  }\n\n  private isAuthenticated(): boolean {\n    const token = localStorage.getItem('token');\n    if (!token) return false;\n    \n    try {\n      const payload = JSON.parse(atob(token.split('.')[1]));\n      const exp = payload.exp * 1000;\n      return Date.now() < exp;\n    } catch {\n      return false;\n    }\n  }\n\n  listarCampos(): Observable<Campo[]> {\n    // Por enquanto, sempre usar endpoint p√∫blico para garantir funcionamento\n    console.log('üîÑ Usando endpoint p√∫blico para listar campos');\n    return this.listarCamposPublicos();\n    \n    // C√≥digo original comentado para debug\n    /*\n    if (this.isAuthenticated()) {\n      // Usar endpoint privado se autenticado\n      return this.http.get<PaginatedResponse<Campo>>(this.apiUrl, {\n        headers: this.getAuthHeaders()\n      }).pipe(\n        map(response => response.content),\n        catchError(error => {\n          console.warn('Erro no endpoint privado, tentando p√∫blico:', error);\n          return this.listarCamposPublicos();\n        })\n      );\n    } else {\n      // Usar endpoint p√∫blico se n√£o autenticado\n      return this.listarCamposPublicos();\n    }\n    */\n  }\n\n  private listarCamposPublicos(): Observable<Campo[]> {\n    console.log('üîÑ Chamando endpoint p√∫blico com format=frontend');\n    \n    // Sempre usar chave da extens√£o para endpoint p√∫blico\n    const headers = new HttpHeaders({\n      'X-Extension-Key': 'ext_2024_preenche_rapido_secure_key_987654321'\n    });\n    \n    console.log('üîë Headers enviados:', headers);\n    \n    return this.http.get<any[]>(`${this.publicApiUrl}?format=frontend`, {\n      headers: headers\n    }).pipe(\n      map(campos => {\n        console.log('üì¶ Resposta recebida:', campos);\n        const camposMapeados = campos.map(c => ({\n          id: c.id ? parseInt(c.id) : undefined,\n          nome: c.nome || '',\n          valor: c.valor || '',\n          site: c.site || '',\n          tipo: c.tipo || 'text',\n          descricao: c.descricao || null,\n          obrigatorio: c.obrigatorio === 'true',\n          valorPadrao: c.valorPadrao || c.valor || ''\n        }));\n        console.log('üîÑ Campos mapeados:', camposMapeados);\n        return camposMapeados;\n      }),\n      catchError(error => {\n        console.error('‚ùå Erro ao listar campos p√∫blicos:', error);\n        return of([]);\n      })\n    );\n  }\n\n  listarCamposPaginado(\n    page: number = 0,\n    size: number = 10,\n    sortBy: string = 'nome',\n    sortDir: string = 'asc'\n  ): Observable<PaginatedResponse<Campo>> {\n    // Por enquanto, sempre usar endpoint p√∫blico para garantir funcionamento\n    console.log('üîÑ Usando endpoint p√∫blico para listagem paginada');\n    \n    return this.listarCamposPublicos().pipe(\n      map(campos => {\n        const totalElements = campos.length;\n        const totalPages = Math.ceil(totalElements / size);\n        const startIndex = page * size;\n        const endIndex = startIndex + size;\n        const content = campos.slice(startIndex, endIndex);\n        \n        return {\n          content,\n          page,\n          size,\n          totalElements,\n          totalPages,\n          hasNext: page < totalPages - 1,\n          hasPrevious: page > 0,\n          first: page === 0,\n          last: page === totalPages - 1 || totalPages === 0\n        };\n      })\n    );\n    \n    // C√≥digo original comentado para debug\n    /*\n    if (this.isAuthenticated()) {\n      const params = {\n        page: page.toString(),\n        size: size.toString(),\n        sortBy,\n        sortDir\n      };\n      \n      return this.http.get<PaginatedResponse<Campo>>(this.apiUrl, { \n        params,\n        headers: this.getAuthHeaders()\n      }).pipe(\n        catchError(error => {\n          console.warn('Erro no endpoint privado, retornando lista vazia:', error);\n          return of({\n            content: [],\n            page: 0,\n            size: 20,\n            totalElements: 0,\n            totalPages: 0,\n            hasNext: false,\n            hasPrevious: false\n          });\n        })\n      );\n    } else {\n      // Para usu√°rios n√£o autenticados, retornar lista vazia paginada\n      return of({\n        content: [],\n        page: 0,\n        size: 20,\n        totalElements: 0,\n        totalPages: 0,\n        hasNext: false,\n        hasPrevious: false\n      });\n    }\n    */\n  }\n\n  salvarCampo(campo: Campo): Observable<Campo> {\n    if (!this.isAuthenticated()) {\n      return of(campo); // Retornar campo sem salvar se n√£o autenticado\n    }\n\n    const dto: any = {\n      nome: campo.nome,\n      tipo: 'text',\n      descricao: null,\n      obrigatorio: false,\n      valorPadrao: campo.valor,\n      valor: campo.valor,\n      site: campo.site || null\n    };\n\n    if (campo.id) {\n      return this.http.put<Campo>(`${this.apiUrl}/${campo.id}`, dto, {\n        headers: this.getAuthHeaders()\n      });\n    } else {\n      return this.http.post<Campo>(this.apiUrl, dto, {\n        headers: this.getAuthHeaders()\n      });\n    }\n  }\n\n  excluirCampo(id: number): Observable<void> {\n    if (!this.isAuthenticated()) {\n      return of(void 0); // Retornar sucesso sem deletar se n√£o autenticado\n    }\n\n    return this.http.delete<void>(`${this.apiUrl}/${id}`, {\n      headers: this.getAuthHeaders()\n    });\n  }\n\n  obterCampo(id: number): Observable<Campo> {\n    if (!this.isAuthenticated()) {\n      return of(null as any); // Retornar null se n√£o autenticado\n    }\n\n    return this.http.get<Campo>(`${this.apiUrl}/${id}`, {\n      headers: this.getAuthHeaders()\n    });\n  }\n\n  contarCampos(): Observable<{quantidade: number, mensagem: string}> {\n    if (!this.isAuthenticated()) {\n      return of({ quantidade: 0, mensagem: 'Usu√°rio n√£o autenticado' });\n    }\n\n    return this.http.get<{quantidade: number, mensagem: string}>(`${this.apiUrl}/contar`, {\n      headers: this.getAuthHeaders()\n    });\n  }\n\n  listarCamposCSV(): Observable<any[]> {\n    if (!this.isAuthenticated()) {\n      return of([]);\n    }\n\n    return this.http.get<any[]>(`${this.apiUrl}/csv`, {\n      headers: this.getAuthHeaders()\n    });\n  }\n\n  contarCamposCSV(): Observable<number> {\n    return this.listarCamposCSV().pipe(\n      map(campos => campos.length)\n    );\n  }\n\n  buscar(query: string): Observable<Campo[]> {\n    if (!this.isAuthenticated()) {\n      // Usar endpoint p√∫blico para busca\n      return this.http.get<any[]>(`${this.publicApiUrl}?format=extension&q=${encodeURIComponent(query)}`, {\n        headers: this.getAuthHeaders()\n      }).pipe(\n        map(campos => campos.map(c => ({\n          id: c.id ? parseInt(c.id) : undefined,\n          nome: c.username || '',\n          valor: c.password || '',\n          site: c.website || '',\n          tipo: 'text',\n          descricao: null,\n          obrigatorio: false,\n          valorPadrao: c.password || ''\n        }))),\n        catchError(error => {\n          console.error('Erro na busca p√∫blica:', error);\n          return of([]);\n        })\n      );\n    }\n\n    const params = { q: query };\n    return this.http.get<Campo[]>(`${this.apiUrl}/search`, { \n      params,\n      headers: this.getAuthHeaders()\n    });\n  }\n} "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}