{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport * as i0 from \"@angular/core\";\nexport class LoadingSkeletonComponent {\n  titulo = '';\n  mensagem = '';\n  static ɵfac = function LoadingSkeletonComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || LoadingSkeletonComponent)();\n  };\n  static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoadingSkeletonComponent,\n    selectors: [[\"app-loading-skeleton\"]],\n    inputs: {\n      titulo: \"titulo\",\n      mensagem: \"mensagem\"\n    },\n    decls: 8,\n    vars: 2,\n    consts: [[1, \"loading-skeleton-card\"], [1, \"flex\", \"justify-center\", \"items-center\", \"h-96\", \"p-8\"], [1, \"text-center\"], [1, \"loading-spinner\", \"h-16\", \"w-16\", \"mx-auto\"], [1, \"mt-6\", \"text-2xl\", \"font-bold\", \"text-gray-700\"], [1, \"text-gray-500\", \"mt-3\", \"text-lg\"]],\n    template: function LoadingSkeletonComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵdomElementStart(0, \"div\", 0)(1, \"div\", 1)(2, \"div\", 2);\n        i0.ɵɵdomElement(3, \"div\", 3);\n        i0.ɵɵdomElementStart(4, \"h3\", 4);\n        i0.ɵɵtext(5);\n        i0.ɵɵdomElementEnd();\n        i0.ɵɵdomElementStart(6, \"p\", 5);\n        i0.ɵɵtext(7);\n        i0.ɵɵdomElementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\" \", ctx.titulo || \"Carregando...\", \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx.mensagem || \"Aguarde enquanto preparamos suas informa\\u00E7\\u00F5es...\", \" \");\n      }\n    },\n    dependencies: [CommonModule, MatProgressSpinnerModule],\n    styles: [\".loading-skeleton-card[_ngcontent-%COMP%] {\\n      background: white;\\n      border: 1px solid #e5e7eb;\\n      border-radius: 16px;\\n      padding: 24px;\\n      transition: all 0.2s ease;\\n    }\\n    \\n    .loading-spinner[_ngcontent-%COMP%] {\\n      border: 2px solid #e5e7eb;\\n      border-top: 2px solid #3b82f6;\\n      border-radius: 50%;\\n      animation: _ngcontent-%COMP%_spin 1s linear infinite;\\n    }\\n    \\n    @keyframes _ngcontent-%COMP%_spin {\\n      0% { transform: rotate(0deg); }\\n      100% { transform: rotate(360deg); }\\n    }\\n  \\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL2FwcHMvZnJvbnQvc3JjL2FwcC9jb21wb25lbnRzL2xvYWRpbmctc2tlbGV0b24vbG9hZGluZy1za2VsZXRvbi5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtJQUNJO01BQ0UsaUJBQWlCO01BQ2pCLHlCQUF5QjtNQUN6QixtQkFBbUI7TUFDbkIsYUFBYTtNQUNiLHlCQUF5QjtJQUMzQjs7SUFFQTtNQUNFLHlCQUF5QjtNQUN6Qiw2QkFBNkI7TUFDN0Isa0JBQWtCO01BQ2xCLGtDQUFrQztJQUNwQzs7SUFFQTtNQUNFLEtBQUssdUJBQXVCLEVBQUU7TUFDOUIsT0FBTyx5QkFBeUIsRUFBRTtJQUNwQyIsInNvdXJjZXNDb250ZW50IjpbIlxuICAgIC5sb2FkaW5nLXNrZWxldG9uLWNhcmQge1xuICAgICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgICBib3JkZXI6IDFweCBzb2xpZCAjZTVlN2ViO1xuICAgICAgYm9yZGVyLXJhZGl1czogMTZweDtcbiAgICAgIHBhZGRpbmc6IDI0cHg7XG4gICAgICB0cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlO1xuICAgIH1cbiAgICBcbiAgICAubG9hZGluZy1zcGlubmVyIHtcbiAgICAgIGJvcmRlcjogMnB4IHNvbGlkICNlNWU3ZWI7XG4gICAgICBib3JkZXItdG9wOiAycHggc29saWQgIzNiODJmNjtcbiAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgICAgIGFuaW1hdGlvbjogc3BpbiAxcyBsaW5lYXIgaW5maW5pdGU7XG4gICAgfVxuICAgIFxuICAgIEBrZXlmcmFtZXMgc3BpbiB7XG4gICAgICAwJSB7IHRyYW5zZm9ybTogcm90YXRlKDBkZWcpOyB9XG4gICAgICAxMDAlIHsgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTsgfVxuICAgIH1cbiAgIl0sInNvdXJjZVJvb3QiOiIifQ== */\"],\n    changeDetection: 0\n  });\n}","map":{"version":3,"names":["CommonModule","MatProgressSpinnerModule","LoadingSkeletonComponent","titulo","mensagem","selectors","inputs","decls","vars","consts","template","LoadingSkeletonComponent_Template","rf","ctx","i0","ɵɵdomElementStart","ɵɵdomElement","ɵɵtext","ɵɵdomElementEnd","ɵɵadvance","ɵɵtextInterpolate1","styles","changeDetection"],"sources":["/home/danilo/Área de trabalho/formsync-nx/apps/front/src/app/components/loading-skeleton/loading-skeleton.component.ts"],"sourcesContent":["import { Component, Input, ChangeDetectionStrategy } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\n\n@Component({\n  standalone: true,\n  selector: 'app-loading-skeleton',\n  imports: [CommonModule, MatProgressSpinnerModule],\n  changeDetection: ChangeDetectionStrategy.OnPush,\n  template: `\n    <div class=\"loading-skeleton-card\">\n      <div class=\"flex justify-center items-center h-96 p-8\">\n        <div class=\"text-center\">\n          <div class=\"loading-spinner h-16 w-16 mx-auto\"></div>\n          <h3 class=\"mt-6 text-2xl font-bold text-gray-700\">\n            {{ titulo || 'Carregando...' }}\n          </h3>\n          <p class=\"text-gray-500 mt-3 text-lg\">\n            {{ mensagem || 'Aguarde enquanto preparamos suas informações...' }}\n          </p>\n        </div>\n      </div>\n    </div>\n  `,\n  styles: [`\n    .loading-skeleton-card {\n      background: white;\n      border: 1px solid #e5e7eb;\n      border-radius: 16px;\n      padding: 24px;\n      transition: all 0.2s ease;\n    }\n    \n    .loading-spinner {\n      border: 2px solid #e5e7eb;\n      border-top: 2px solid #3b82f6;\n      border-radius: 50%;\n      animation: spin 1s linear infinite;\n    }\n    \n    @keyframes spin {\n      0% { transform: rotate(0deg); }\n      100% { transform: rotate(360deg); }\n    }\n  `]\n})\nexport class LoadingSkeletonComponent {\n  @Input() titulo: string = '';\n  @Input() mensagem: string = '';\n}\n"],"mappings":"AACA,SAASA,YAAY,QAAQ,iBAAiB;AAC9C,SAASC,wBAAwB,QAAQ,oCAAoC;;AA4C7E,OAAM,MAAOC,wBAAwB;EAC1BC,MAAM,GAAW,EAAE;EACnBC,QAAQ,GAAW,EAAE;;qCAFnBF,wBAAwB;EAAA;;UAAxBA,wBAAwB;IAAAG,SAAA;IAAAC,MAAA;MAAAH,MAAA;MAAAC,QAAA;IAAA;IAAAG,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,kCAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QAlC7BE,EAFJ,CAAAC,iBAAA,aAAmC,aACsB,aAC5B;QACvBD,EAAA,CAAAE,YAAA,aAAqD;QACrDF,EAAA,CAAAC,iBAAA,YAAkD;QAChDD,EAAA,CAAAG,MAAA,GACF;QAAAH,EAAA,CAAAI,eAAA,EAAK;QACLJ,EAAA,CAAAC,iBAAA,WAAsC;QACpCD,EAAA,CAAAG,MAAA,GACF;QAGNH,EAHM,CAAAI,eAAA,EAAI,EACA,EACF,EACF;;;QAPEJ,EAAA,CAAAK,SAAA,GACF;QADEL,EAAA,CAAAM,kBAAA,MAAAP,GAAA,CAAAV,MAAA,yBACF;QAEEW,EAAA,CAAAK,SAAA,GACF;QADEL,EAAA,CAAAM,kBAAA,MAAAP,GAAA,CAAAT,QAAA,qEACF;;;mBAZEJ,YAAY,EAAEC,wBAAwB;IAAAoB,MAAA;IAAAC,eAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}