{"ast":null,"code":"import { getPlanoConfig } from '../shared/planos-config';\nimport * as i0 from \"@angular/core\";\nexport class LimiteAlertService {\n  /**\n   * Detecta se o erro √© de limite e retorna mensagem apropriada\n   */\n  detectarErroLimite(error) {\n    const mensagem = error?.error?.message || error?.message || '';\n    const lowerMessage = mensagem.toLowerCase();\n    // Verificar se √© erro de limite de templates\n    if (lowerMessage.includes('limite de templates') || lowerMessage.includes('template limit') || lowerMessage.includes('fa√ßa upgrade para continuar')) {\n      return {\n        isLimite: true,\n        mensagem: this.getMensagemUpgradeTemplate(),\n        mostrarUpgrade: true\n      };\n    }\n    // Verificar se √© erro de limite de campos\n    if (lowerMessage.includes('limite de campos') || lowerMessage.includes('field limit') || lowerMessage.includes('campo limit')) {\n      return {\n        isLimite: true,\n        mensagem: this.getMensagemUpgradeCampo(),\n        mostrarUpgrade: true\n      };\n    }\n    return {\n      isLimite: false,\n      mensagem: '',\n      mostrarUpgrade: false\n    };\n  }\n  /**\n   * Retorna mensagem de upgrade para templates\n   */\n  getMensagemUpgradeTemplate() {\n    return 'üéØ Limite de templates atingido! Fa√ßa upgrade para o Plano Profissional e crie at√© 50 templates. Clique aqui para ver os planos!';\n  }\n  /**\n   * Retorna mensagem de upgrade para campos\n   */\n  getMensagemUpgradeCampo() {\n    return 'üìù Limite de campos atingido! Fa√ßa upgrade para o Plano Profissional e use at√© 1000 campos. Clique aqui para ver os planos!';\n  }\n  /**\n   * Obt√©m dados do plano\n   */\n  getPlanoInfo(planoId) {\n    return getPlanoConfig(planoId);\n  }\n  static …µfac = function LimiteAlertService_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || LimiteAlertService)();\n  };\n  static …µprov = /*@__PURE__*/i0.…µ…µdefineInjectable({\n    token: LimiteAlertService,\n    factory: LimiteAlertService.…µfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["getPlanoConfig","LimiteAlertService","detectarErroLimite","error","mensagem","message","lowerMessage","toLowerCase","includes","isLimite","getMensagemUpgradeTemplate","mostrarUpgrade","getMensagemUpgradeCampo","getPlanoInfo","planoId","factory","…µfac","providedIn"],"sources":["/home/danilo/√Årea de trabalho/formsync-nx/apps/front/src/app/services/limite-alert.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { getPlanoConfig } from '../shared/planos-config';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class LimiteAlertService {\n\n    /**\n     * Detecta se o erro √© de limite e retorna mensagem apropriada\n     */\n    detectarErroLimite(error: any): { isLimite: boolean; mensagem: string; mostrarUpgrade: boolean } {\n        const mensagem = error?.error?.message || error?.message || '';\n        const lowerMessage = mensagem.toLowerCase();\n\n        // Verificar se √© erro de limite de templates\n        if (lowerMessage.includes('limite de templates') ||\n            lowerMessage.includes('template limit') ||\n            lowerMessage.includes('fa√ßa upgrade para continuar')) {\n\n            return {\n                isLimite: true,\n                mensagem: this.getMensagemUpgradeTemplate(),\n                mostrarUpgrade: true\n            };\n        }\n\n        // Verificar se √© erro de limite de campos\n        if (lowerMessage.includes('limite de campos') ||\n            lowerMessage.includes('field limit') ||\n            lowerMessage.includes('campo limit')) {\n\n            return {\n                isLimite: true,\n                mensagem: this.getMensagemUpgradeCampo(),\n                mostrarUpgrade: true\n            };\n        }\n\n        return {\n            isLimite: false,\n            mensagem: '',\n            mostrarUpgrade: false\n        };\n    }\n\n    /**\n     * Retorna mensagem de upgrade para templates\n     */\n    private getMensagemUpgradeTemplate(): string {\n        return 'üéØ Limite de templates atingido! Fa√ßa upgrade para o Plano Profissional e crie at√© 50 templates. Clique aqui para ver os planos!';\n    }\n\n    /**\n     * Retorna mensagem de upgrade para campos\n     */\n    private getMensagemUpgradeCampo(): string {\n        return 'üìù Limite de campos atingido! Fa√ßa upgrade para o Plano Profissional e use at√© 1000 campos. Clique aqui para ver os planos!';\n    }\n\n    /**\n     * Obt√©m dados do plano\n     */\n    getPlanoInfo(planoId: string) {\n        return getPlanoConfig(planoId);\n    }\n}\n"],"mappings":"AACA,SAASA,cAAc,QAAQ,yBAAyB;;AAKxD,OAAM,MAAOC,kBAAkB;EAE3B;;;EAGAC,kBAAkBA,CAACC,KAAU;IACzB,MAAMC,QAAQ,GAAGD,KAAK,EAAEA,KAAK,EAAEE,OAAO,IAAIF,KAAK,EAAEE,OAAO,IAAI,EAAE;IAC9D,MAAMC,YAAY,GAAGF,QAAQ,CAACG,WAAW,EAAE;IAE3C;IACA,IAAID,YAAY,CAACE,QAAQ,CAAC,qBAAqB,CAAC,IAC5CF,YAAY,CAACE,QAAQ,CAAC,gBAAgB,CAAC,IACvCF,YAAY,CAACE,QAAQ,CAAC,6BAA6B,CAAC,EAAE;MAEtD,OAAO;QACHC,QAAQ,EAAE,IAAI;QACdL,QAAQ,EAAE,IAAI,CAACM,0BAA0B,EAAE;QAC3CC,cAAc,EAAE;OACnB;IACL;IAEA;IACA,IAAIL,YAAY,CAACE,QAAQ,CAAC,kBAAkB,CAAC,IACzCF,YAAY,CAACE,QAAQ,CAAC,aAAa,CAAC,IACpCF,YAAY,CAACE,QAAQ,CAAC,aAAa,CAAC,EAAE;MAEtC,OAAO;QACHC,QAAQ,EAAE,IAAI;QACdL,QAAQ,EAAE,IAAI,CAACQ,uBAAuB,EAAE;QACxCD,cAAc,EAAE;OACnB;IACL;IAEA,OAAO;MACHF,QAAQ,EAAE,KAAK;MACfL,QAAQ,EAAE,EAAE;MACZO,cAAc,EAAE;KACnB;EACL;EAEA;;;EAGQD,0BAA0BA,CAAA;IAC9B,OAAO,kIAAkI;EAC7I;EAEA;;;EAGQE,uBAAuBA,CAAA;IAC3B,OAAO,6HAA6H;EACxI;EAEA;;;EAGAC,YAAYA,CAACC,OAAe;IACxB,OAAOd,cAAc,CAACc,OAAO,CAAC;EAClC;;qCA3DSb,kBAAkB;EAAA;;WAAlBA,kBAAkB;IAAAc,OAAA,EAAlBd,kBAAkB,CAAAe,IAAA;IAAAC,UAAA,EAFf;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}