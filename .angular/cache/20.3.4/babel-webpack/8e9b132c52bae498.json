{"ast":null,"code":"import _asyncToGenerator from \"/home/danilo/\\xC1rea de trabalho/formsync-nx/node_modules/@angular-devkit/build-angular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatListModule } from '@angular/material/list';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { AuthService } from '../../services/auth.service';\nimport { SidebarComponent } from '../sidebar/sidebar.component';\nimport { FooterComponent } from '../footer/footer.component';\nimport { UsuarioService } from '../../services/usuario.service';\nimport { ErrorHandlerService } from '../../services/error-handler.service';\nimport { AuthErrorHandlerService } from '../../services/auth-error-handler.service';\nimport { CampoService } from '../../services/campo.service';\nimport { TemplateCsvService } from '../../services/template-csv.service';\nimport { AnalyticsService } from '../../services/analytics.service';\nimport { AssinaturaService } from '../../services/assinatura.service';\nimport { getPlanoLimite, getPlanoConfig, getLimiteTemplates, getLimiteTotalCampos } from '../../shared/planos-config';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/auth.service\";\nimport * as i2 from \"../../services/usuario.service\";\nimport * as i3 from \"../../services/campo.service\";\nimport * as i4 from \"../../services/template-csv.service\";\nimport * as i5 from \"../../services/analytics.service\";\nimport * as i6 from \"../../services/assinatura.service\";\nimport * as i7 from \"../../services/error-handler.service\";\nimport * as i8 from \"../../services/auth-error-handler.service\";\nimport * as i9 from \"@angular/common\";\nimport * as i10 from \"@angular/router\";\nimport * as i11 from \"@angular/material/button\";\nimport * as i12 from \"@angular/material/icon\";\nimport * as i13 from \"@angular/material/tooltip\";\nconst _c0 = () => [1, 2, 3];\nfunction DashboardComponent_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 8);\n    i0.ɵɵelement(2, \"div\", 9);\n    i0.ɵɵelementStart(3, \"h3\", 10);\n    i0.ɵɵtext(4, \" Carregando Dashboard \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\", 11);\n    i0.ɵɵtext(6, \" Aguarde enquanto preparamos suas informa\\u00E7\\u00F5es... \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction DashboardComponent_ng_template_6_span_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 65);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.calcularCrescimentoTemplates(), \" \");\n  }\n}\nfunction DashboardComponent_ng_template_6_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 101);\n  }\n}\nfunction DashboardComponent_ng_template_6_span_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 65);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.calcularCrescimentoPreenchimentos(), \" \");\n  }\n}\nfunction DashboardComponent_ng_template_6_div_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 102);\n  }\n}\nfunction DashboardComponent_ng_template_6_a_59_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"a\", 103)(1, \"div\", 104)(2, \"div\", 105);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(3, \"svg\", 73);\n    i0.ɵɵelement(4, \"path\", 32)(5, \"polyline\", 33)(6, \"line\", 74)(7, \"line\", 75)(8, \"line\", 76);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(9, \"h3\", 46);\n    i0.ɵɵtext(10, \"Upload CSV\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"p\", 29);\n    i0.ɵɵtext(12, \"Importe templates em lote\");\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction DashboardComponent_ng_template_6_div_107_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 106)(1, \"div\", 17)(2, \"div\", 107);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(3, \"svg\", 51);\n    i0.ɵɵelement(4, \"rect\", 21)(5, \"line\", 22)(6, \"line\", 23);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(7, \"span\", 108);\n    i0.ɵɵtext(8, \"Ativo\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(9, \"h3\", 66);\n    i0.ɵɵtext(10, \"Seus Formul\\u00E1rios\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"p\", 67);\n    i0.ɵɵtext(12, \"Gerencie todos os seus formul\\u00E1rios criados\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 68)(14, \"span\", 29);\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"a\", 109);\n    i0.ɵɵtext(17, \" Ver Todos \");\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(15);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r1.totalTemplates, \" templates\");\n  }\n}\nfunction DashboardComponent_ng_template_6_section_128_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"section\", 110)(1, \"div\", 111)(2, \"div\", 112)(3, \"mat-icon\", 113);\n    i0.ɵɵtext(4, \"info\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"span\", 114);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(ctx_r1.mensagem);\n  }\n}\nfunction DashboardComponent_ng_template_6_mat_icon_140_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-icon\", 115);\n    i0.ɵɵtext(1, \"refresh\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_ng_template_6_div_141_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"div\", 116);\n  }\n}\nfunction DashboardComponent_ng_template_6_div_144_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 91);\n    i0.ɵɵelement(1, \"div\", 118)(2, \"div\", 119);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction DashboardComponent_ng_template_6_div_144_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, DashboardComponent_ng_template_6_div_144_div_1_Template, 3, 0, \"div\", 117);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpureFunction0(1, _c0));\n  }\n}\nfunction DashboardComponent_ng_template_6_div_145_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 91);\n    i0.ɵɵelement(1, \"div\", 121);\n    i0.ɵɵelementStart(2, \"span\", 122);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"span\", 123);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const atividade_r3 = ctx.$implicit;\n    const i_r4 = ctx.index;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate(atividade_r3);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(i_r4 === 0 ? \"Agora\" : i_r4 === 1 ? \"2 min atr\\u00E1s\" : i_r4 === 2 ? \"5 min atr\\u00E1s\" : \"10 min atr\\u00E1s\");\n  }\n}\nfunction DashboardComponent_ng_template_6_div_145_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, DashboardComponent_ng_template_6_div_145_div_1_Template, 6, 2, \"div\", 120);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.atividades)(\"ngForTrackBy\", ctx_r1.trackByAtividade);\n  }\n}\nfunction DashboardComponent_ng_template_6_ng_template_146_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 124)(1, \"div\", 125)(2, \"mat-icon\", 126);\n    i0.ɵɵtext(3, \"inbox\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"h3\", 127);\n    i0.ɵɵtext(5, \" Nenhuma atividade recente \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\", 128);\n    i0.ɵɵtext(7, \" Comece a usar a extens\\u00E3o para ver suas atividades aqui \");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction DashboardComponent_ng_template_6_div_168_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 97)(1, \"mat-icon\", 98);\n    i0.ɵɵtext(2, \"check\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const recurso_r5 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", recurso_r5, \" \");\n  }\n}\nfunction DashboardComponent_ng_template_6_section_169_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"section\", 12)(1, \"div\", 129)(2, \"div\", 80)(3, \"div\", 91)(4, \"div\", 130)(5, \"mat-icon\", 131);\n    i0.ɵɵtext(6, \"rocket_launch\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"div\", 93)(8, \"h2\", 132);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"p\", 95);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(12, \"div\")(13, \"a\", 133, 3);\n    i0.ɵɵlistener(\"mouseenter\", function DashboardComponent_ng_template_6_section_169_Template_a_mouseenter_13_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const upgradeButton_r7 = i0.ɵɵreference(14);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onUpgradeButtonHover(upgradeButton_r7, true));\n    })(\"mouseleave\", function DashboardComponent_ng_template_6_section_169_Template_a_mouseleave_13_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const upgradeButton_r7 = i0.ɵɵreference(14);\n      const ctx_r1 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r1.onUpgradeButtonHover(upgradeButton_r7, false));\n    });\n    i0.ɵɵelementStart(15, \"mat-icon\", 134);\n    i0.ɵɵtext(16, \"arrow_forward\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(17);\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(9);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.tituloUpgrade || \"Upgrade do Plano\", \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.descricaoUpgrade || \"Fa\\u00E7a upgrade do seu plano para acessar mais recursos e funcionalidades.\", \" \");\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.textoBotaoUpgrade || \"Ver Planos\", \" \");\n  }\n}\nfunction DashboardComponent_ng_template_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"h1\", 13);\n    i0.ɵɵtext(2, \" Bem-vindo ao seu Dashboard \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\", 14);\n    i0.ɵɵtext(4, \" Gerencie Seus Formul\\u00E1rios e acompanhe suas atividades de preenchimento autom\\u00E1tico. \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 15)(6, \"div\", 16)(7, \"div\", 17)(8, \"div\", 18)(9, \"div\", 19);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(10, \"svg\", 20);\n    i0.ɵɵelement(11, \"rect\", 21)(12, \"line\", 22)(13, \"line\", 23);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(14, \"h3\", 24);\n    i0.ɵɵtext(15, \"Formul\\u00E1rios\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(16, DashboardComponent_ng_template_6_span_16_Template, 2, 1, \"span\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"div\", 26);\n    i0.ɵɵtemplate(18, DashboardComponent_ng_template_6_div_18_Template, 1, 0, \"div\", 27);\n    i0.ɵɵelementStart(19, \"span\", 28);\n    i0.ɵɵtext(20);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(21, \"p\", 29);\n    i0.ɵɵtext(22, \"Criados manualmente ou via CSV\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(23, \"div\", 16)(24, \"div\", 17)(25, \"div\", 18)(26, \"div\", 30);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(27, \"svg\", 31);\n    i0.ɵɵelement(28, \"path\", 32)(29, \"polyline\", 33)(30, \"line\", 34)(31, \"line\", 35)(32, \"polyline\", 36);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(33, \"h3\", 24);\n    i0.ɵɵtext(34, \"Preenchimentos\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(35, DashboardComponent_ng_template_6_span_35_Template, 2, 1, \"span\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(36, \"div\", 26);\n    i0.ɵɵtemplate(37, DashboardComponent_ng_template_6_div_37_Template, 1, 0, \"div\", 37);\n    i0.ɵɵelementStart(38, \"span\", 28);\n    i0.ɵɵtext(39);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(40, \"p\", 29);\n    i0.ɵɵtext(41);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(42, \"div\", 12)(43, \"h2\", 38);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(44, \"svg\", 39);\n    i0.ɵɵelement(45, \"polygon\", 40);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(46, \" A\\u00E7\\u00F5es R\\u00E1pidas \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(47, \"div\", 41)(48, \"a\", 42)(49, \"div\", 43)(50, \"div\", 44);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(51, \"svg\", 45);\n    i0.ɵɵelement(52, \"rect\", 21)(53, \"line\", 22)(54, \"line\", 23);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(55, \"h3\", 46);\n    i0.ɵɵtext(56, \"Formul\\u00E1rios\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(57, \"p\", 29);\n    i0.ɵɵtext(58, \"Crie e organize Seus Formul\\u00E1rios\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(59, DashboardComponent_ng_template_6_a_59_Template, 13, 0, \"a\", 47);\n    i0.ɵɵelementStart(60, \"a\", 48)(61, \"div\", 49)(62, \"div\", 50);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(63, \"svg\", 51);\n    i0.ɵɵelement(64, \"path\", 52)(65, \"circle\", 53);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(66, \"h3\", 46);\n    i0.ɵɵtext(67, \"Perfil\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(68, \"p\", 29);\n    i0.ɵɵtext(69, \"Atualize suas informa\\u00E7\\u00F5es\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(70, \"a\", 54)(71, \"div\", 55)(72, \"div\", 56);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(73, \"svg\", 57);\n    i0.ɵɵelement(74, \"path\", 58)(75, \"rect\", 59)(76, \"circle\", 60);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(77, \"h3\", 46);\n    i0.ɵɵtext(78, \"Suporte\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(79, \"p\", 29);\n    i0.ɵɵtext(80, \"Entre em contato conosco\");\n    i0.ɵɵelementEnd()()()()();\n    i0.ɵɵelementStart(81, \"div\", 12)(82, \"h2\", 38);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(83, \"svg\", 61);\n    i0.ɵɵelement(84, \"rect\", 21)(85, \"line\", 22)(86, \"line\", 23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(87, \" Seus Formul\\u00E1rios \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(88, \"div\", 62)(89, \"div\", 63)(90, \"div\", 17)(91, \"div\", 64);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(92, \"svg\", 45);\n    i0.ɵɵelement(93, \"rect\", 21)(94, \"line\", 22)(95, \"line\", 23);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(96, \"span\", 65);\n    i0.ɵɵtext(97, \"Teste\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(98, \"h3\", 66);\n    i0.ɵɵtext(99, \"Formul\\u00E1rio Completo\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(100, \"p\", 67);\n    i0.ɵɵtext(101, \"Teste todos os tipos de campo com a extens\\u00E3o FormSync\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(102, \"div\", 68)(103, \"span\", 29);\n    i0.ɵɵtext(104);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(105, \"a\", 69);\n    i0.ɵɵtext(106, \" Testar \");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(107, DashboardComponent_ng_template_6_div_107_Template, 18, 1, \"div\", 70);\n    i0.ɵɵelementStart(108, \"div\", 71)(109, \"div\", 17)(110, \"div\", 72);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(111, \"svg\", 73);\n    i0.ɵɵelement(112, \"path\", 32)(113, \"polyline\", 33)(114, \"line\", 74)(115, \"line\", 75)(116, \"line\", 76);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(117, \"span\", 65);\n    i0.ɵɵtext(118, \"Novo\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(119, \"h3\", 66);\n    i0.ɵɵtext(120, \"Criar Formul\\u00E1rio\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(121, \"p\", 67);\n    i0.ɵɵtext(122, \"Crie um novo formul\\u00E1rio personalizado\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(123, \"div\", 68)(124, \"span\", 29);\n    i0.ɵɵtext(125, \"Personalizado\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(126, \"a\", 77);\n    i0.ɵɵtext(127, \" Criar \");\n    i0.ɵɵelementEnd()()()()();\n    i0.ɵɵtemplate(128, DashboardComponent_ng_template_6_section_128_Template, 7, 1, \"section\", 78);\n    i0.ɵɵelementStart(129, \"div\", 79)(130, \"div\", 80)(131, \"div\", 81)(132, \"div\")(133, \"h2\", 82)(134, \"mat-icon\", 83);\n    i0.ɵɵtext(135, \"history\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(136, \" Atividades Recentes \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(137, \"p\", 84);\n    i0.ɵɵtext(138, \" Acompanhe suas \\u00FAltimas a\\u00E7\\u00F5es no sistema \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(139, \"button\", 85);\n    i0.ɵɵlistener(\"click\", function DashboardComponent_ng_template_6_Template_button_click_139_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r1 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r1.atualizarAtividades());\n    });\n    i0.ɵɵtemplate(140, DashboardComponent_ng_template_6_mat_icon_140_Template, 2, 0, \"mat-icon\", 86)(141, DashboardComponent_ng_template_6_div_141_Template, 1, 0, \"div\", 87);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelement(142, \"div\", 88);\n    i0.ɵɵelementStart(143, \"div\");\n    i0.ɵɵtemplate(144, DashboardComponent_ng_template_6_div_144_Template, 2, 2, \"div\", 89)(145, DashboardComponent_ng_template_6_div_145_Template, 2, 2, \"div\", 7)(146, DashboardComponent_ng_template_6_ng_template_146_Template, 8, 0, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(148, \"section\", 12)(149, \"div\", 90)(150, \"div\", 80)(151, \"div\", 91)(152, \"div\", 92);\n    i0.ɵɵtext(153, \" \\uD83C\\uDF89 \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(154, \"div\", 93)(155, \"h2\", 94);\n    i0.ɵɵtext(156);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(157, \"p\", 95);\n    i0.ɵɵtext(158);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(159, \"div\", 96)(160, \"div\", 97)(161, \"mat-icon\", 98);\n    i0.ɵɵtext(162, \"folder\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(163);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(164, \"div\", 97)(165, \"mat-icon\", 98);\n    i0.ɵɵtext(166, \"description\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(167);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(168, DashboardComponent_ng_template_6_div_168_Template, 4, 1, \"div\", 99);\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵtemplate(169, DashboardComponent_ng_template_6_section_169_Template, 18, 3, \"section\", 100);\n  }\n  if (rf & 2) {\n    const noActivities_r8 = i0.ɵɵreference(147);\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(16);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.carregandoPagina && ctx_r1.totalTemplates > 0);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.carregandoPagina);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.totalTemplates);\n    i0.ɵɵadvance(15);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.carregandoPagina && ctx_r1.formulariosPreenchidos > 0);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.carregandoPagina);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r1.formulariosPreenchidos);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\\u00DAltimo: \", ctx_r1.ultimoPreenchimento);\n    i0.ɵɵadvance(18);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.podeAcessarUploadCsv());\n    i0.ɵɵadvance(45);\n    i0.ɵɵtextInterpolate1(\"\", ctx_r1.totalTemplates + 1, \" formul\\u00E1rios\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.totalTemplates > 0);\n    i0.ɵɵadvance(21);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.mensagem);\n    i0.ɵɵadvance(11);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.carregandoAtividades);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.carregandoAtividades);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.carregandoAtividades);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.carregandoAtividades);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r1.carregandoAtividades && ctx_r1.atividades.length > 0)(\"ngIfElse\", noActivities_r8);\n    i0.ɵɵadvance(11);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.nomePlano, \" Ativo! \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.descricaoPlano, \" \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.limiteTemplates, \" formul\\u00E1rios \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.limiteTotalCampos, \" campos total \");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.getRecursosPrincipais());\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.mostrarUpgrade);\n  }\n}\nexport class DashboardComponent {\n  authService;\n  usuarioService;\n  campoService;\n  templateCsvService;\n  analyticsService;\n  assinaturaService;\n  errorHandler;\n  authErrorHandler;\n  // Dados do usuário\n  nomeUsuario = '';\n  emailUsuario = '';\n  planoUsuario = 'PESSOAL';\n  // Estatísticas\n  totalTemplates = 0; // Total geral de templates (manuais + CSV)\n  formulariosPreenchidos = 0;\n  ultimoPreenchimento = 'Nunca';\n  atividades = [];\n  // Estado de carregamento\n  carregandoPagina = true;\n  carregandoAtividades = false;\n  carregamentoInicial = true;\n  // Assinatura\n  assinaturaValida = true;\n  assinaturaExpirada = false;\n  // Mensagens\n  mensagem = '';\n  // Propriedades computadas do plano\n  get nomePlano() {\n    return getPlanoConfig(this.planoUsuario).nome;\n  }\n  get descricaoPlano() {\n    return getPlanoConfig(this.planoUsuario).descricao;\n  }\n  get limiteCampos() {\n    return getPlanoConfig(this.planoUsuario).limite;\n  }\n  get limiteTemplates() {\n    return getLimiteTemplates(this.planoUsuario);\n  }\n  get limiteTotalCampos() {\n    return getLimiteTotalCampos(this.planoUsuario);\n  }\n  constructor(authService, usuarioService, campoService, templateCsvService, analyticsService, assinaturaService, errorHandler, authErrorHandler) {\n    this.authService = authService;\n    this.usuarioService = usuarioService;\n    this.campoService = campoService;\n    this.templateCsvService = templateCsvService;\n    this.analyticsService = analyticsService;\n    this.assinaturaService = assinaturaService;\n    this.errorHandler = errorHandler;\n    this.authErrorHandler = authErrorHandler;\n  }\n  ngOnInit() {\n    // Verificar se o usuário está autenticado\n    if (!this.authService.estaAutenticado()) {\n      console.log('❌ Usuário não autenticado');\n      this.mensagem = '⚠️ Faça login para acessar o dashboard.';\n      return;\n    }\n    console.log('✅ Usuário autenticado, carregando dados...');\n    this.carregarDadosCompleto();\n  }\n  ngOnDestroy() {\n    // Cleanup se necessário\n  }\n  /**\n   * Carrega todos os dados do dashboard de forma centralizada\n   */\n  carregarDadosCompleto() {\n    if (this.carregandoPagina && !this.carregamentoInicial) {\n      console.log('🔄 Carregamento já em andamento, ignorando nova requisição');\n      return;\n    }\n    this.carregandoPagina = true;\n    if (this.carregamentoInicial) {\n      this.carregamentoInicial = false;\n    }\n    console.log('🔄 Iniciando carregamento completo do dashboard...');\n    // Carregar dados do usuário\n    this.carregarDadosUsuario();\n    // Carregar dados reais do backend\n    this.carregarDadosBackend();\n  }\n  /**\n   * Carrega dados do usuário do localStorage e backend\n   */\n  carregarDadosUsuario() {\n    // Dados do localStorage\n    this.nomeUsuario = localStorage.getItem('nomeUsuario') || 'Usuário';\n    this.emailUsuario = localStorage.getItem('emailUsuario') || 'email@exemplo.com';\n    this.planoUsuario = localStorage.getItem('plano') || 'PESSOAL';\n    console.log('✅ Dados do usuário carregados:', {\n      nome: this.nomeUsuario,\n      email: this.emailUsuario,\n      plano: this.planoUsuario\n    });\n    // Buscar dados do usuário no backend\n    this.usuarioService.obterUsuarioBackend().subscribe({\n      next: usuario => {\n        console.log('✅ Dados do usuário do backend:', usuario);\n        this.nomeUsuario = usuario.nome || this.nomeUsuario;\n        this.emailUsuario = usuario.email || this.emailUsuario;\n        this.planoUsuario = usuario.plano || this.planoUsuario;\n        // Atualizar localStorage\n        localStorage.setItem('nomeUsuario', this.nomeUsuario);\n        localStorage.setItem('emailUsuario', this.emailUsuario);\n        localStorage.setItem('plano', this.planoUsuario);\n      },\n      error: error => {\n        console.error('❌ Erro ao buscar dados do usuário:', error);\n        // Usar o serviço especializado para tratar erros de autenticação\n        this.authErrorHandler.handleAuthError(error, 'Dashboard-Usuario');\n      }\n    });\n  }\n  /**\n   * Carrega dados reais do backend\n   */\n  carregarDadosBackend() {\n    console.log('🔄 Carregando dados do backend...');\n    // Fazer apenas UMA requisição para Buscar Formulários do usuário\n    this.templateCsvService.listarTemplates().subscribe({\n      next: templatesUsuario => {\n        console.log('✅ Templates do usuário carregados:', templatesUsuario);\n        // Usar apenas templates do usuário (manuais + CSV que ele criou)\n        this.totalTemplates = Array.isArray(templatesUsuario) ? templatesUsuario.length : 0;\n        // Calcular estatísticas baseadas nos templates do usuário\n        this.calcularEstatisticas(templatesUsuario);\n        // Gerar atividades usando os dados já obtidos\n        this.gerarAtividadesBaseadas(templatesUsuario);\n        // Atualizar atividades com dados reais\n        this.atualizarAtividadesReais();\n        // Finalizar carregamento\n        setTimeout(() => {\n          this.carregandoPagina = false;\n          console.log('✅ Carregamento completo finalizado');\n        }, 500);\n      },\n      error: error => {\n        console.error('❌ Erro ao carregar templates do usuário:', error);\n        // Usar o serviço especializado para tratar erros de autenticação\n        this.authErrorHandler.handleAuthError(error, 'Dashboard-Templates');\n        // Se não for erro de autenticação, continuar com o tratamento normal\n        if (!this.authErrorHandler.isAuthError(error)) {\n          this.totalTemplates = 0;\n          this.mensagem = this.errorHandler.getErrorMessage(error);\n          this.carregandoPagina = false;\n        }\n      }\n    });\n    // Buscar informações da assinatura em paralelo\n    this.assinaturaService.consultarAssinaturaUsuarioLogado().subscribe({\n      next: assinatura => {\n        console.log('✅ Assinatura carregada:', assinatura);\n        this.planoUsuario = assinatura.plano;\n        this.assinaturaValida = assinatura.status === 'ATIVA';\n        this.assinaturaExpirada = !this.assinaturaValida;\n        // Atualizar localStorage\n        localStorage.setItem('plano', this.planoUsuario);\n      },\n      error: error => {\n        console.error('❌ Erro ao carregar assinatura:', error);\n        // Usar dados do localStorage\n        this.assinaturaValida = true; // Fallback\n        this.assinaturaExpirada = false;\n      }\n    });\n  }\n  /**\n   * Calcula estatísticas baseadas nos templates cadastrados\n   */\n  calcularEstatisticas(templates) {\n    if (!templates || templates.length === 0) {\n      this.formulariosPreenchidos = 0;\n      this.ultimoPreenchimento = 'Nunca';\n      return;\n    }\n    // Calcular total de formulários preenchidos baseado no totalUso dos templates\n    this.formulariosPreenchidos = templates.reduce((total, template) => {\n      return total + (template.totalUso || 0);\n    }, 0);\n    // Calcular último preenchimento baseado no ultimoUso dos templates\n    const templatesComUso = templates.filter(template => template.ultimoUso && template.ultimoUso !== '');\n    if (templatesComUso.length > 0) {\n      // Encontrar o template com uso mais recente\n      const templateMaisRecente = templatesComUso.sort((a, b) => {\n        const dataA = new Date(a.ultimoUso);\n        const dataB = new Date(b.ultimoUso);\n        return dataB.getTime() - dataA.getTime();\n      })[0];\n      const dataUltimo = new Date(templateMaisRecente.ultimoUso);\n      const agora = new Date();\n      const diffHoras = Math.floor((agora.getTime() - dataUltimo.getTime()) / (1000 * 60 * 60));\n      if (diffHoras < 1) {\n        this.ultimoPreenchimento = 'Agora mesmo';\n      } else if (diffHoras < 24) {\n        this.ultimoPreenchimento = `Há ${diffHoras} horas`;\n      } else {\n        const diffDias = Math.floor(diffHoras / 24);\n        this.ultimoPreenchimento = `Há ${diffDias} dias`;\n      }\n    } else {\n      this.ultimoPreenchimento = 'Nunca';\n    }\n  }\n  /**\n   * Gera atividades baseadas nos templates cadastrados e histórico real\n   */\n  gerarAtividadesBaseadas(templates) {\n    const atividades = [];\n    // Adicionar login sempre como primeira atividade\n    atividades.push('Login realizado com sucesso');\n    if (!templates || templates.length === 0) {\n      atividades.push('Nenhum formulário cadastrado ainda');\n      atividades.push('Use o painel para cadastrar seus primeiros formulários');\n      this.atividades = atividades;\n      return;\n    }\n    // Ordenar templates por data de criação (mais recentes primeiro)\n    const templatesOrdenados = templates.filter(template => template.dataCriacao).sort((a, b) => {\n      const dataA = new Date(a.dataCriacao);\n      const dataB = new Date(b.dataCriacao);\n      return dataB.getTime() - dataA.getTime();\n    });\n    // Gerar atividades baseadas nos templates mais recentes\n    const templatesRelevantes = templatesOrdenados.slice(0, 3);\n    templatesRelevantes.forEach(template => {\n      if (template.dataCriacao) {\n        const dataTemplate = new Date(template.dataCriacao);\n        const agora = new Date();\n        const diffHoras = Math.floor((agora.getTime() - dataTemplate.getTime()) / (1000 * 60 * 60));\n        let tempoAtras = '';\n        if (diffHoras < 1) {\n          tempoAtras = 'agora mesmo';\n        } else if (diffHoras < 24) {\n          tempoAtras = `há ${diffHoras} horas`;\n        } else {\n          const diffDias = Math.floor(diffHoras / 24);\n          tempoAtras = `há ${diffDias} dias`;\n        }\n        atividades.push(`Formulário \"${template.nome}\" criado ${tempoAtras}`);\n      }\n    });\n    // Adicionar atividades baseadas no uso real\n    const templatesComUso = templates.filter(template => template.totalUso > 0);\n    if (templatesComUso.length > 0) {\n      const templateMaisUsado = templatesComUso.sort((a, b) => (b.totalUso || 0) - (a.totalUso || 0))[0];\n      atividades.push(`Formulário \"${templateMaisUsado.nome}\" mais usado: ${templateMaisUsado.totalUso} preenchimentos`);\n    }\n    // Adicionar estatísticas reais\n    const totalCampos = templates.reduce((total, template) => {\n      return total + (template.campos?.length || 0);\n    }, 0);\n    if (totalCampos > 0) {\n      atividades.push(`Total de ${totalCampos} campos em ${templates.length} formulários`);\n    }\n    // Adicionar atividade de sucesso baseada em dados reais\n    if (templates.length >= 5) {\n      atividades.push(`Excelente! Você criou ${templates.length} formulários`);\n    } else if (templates.length >= 3) {\n      atividades.push(`Bom trabalho! ${templates.length} formulários criados`);\n    } else if (templates.length >= 1) {\n      atividades.push(`Começando bem! Seu primeiro formulário foi criado`);\n    }\n    this.atividades = atividades;\n  }\n  /**\n   * Atualiza apenas os campos\n   */\n  atualizarCampos() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      console.log('🔄 Atualizando dados do dashboard...');\n      _this.carregandoPagina = true;\n      // Fazer apenas UMA requisição para Buscar Formulários do usuário\n      _this.templateCsvService.listarTemplates().subscribe({\n        next: templatesUsuario => {\n          // Usar apenas templates do usuário (manuais + CSV que ele criou)\n          _this.totalTemplates = Array.isArray(templatesUsuario) ? templatesUsuario.length : 0;\n          // Recalcular estatísticas baseadas nos templates do usuário\n          _this.calcularEstatisticas(templatesUsuario);\n          // Gerar atividades usando os dados já obtidos\n          _this.gerarAtividadesBaseadas(templatesUsuario);\n          _this.carregandoPagina = false;\n        },\n        error: error => {\n          console.error('❌ Erro ao  templates do usuário:', error);\n          _this.mensagem = _this.errorHandler.getErrorMessage(error);\n          _this.carregandoPagina = false;\n        }\n      });\n    })();\n  }\n  /**\n   * Atualiza apenas as atividades recentes\n   */\n  atualizarAtividades() {\n    console.log('🔄 Atualizando atividades recentes...');\n    this.carregandoAtividades = true;\n    // Buscar Formulários do usuário atualizados para gerar novas atividades\n    this.templateCsvService.listarTemplates().subscribe({\n      next: templatesUsuario => {\n        this.gerarAtividadesBaseadas(templatesUsuario);\n        this.atualizarAtividadesReais();\n        this.carregandoAtividades = false;\n      },\n      error: error => {\n        console.error('❌ Erro ao atualizar atividades:', error);\n        this.carregandoAtividades = false;\n        // Manter atividades existentes em caso de erro\n      }\n    });\n  }\n  /**\n   * Atualiza dados quando a página ganha foco\n   */\n  onWindowFocus() {\n    if (!this.carregandoPagina && !this.carregamentoInicial) {\n      console.log('🔄 Página ganhou foco, atualizando dados...');\n      this.atualizarCampos();\n    }\n  }\n  // Getters para upgrade\n  get tituloUpgrade() {\n    if (this.planoUsuario === 'PESSOAL') {\n      return 'Plano Profissional';\n    } else if (this.planoUsuario === 'PROFISSIONAL' || this.planoUsuario === 'PROFISSIONAL_MENSAL' || this.planoUsuario === 'PROFISSIONAL_VITALICIO') {\n      return 'Plano Empresarial';\n    } else if (this.planoUsuario === 'EMPRESARIAL') {\n      return 'Plano Completo';\n    } else {\n      return 'Upgrade do Plano';\n    }\n  }\n  get descricaoUpgrade() {\n    if (this.planoUsuario === 'PESSOAL') {\n      return `Tenha acesso até ${getPlanoLimite('PROFISSIONAL_MENSAL')} campos e ao histórico de preenchimentos e recursos avançados para gerenciar seus dados!`;\n    } else if (this.planoUsuario === 'PROFISSIONAL' || this.planoUsuario === 'PROFISSIONAL_MENSAL' || this.planoUsuario === 'PROFISSIONAL_VITALICIO') {\n      return 'Importe dados via CSV, crie perfis de equipe e acesse histórico completo de preenchimentos.';\n    } else if (this.planoUsuario === 'EMPRESARIAL') {\n      return 'Você já possui o plano mais completo disponível!';\n    } else {\n      return 'Faça upgrade do seu plano para acessar mais recursos e funcionalidades.';\n    }\n  }\n  get textoBotaoUpgrade() {\n    if (this.planoUsuario === 'PESSOAL') {\n      return 'Conhecer Plano Profissional';\n    } else if (this.planoUsuario === 'PROFISSIONAL' || this.planoUsuario === 'PROFISSIONAL_MENSAL' || this.planoUsuario === 'PROFISSIONAL_VITALICIO') {\n      return 'Conhecer Plano Empresarial';\n    } else if (this.planoUsuario === 'EMPRESARIAL') {\n      return 'Plano Completo';\n    } else {\n      return 'Ver Planos';\n    }\n  }\n  get mostrarUpgrade() {\n    // Sempre mostrar o upgrade card, exceto se for empresarial\n    return this.planoUsuario !== 'EMPRESARIAL';\n  }\n  trackByAtividade(index, atividade) {\n    return atividade;\n  }\n  /**\n   * Retorna os recursos principais do plano atual, filtrados e organizados\n   */\n  getRecursosPrincipais() {\n    const plano = getPlanoConfig(this.planoUsuario);\n    const recursos = [...plano.recursos];\n    // Filtrar recursos duplicados ou muito similares\n    const recursosFiltrados = recursos.filter((recurso, index, array) => {\n      // Remover recursos que são apenas descrições do plano\n      if (recurso.toLowerCase().includes('para') || recurso.toLowerCase().includes('pague') || recurso.toLowerCase().includes('empresas')) {\n        return false;\n      }\n      // Remover duplicatas\n      return array.indexOf(recurso) === index;\n    });\n    // Priorizar recursos específicos e úteis\n    const recursosPrioritarios = recursosFiltrados.filter(recurso => recurso.toLowerCase().includes('csv') || recurso.toLowerCase().includes('templates') || recurso.toLowerCase().includes('relatórios') || recurso.toLowerCase().includes('empresarial') || recurso.toLowerCase().includes('prioritário'));\n    // Se não houver recursos prioritários suficientes, usar os primeiros disponíveis\n    if (recursosPrioritarios.length >= 3) {\n      return recursosPrioritarios.slice(0, 3);\n    }\n    // Combinar recursos prioritários com outros recursos\n    const resultado = [...recursosPrioritarios];\n    const outrosRecursos = recursosFiltrados.filter(recurso => !recursosPrioritarios.includes(recurso));\n    resultado.push(...outrosRecursos.slice(0, 3 - resultado.length));\n    return resultado;\n  }\n  /**\n   * Manipula o hover do botão de upgrade\n   */\n  onUpgradeButtonHover(button, isHovering) {\n    const element = button;\n    if (isHovering) {\n      element.style.backgroundColor = 'rgba(255,255,255,0.3)';\n    } else {\n      element.style.backgroundColor = 'rgba(255,255,255,0.2)';\n    }\n  }\n  /**\n  * Verifica se o usuário pode acessar o upload CSV baseado no plano\n  */\n  podeAcessarUploadCsv() {\n    const planoUsuario = this.planoUsuario.toUpperCase();\n    return planoUsuario === 'EMPRESARIAL' || planoUsuario.includes('EMPRESARIAL') || planoUsuario === 'PROFISSIONAL_VITALICIO' || planoUsuario.includes('VITALICIO') || planoUsuario === 'PROFISSIONAL_MENSAL' || planoUsuario.includes('MENSAL');\n  }\n  /**\n   * Calcula o crescimento de templates baseado no histórico\n   */\n  calcularCrescimentoTemplates() {\n    if (this.totalTemplates === 0) return '';\n    // Simular crescimento baseado no número de templates\n    if (this.totalTemplates >= 10) return '+25%';\n    if (this.totalTemplates >= 5) return '+15%';\n    if (this.totalTemplates >= 3) return '+10%';\n    if (this.totalTemplates >= 1) return '+5%';\n    return '';\n  }\n  /**\n   * Calcula o crescimento de preenchimentos baseado no histórico\n   */\n  calcularCrescimentoPreenchimentos() {\n    if (this.formulariosPreenchidos === 0) return '';\n    // Simular crescimento baseado no número de preenchimentos\n    if (this.formulariosPreenchidos >= 50) return '+20%';\n    if (this.formulariosPreenchidos >= 25) return '+15%';\n    if (this.formulariosPreenchidos >= 10) return '+10%';\n    if (this.formulariosPreenchidos >= 5) return '+8%';\n    return '';\n  }\n  /**\n   * Registra uma nova atividade em tempo real\n   */\n  registrarAtividade(acao) {\n    const agora = new Date();\n    const horaFormatada = agora.toLocaleTimeString('pt-BR', {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n    const novaAtividade = `${acao} - ${horaFormatada}`;\n    // Adiciona no início da lista\n    this.atividades.unshift(novaAtividade);\n    // Mantém apenas as 10 atividades mais recentes\n    if (this.atividades.length > 10) {\n      this.atividades = this.atividades.slice(0, 10);\n    }\n  }\n  /**\n   * Atualiza atividades com dados reais do usuário\n   */\n  atualizarAtividadesReais() {\n    if (this.totalTemplates > 0) {\n      // Registrar atividade baseada no número de formulários\n      if (this.totalTemplates === 1) {\n        this.registrarAtividade('Primeiro formulário criado com sucesso!');\n      } else if (this.totalTemplates >= 5) {\n        this.registrarAtividade(`Gerenciando ${this.totalTemplates} formulários`);\n      }\n      // Registrar atividade baseada no uso\n      if (this.formulariosPreenchidos > 0) {\n        this.registrarAtividade(`${this.formulariosPreenchidos} formulários preenchidos`);\n      }\n    }\n  }\n  static ɵfac = function DashboardComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || DashboardComponent)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.UsuarioService), i0.ɵɵdirectiveInject(i3.CampoService), i0.ɵɵdirectiveInject(i4.TemplateCsvService), i0.ɵɵdirectiveInject(i5.AnalyticsService), i0.ɵɵdirectiveInject(i6.AssinaturaService), i0.ɵɵdirectiveInject(i7.ErrorHandlerService), i0.ɵɵdirectiveInject(i8.AuthErrorHandlerService));\n  };\n  static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DashboardComponent,\n    selectors: [[\"app-dashboard\"]],\n    hostBindings: function DashboardComponent_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"focus\", function DashboardComponent_focus_HostBindingHandler() {\n          return ctx.onWindowFocus();\n        }, i0.ɵɵresolveWindow);\n      }\n    },\n    decls: 9,\n    vars: 2,\n    consts: [[\"sidebar\", \"\"], [\"dashboardContent\", \"\"], [\"noActivities\", \"\"], [\"upgradeButton\", \"\"], [1, \"min-h-screen\", \"bg-gray-50\"], [1, \"flex\"], [1, \"flex-1\", \"p-3\", \"sm:p-4\"], [4, \"ngIf\", \"ngIfElse\"], [1, \"flex\", \"flex-col\", \"items-center\", \"justify-center\", \"py-16\"], [1, \"animate-spin\", \"rounded-full\", \"h-10\", \"w-10\", \"border-b-2\", \"border-indigo-600\"], [1, \"mt-6\", \"text-lg\", \"font-semibold\", \"text-gray-900\"], [1, \"text-gray-500\", \"mt-2\"], [1, \"mb-4\", \"sm:mb-6\"], [1, \"text-base\", \"sm:text-lg\", \"font-bold\", \"text-gray-900\", \"mb-1\"], [1, \"text-xs\", \"sm:text-sm\", \"text-gray-600\"], [1, \"grid\", \"grid-cols-1\", \"sm:grid-cols-2\", \"gap-3\", \"sm:gap-4\", \"mb-4\", \"sm:mb-6\"], [1, \"bg-white\", \"rounded-xl\", \"border\", \"border-gray-200\", \"p-3\", \"sm:p-4\", \"hover:border-gray-300\", \"transition-colors\", \"duration-200\"], [1, \"flex\", \"items-start\", \"justify-between\", \"mb-2\"], [1, \"flex\", \"items-center\", \"gap-2\"], [1, \"w-7\", \"h-7\", \"bg-indigo-100\", \"rounded-lg\", \"flex\", \"items-center\", \"justify-center\"], [\"width\", \"14\", \"height\", \"14\", \"viewBox\", \"0 0 24 24\", \"fill\", \"none\", \"stroke\", \"currentColor\", \"stroke-width\", \"2\", \"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\", 1, \"text-indigo-600\"], [\"x\", \"3\", \"y\", \"3\", \"width\", \"18\", \"height\", \"18\", \"rx\", \"2\", \"ry\", \"2\"], [\"x1\", \"9\", \"y1\", \"9\", \"x2\", \"15\", \"y2\", \"9\"], [\"x1\", \"9\", \"y1\", \"15\", \"x2\", \"15\", \"y2\", \"15\"], [1, \"text-sm\", \"font-semibold\", \"text-gray-900\"], [\"class\", \"text-xs font-medium text-green-600 bg-green-50 px-2 py-1 rounded-full\", 4, \"ngIf\"], [1, \"flex\", \"items-center\", \"gap-2\", \"mb-1\"], [\"class\", \"animate-spin rounded-full h-4 w-4 border-b-2 border-indigo-600\", 4, \"ngIf\"], [1, \"text-xl\", \"font-bold\", \"text-gray-900\"], [1, \"text-xs\", \"text-gray-500\"], [1, \"w-7\", \"h-7\", \"bg-green-100\", \"rounded-lg\", \"flex\", \"items-center\", \"justify-center\"], [\"width\", \"14\", \"height\", \"14\", \"viewBox\", \"0 0 24 24\", \"fill\", \"none\", \"stroke\", \"currentColor\", \"stroke-width\", \"2\", \"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\", 1, \"text-green-600\"], [\"d\", \"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"], [\"points\", \"14,2 14,8 20,8\"], [\"x1\", \"16\", \"y1\", \"13\", \"x2\", \"8\", \"y2\", \"13\"], [\"x1\", \"16\", \"y1\", \"17\", \"x2\", \"8\", \"y2\", \"17\"], [\"points\", \"10,9 9,9 8,9\"], [\"class\", \"animate-spin rounded-full h-4 w-4 border-b-2 border-green-600\", 4, \"ngIf\"], [1, \"text-sm\", \"sm:text-base\", \"font-semibold\", \"text-gray-900\", \"mb-3\", \"flex\", \"items-center\", \"gap-2\"], [\"width\", \"16\", \"height\", \"16\", \"viewBox\", \"0 0 24 24\", \"fill\", \"none\", \"stroke\", \"currentColor\", \"stroke-width\", \"2\", \"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\", 1, \"text-orange-500\"], [\"points\", \"13 2 3 14 12 14 11 22 21 10 12 10 13 2\"], [1, \"grid\", \"grid-cols-1\", \"sm:grid-cols-2\", \"lg:grid-cols-4\", \"gap-3\"], [\"routerLink\", \"/formularios\", 1, \"group\", \"block\"], [1, \"bg-white\", \"rounded-xl\", \"border\", \"border-gray-200\", \"p-3\", \"text-center\", \"hover:border-indigo-300\", \"hover:shadow-md\", \"transition-all\", \"duration-200\"], [1, \"w-8\", \"h-8\", \"bg-indigo-100\", \"rounded-xl\", \"flex\", \"items-center\", \"justify-center\", \"mx-auto\", \"mb-2\", \"group-hover:bg-indigo-200\", \"transition-colors\", \"duration-200\"], [\"width\", \"16\", \"height\", \"16\", \"viewBox\", \"0 0 24 24\", \"fill\", \"none\", \"stroke\", \"currentColor\", \"stroke-width\", \"2\", \"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\", 1, \"text-indigo-600\"], [1, \"text-sm\", \"font-semibold\", \"text-gray-900\", \"mb-1\"], [\"routerLink\", \"/upload-csv\", \"class\", \"group block\", 4, \"ngIf\"], [\"routerLink\", \"/user/perfil\", 1, \"group\", \"block\"], [1, \"bg-white\", \"rounded-xl\", \"border\", \"border-gray-200\", \"p-3\", \"text-center\", \"hover:border-blue-300\", \"hover:shadow-md\", \"transition-all\", \"duration-200\"], [1, \"w-8\", \"h-8\", \"bg-blue-100\", \"rounded-xl\", \"flex\", \"items-center\", \"justify-center\", \"mx-auto\", \"mb-2\", \"group-hover:bg-blue-200\", \"transition-colors\", \"duration-200\"], [\"width\", \"16\", \"height\", \"16\", \"viewBox\", \"0 0 24 24\", \"fill\", \"none\", \"stroke\", \"currentColor\", \"stroke-width\", \"2\", \"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\", 1, \"text-blue-600\"], [\"d\", \"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\"], [\"cx\", \"12\", \"cy\", \"7\", \"r\", \"4\"], [\"routerLink\", \"/contato\", 1, \"group\", \"block\"], [1, \"bg-white\", \"rounded-xl\", \"border\", \"border-gray-200\", \"p-3\", \"text-center\", \"hover:border-orange-300\", \"hover:shadow-md\", \"transition-all\", \"duration-200\"], [1, \"w-8\", \"h-8\", \"bg-orange-100\", \"rounded-xl\", \"flex\", \"items-center\", \"justify-center\", \"mx-auto\", \"mb-2\", \"group-hover:bg-orange-200\", \"transition-colors\", \"duration-200\"], [\"width\", \"16\", \"height\", \"16\", \"viewBox\", \"0 0 24 24\", \"fill\", \"none\", \"stroke\", \"currentColor\", \"stroke-width\", \"2\", \"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\", 1, \"text-orange-600\"], [\"d\", \"M14 9V5a3 3 0 0 0-6 0v4\"], [\"x\", \"2\", \"y\", \"9\", \"width\", \"20\", \"height\", \"12\", \"rx\", \"2\", \"ry\", \"2\"], [\"cx\", \"12\", \"cy\", \"15\", \"r\", \"1\"], [\"width\", \"16\", \"height\", \"16\", \"viewBox\", \"0 0 24 24\", \"fill\", \"none\", \"stroke\", \"currentColor\", \"stroke-width\", \"2\", \"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\", 1, \"text-indigo-500\"], [1, \"grid\", \"grid-cols-1\", \"sm:grid-cols-2\", \"lg:grid-cols-3\", \"gap-3\", \"sm:gap-4\"], [1, \"bg-white\", \"rounded-xl\", \"border\", \"border-gray-200\", \"p-3\", \"hover:border-indigo-300\", \"hover:shadow-md\", \"transition-all\", \"duration-200\"], [1, \"w-8\", \"h-8\", \"bg-indigo-100\", \"rounded-xl\", \"flex\", \"items-center\", \"justify-center\"], [1, \"text-xs\", \"font-medium\", \"text-green-600\", \"bg-green-50\", \"px-2\", \"py-1\", \"rounded-full\"], [1, \"text-sm\", \"font-semibold\", \"text-gray-900\", \"mb-2\"], [1, \"text-xs\", \"text-gray-600\", \"mb-2\"], [1, \"flex\", \"items-center\", \"justify-between\"], [\"routerLink\", \"/formularios/formulario-completo\", 1, \"bg-indigo-600\", \"hover:bg-indigo-700\", \"text-white\", \"px-3\", \"py-1.5\", \"rounded-lg\", \"text-xs\", \"font-medium\", \"transition-colors\", \"duration-200\"], [\"class\", \"bg-white rounded-xl border border-gray-200 p-3 hover:border-gray-300 hover:shadow-md transition-all duration-200\", 4, \"ngIf\"], [1, \"bg-gradient-to-r\", \"from-green-50\", \"to-emerald-50\", \"border\", \"border-green-200\", \"p-3\", \"hover:border-green-300\", \"hover:shadow-md\", \"transition-all\", \"duration-200\"], [1, \"w-8\", \"h-8\", \"bg-green-100\", \"rounded-xl\", \"flex\", \"items-center\", \"justify-center\"], [\"width\", \"16\", \"height\", \"16\", \"viewBox\", \"0 0 24 24\", \"fill\", \"none\", \"stroke\", \"currentColor\", \"stroke-width\", \"2\", \"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\", 1, \"text-green-600\"], [\"x1\", \"12\", \"y1\", \"18\", \"x2\", \"12\", \"y2\", \"12\"], [\"x1\", \"9\", \"y1\", \"15\", \"x2\", \"12\", \"y2\", \"12\"], [\"x1\", \"15\", \"y1\", \"15\", \"x2\", \"12\", \"y2\", \"12\"], [\"routerLink\", \"/formularios\", 1, \"bg-green-600\", \"hover:bg-green-700\", \"text-white\", \"px-3\", \"py-1.5\", \"rounded-lg\", \"text-xs\", \"font-medium\", \"transition-colors\", \"duration-200\"], [\"class\", \"mb-6\", 4, \"ngIf\"], [1, \"section-card\", \"mb-4\", \"sm:mb-6\"], [1, \"p-4\"], [1, \"flex\", \"justify-between\", \"items-center\", \"mb-3\"], [1, \"m-0\", \"text-base\", \"font-bold\", \"text-gray-800\", \"flex\", \"items-center\"], [1, \"mr-2\", \"text-purple-500\", \"text-lg\", \"card-icon\"], [1, \"mt-2\", \"text-gray-600\", \"text-sm\"], [\"mat-icon-button\", \"\", \"matTooltip\", \"Atualizar atividades\", 1, \"!bg-gray-100\", \"hover:!bg-gray-200\", \"rounded-full\", \"transition-all\", \"duration-200\", \"p-2\", 3, \"click\", \"disabled\"], [\"class\", \"text-gray-600 card-icon\", 4, \"ngIf\"], [\"class\", \"loading-spinner h-5 w-5\", 4, \"ngIf\"], [1, \"border-t\", \"border-gray-200\", \"my-4\"], [4, \"ngIf\"], [1, \"bg-gradient-to-br\", \"from-green-500\", \"to-green-600\", \"text-white\", \"shadow-2xl\", \"rounded-3xl\", \"border\", \"border-green-400\"], [1, \"flex\", \"items-center\", \"mb-3\"], [1, \"w-10\", \"h-10\", \"bg-white\", \"bg-opacity-20\", \"rounded-2xl\", \"flex\", \"items-center\", \"justify-center\", \"mr-4\", \"text-xl\", \"backdrop-blur-sm\"], [1, \"flex-1\"], [1, \"m-0\", \"mb-2\", \"text-base\", \"font-bold\", \"text-white\"], [1, \"m-0\", \"opacity-90\", \"text-sm\", \"text-white\"], [1, \"flex\", \"gap-3\", \"flex-wrap\"], [1, \"!bg-white\", \"!text-green-600\", \"!border\", \"!border-white\", \"px-3\", \"py-1.5\", \"text-sm\", \"font-semibold\", \"rounded-full\", \"flex\", \"items-center\"], [1, \"text-green-600\", \"mr-2\", \"!flex\", \"!items-center\", \"!justify-center\", \"!w-5\", \"!h-5\"], [\"class\", \"!bg-white !text-green-600 !border !border-white px-3 py-1.5 text-sm font-semibold rounded-full flex items-center\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"mb-4 sm:mb-6\", 4, \"ngIf\"], [1, \"animate-spin\", \"rounded-full\", \"h-4\", \"w-4\", \"border-b-2\", \"border-indigo-600\"], [1, \"animate-spin\", \"rounded-full\", \"h-4\", \"w-4\", \"border-b-2\", \"border-green-600\"], [\"routerLink\", \"/upload-csv\", 1, \"group\", \"block\"], [1, \"bg-white\", \"rounded-xl\", \"border\", \"border-gray-200\", \"p-3\", \"text-center\", \"hover:border-green-300\", \"hover:shadow-md\", \"transition-all\", \"duration-200\"], [1, \"w-8\", \"h-8\", \"bg-green-100\", \"rounded-xl\", \"flex\", \"items-center\", \"justify-center\", \"mx-auto\", \"mb-2\", \"group-hover:bg-green-200\", \"transition-colors\", \"duration-200\"], [1, \"bg-white\", \"rounded-xl\", \"border\", \"border-gray-200\", \"p-3\", \"hover:border-gray-300\", \"hover:shadow-md\", \"transition-all\", \"duration-200\"], [1, \"w-8\", \"h-8\", \"bg-blue-100\", \"rounded-xl\", \"flex\", \"items-center\", \"justify-center\"], [1, \"text-xs\", \"font-medium\", \"text-blue-600\", \"bg-blue-50\", \"px-2\", \"py-1\", \"rounded-full\"], [\"routerLink\", \"/formularios\", 1, \"bg-blue-600\", \"hover:bg-blue-700\", \"text-white\", \"px-3\", \"py-1.5\", \"rounded-lg\", \"text-xs\", \"font-medium\", \"transition-colors\", \"duration-200\"], [1, \"mb-6\"], [1, \"alert-card\", \"p-4\"], [1, \"flex\", \"items-center\"], [1, \"text-blue-500\", \"mr-4\", \"text-2xl\", \"card-icon\"], [1, \"text-blue-700\", \"font-semibold\", \"text-base\"], [1, \"text-gray-600\", \"card-icon\"], [1, \"loading-spinner\", \"h-5\", \"w-5\"], [\"class\", \"flex items-center mb-3\", 4, \"ngFor\", \"ngForOf\"], [1, \"w-2\", \"h-2\", \"bg-gray-300\", \"rounded-full\", \"mr-3\"], [1, \"flex-1\", \"h-4\", \"bg-gray-300\", \"rounded\"], [\"class\", \"flex items-center mb-3\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [1, \"w-2\", \"h-2\", \"bg-green-500\", \"rounded-full\", \"mr-3\"], [1, \"flex-1\", \"text-gray-800\"], [1, \"text-gray-500\", \"text-xs\"], [1, \"text-center\", \"py-8\", \"px-4\"], [1, \"w-12\", \"h-12\", \"bg-gray-100\", \"rounded-full\", \"flex\", \"items-center\", \"justify-center\", \"mx-auto\", \"mb-3\"], [1, \"text-gray-400\", \"text-2xl\", \"card-icon\"], [1, \"m-0\", \"mb-2\", \"text-base\", \"font-medium\", \"text-gray-600\"], [1, \"m-0\", \"text-gray-500\"], [1, \"bg-gradient-to-br\", \"from-blue-500\", \"to-purple-600\", \"text-white\", \"shadow-2xl\", \"rounded-3xl\", \"border\", \"border-blue-400\"], [1, \"w-10\", \"h-10\", \"bg-white\", \"bg-opacity-20\", \"rounded-2xl\", \"flex\", \"items-center\", \"justify-center\", \"mr-4\", \"backdrop-blur-sm\"], [1, \"text-white\", \"text-xl\"], [1, \"m-0\", \"mb-2\", \"text-lg\", \"font-bold\", \"text-white\"], [\"routerLink\", \"/upgrade\", 1, \"inline-flex\", \"items-center\", \"bg-white\", \"bg-opacity-20\", \"text-white\", \"px-4\", \"py-2\", \"rounded-xl\", \"no-underline\", \"font-semibold\", \"text-sm\", \"transition-all\", \"duration-300\", \"hover:bg-opacity-30\", \"hover:scale-105\", \"backdrop-blur-sm\", \"border\", \"border-white\", \"border-opacity-30\", 3, \"mouseenter\", \"mouseleave\"], [1, \"mr-2\", \"text-lg\"]],\n    template: function DashboardComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 4)(1, \"div\", 5);\n        i0.ɵɵelement(2, \"app-sidebar\", null, 0);\n        i0.ɵɵelementStart(4, \"main\", 6);\n        i0.ɵɵtemplate(5, DashboardComponent_ng_container_5_Template, 7, 0, \"ng-container\", 7)(6, DashboardComponent_ng_template_6_Template, 170, 23, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(8, \"app-footer\");\n      }\n      if (rf & 2) {\n        const dashboardContent_r9 = i0.ɵɵreference(7);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", ctx.carregandoPagina)(\"ngIfElse\", dashboardContent_r9);\n      }\n    },\n    dependencies: [CommonModule, i9.NgForOf, i9.NgIf, RouterModule, i10.RouterLink, MatCardModule, MatButtonModule, i11.MatIconButton, MatIconModule, i12.MatIcon, MatProgressSpinnerModule, MatGridListModule, MatBadgeModule, MatChipsModule, MatDividerModule, MatListModule, MatTooltipModule, i13.MatTooltip, SidebarComponent, FooterComponent],\n    styles: [\"\\n\\n\\n\\n\\n.dashboard-card[_ngcontent-%COMP%] {\\n  background: white;\\n  border: 1px solid #e5e7eb;\\n  \\n\\n  border-radius: 12px;\\n  padding: 16px;\\n  transition: all 0.2s ease;\\n}\\n\\n\\n\\n@media (max-width: 640px) {\\n  .dashboard-card[_ngcontent-%COMP%] {\\n    padding: 12px;\\n    border-radius: 8px;\\n  }\\n}\\n\\n.dashboard-card[_ngcontent-%COMP%]:hover {\\n  border-color: #d1d5db;\\n  \\n\\n  transform: translateY(-2px);\\n}\\n\\n\\n\\n.stats-card[_ngcontent-%COMP%] {\\n  background: white;\\n  border: 1px solid #e5e7eb;\\n  border-radius: 12px;\\n  padding: 16px;\\n  transition: all 0.2s ease;\\n  height: 100%;\\n  width: 100%;\\n  margin: 8px;\\n}\\n\\n@media (max-width: 640px) {\\n  .stats-card[_ngcontent-%COMP%] {\\n    padding: 12px;\\n    margin: 4px;\\n    border-radius: 8px;\\n  }\\n}\\n\\n.stats-card[_ngcontent-%COMP%]:hover {\\n  border-color: #d1d5db;\\n  transform: translateY(-2px);\\n}\\n\\n\\n\\n.action-card[_ngcontent-%COMP%] {\\n  background: white;\\n  border: 1px solid #e5e7eb;\\n  border-radius: 12px;\\n  padding: 16px;\\n  transition: all 0.2s ease;\\n  height: 100%;\\n  width: 100%;\\n  cursor: pointer;\\n}\\n\\n@media (max-width: 640px) {\\n  .action-card[_ngcontent-%COMP%] {\\n    padding: 12px;\\n    border-radius: 8px;\\n  }\\n}\\n\\n.action-card[_ngcontent-%COMP%]:hover {\\n  border-color: #d1d5db;\\n  transform: translateY(-2px);\\n}\\n\\n\\n\\n.section-card[_ngcontent-%COMP%] {\\n  background: white;\\n  border: 1px solid #e5e7eb;\\n  border-radius: 12px;\\n  padding: 20px;\\n  transition: all 0.2s ease;\\n}\\n\\n@media (max-width: 640px) {\\n  .section-card[_ngcontent-%COMP%] {\\n    padding: 16px;\\n    border-radius: 8px;\\n  }\\n}\\n\\n.section-card[_ngcontent-%COMP%]:hover {\\n  border-color: #d1d5db;\\n}\\n\\n\\n\\n.alert-card[_ngcontent-%COMP%] {\\n  background: #eff6ff;\\n  border: 1px solid #3b82f6;\\n  border-radius: 12px;\\n  padding: 16px;\\n  transition: all 0.2s ease;\\n}\\n\\n.alert-card[_ngcontent-%COMP%]:hover {\\n  border-color: #2563eb;\\n}\\n\\n\\n\\n.card-icon[_ngcontent-%COMP%] {\\n  transition: all 0.2s ease;\\n}\\n\\n.card-icon[_ngcontent-%COMP%]:hover {\\n  transform: scale(1.05);\\n}\\n\\n\\n\\n.icon-circle[_ngcontent-%COMP%] {\\n  width: 48px !important;\\n  height: 48px !important;\\n  min-width: 48px !important;\\n  min-height: 48px !important;\\n  border-radius: 50% !important;\\n  display: flex !important;\\n  align-items: center !important;\\n  justify-content: center !important;\\n  flex-shrink: 0 !important;\\n}\\n\\n\\n\\n.status-badge[_ngcontent-%COMP%] {\\n  border: 1px solid #e5e7eb;\\n  border-radius: 9999px;\\n  padding: 8px 16px;\\n  font-size: 12px;\\n  font-weight: 500;\\n  transition: all 0.2s ease;\\n}\\n\\n.status-badge[_ngcontent-%COMP%]:hover {\\n  border-color: #d1d5db;\\n}\\n\\n\\n\\n.clean-button[_ngcontent-%COMP%] {\\n  background: #2563eb;\\n  color: white;\\n  border: none;\\n  border-radius: 8px;\\n  padding: 8px 16px;\\n  font-weight: 500;\\n  font-size: 14px;\\n  transition: all 0.2s ease;\\n  cursor: pointer;\\n  height: 36px;\\n}\\n\\n.clean-button[_ngcontent-%COMP%]:hover {\\n  background: #1d4ed8;\\n  transform: translateY(-1px);\\n}\\n\\n.clean-button[_ngcontent-%COMP%]:disabled {\\n  background: #9ca3af;\\n  cursor: not-allowed;\\n  transform: none;\\n}\\n\\n\\n\\n.loading-spinner[_ngcontent-%COMP%] {\\n  border: 2px solid #e5e7eb;\\n  border-top: 2px solid #3b82f6;\\n  border-radius: 50%;\\n  animation: _ngcontent-%COMP%_spin 1s linear infinite;\\n}\\n\\n@keyframes _ngcontent-%COMP%_spin {\\n  0% {\\n    transform: rotate(0deg);\\n  }\\n\\n  100% {\\n    transform: rotate(360deg);\\n  }\\n}\\n\\n\\n\\n.smooth-transition[_ngcontent-%COMP%] {\\n  transition: all 0.2s ease;\\n}\\n\\n\\n\\n.card.active[_ngcontent-%COMP%] {\\n  border-color: #7c3aed;\\n  background: #faf5ff;\\n}\\n\\n.card.success[_ngcontent-%COMP%] {\\n  border-color: #10b981;\\n  background: #f0fdf4;\\n}\\n\\n.card.warning[_ngcontent-%COMP%] {\\n  border-color: #f59e0b;\\n  background: #fffbeb;\\n}\\n\\n.card.error[_ngcontent-%COMP%] {\\n  border-color: #ef4444;\\n  background: #fef2f2;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL2FwcHMvZnJvbnQvc3JjL2FwcC9jb21wb25lbnRzL2Rhc2hib2FyZC9kYXNoYm9hcmQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQSw4Q0FBOEM7O0FBRTlDLHVCQUF1QjtBQUN2QjtFQUNFLGlCQUFpQjtFQUNqQix5QkFBeUI7RUFDekIscUJBQXFCO0VBQ3JCLG1CQUFtQjtFQUNuQixhQUFhO0VBQ2IseUJBQXlCO0FBQzNCOztBQUVBLHNDQUFzQztBQUN0QztFQUNFO0lBQ0UsYUFBYTtJQUNiLGtCQUFrQjtFQUNwQjtBQUNGOztBQUVBO0VBQ0UscUJBQXFCO0VBQ3JCLHdDQUF3QztFQUN4QywyQkFBMkI7QUFDN0I7O0FBRUEsNEJBQTRCO0FBQzVCO0VBQ0UsaUJBQWlCO0VBQ2pCLHlCQUF5QjtFQUN6QixtQkFBbUI7RUFDbkIsYUFBYTtFQUNiLHlCQUF5QjtFQUN6QixZQUFZO0VBQ1osV0FBVztFQUNYLFdBQVc7QUFDYjs7QUFFQTtFQUNFO0lBQ0UsYUFBYTtJQUNiLFdBQVc7SUFDWCxrQkFBa0I7RUFDcEI7QUFDRjs7QUFFQTtFQUNFLHFCQUFxQjtFQUNyQiwyQkFBMkI7QUFDN0I7O0FBRUEsNkJBQTZCO0FBQzdCO0VBQ0UsaUJBQWlCO0VBQ2pCLHlCQUF5QjtFQUN6QixtQkFBbUI7RUFDbkIsYUFBYTtFQUNiLHlCQUF5QjtFQUN6QixZQUFZO0VBQ1osV0FBVztFQUNYLGVBQWU7QUFDakI7O0FBRUE7RUFDRTtJQUNFLGFBQWE7SUFDYixrQkFBa0I7RUFDcEI7QUFDRjs7QUFFQTtFQUNFLHFCQUFxQjtFQUNyQiwyQkFBMkI7QUFDN0I7O0FBRUEscUJBQXFCO0FBQ3JCO0VBQ0UsaUJBQWlCO0VBQ2pCLHlCQUF5QjtFQUN6QixtQkFBbUI7RUFDbkIsYUFBYTtFQUNiLHlCQUF5QjtBQUMzQjs7QUFFQTtFQUNFO0lBQ0UsYUFBYTtJQUNiLGtCQUFrQjtFQUNwQjtBQUNGOztBQUVBO0VBQ0UscUJBQXFCO0FBQ3ZCOztBQUVBLHFCQUFxQjtBQUNyQjtFQUNFLG1CQUFtQjtFQUNuQix5QkFBeUI7RUFDekIsbUJBQW1CO0VBQ25CLGFBQWE7RUFDYix5QkFBeUI7QUFDM0I7O0FBRUE7RUFDRSxxQkFBcUI7QUFDdkI7O0FBRUEsdUJBQXVCO0FBQ3ZCO0VBQ0UseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0Usc0JBQXNCO0FBQ3hCOztBQUVBLDBDQUEwQztBQUMxQztFQUNFLHNCQUFzQjtFQUN0Qix1QkFBdUI7RUFDdkIsMEJBQTBCO0VBQzFCLDJCQUEyQjtFQUMzQiw2QkFBNkI7RUFDN0Isd0JBQXdCO0VBQ3hCLDhCQUE4QjtFQUM5QixrQ0FBa0M7RUFDbEMseUJBQXlCO0FBQzNCOztBQUVBLHFCQUFxQjtBQUNyQjtFQUNFLHlCQUF5QjtFQUN6QixxQkFBcUI7RUFDckIsaUJBQWlCO0VBQ2pCLGVBQWU7RUFDZixnQkFBZ0I7RUFDaEIseUJBQXlCO0FBQzNCOztBQUVBO0VBQ0UscUJBQXFCO0FBQ3ZCOztBQUVBLFdBQVc7QUFDWDtFQUNFLG1CQUFtQjtFQUNuQixZQUFZO0VBQ1osWUFBWTtFQUNaLGtCQUFrQjtFQUNsQixpQkFBaUI7RUFDakIsZ0JBQWdCO0VBQ2hCLGVBQWU7RUFDZix5QkFBeUI7RUFDekIsZUFBZTtFQUNmLFlBQVk7QUFDZDs7QUFFQTtFQUNFLG1CQUFtQjtFQUNuQiwyQkFBMkI7QUFDN0I7O0FBRUE7RUFDRSxtQkFBbUI7RUFDbkIsbUJBQW1CO0VBQ25CLGVBQWU7QUFDakI7O0FBRUEsb0JBQW9CO0FBQ3BCO0VBQ0UseUJBQXlCO0VBQ3pCLDZCQUE2QjtFQUM3QixrQkFBa0I7RUFDbEIsa0NBQWtDO0FBQ3BDOztBQUVBO0VBQ0U7SUFDRSx1QkFBdUI7RUFDekI7O0VBRUE7SUFDRSx5QkFBeUI7RUFDM0I7QUFDRjs7QUFFQSxxQkFBcUI7QUFDckI7RUFDRSx5QkFBeUI7QUFDM0I7O0FBRUEsc0JBQXNCO0FBQ3RCO0VBQ0UscUJBQXFCO0VBQ3JCLG1CQUFtQjtBQUNyQjs7QUFFQTtFQUNFLHFCQUFxQjtFQUNyQixtQkFBbUI7QUFDckI7O0FBRUE7RUFDRSxxQkFBcUI7RUFDckIsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0UscUJBQXFCO0VBQ3JCLG1CQUFtQjtBQUNyQiIsInNvdXJjZXNDb250ZW50IjpbIi8qIEVzdGlsbyBjbGVhbiBwYXJhIG9zIGNhcnTDg8K1ZXMgZG8gZGFzaGJvYXJkICovXG5cbi8qIENhcnTDg8K1ZXMgcHJpbmNpcGFpcyAqL1xuLmRhc2hib2FyZC1jYXJkIHtcbiAgYmFja2dyb3VuZDogd2hpdGU7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNlNWU3ZWI7XG4gIC8qIEJvcmRhIGNpbnphIGxldmUgKi9cbiAgYm9yZGVyLXJhZGl1czogMTJweDtcbiAgcGFkZGluZzogMTZweDtcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnMgZWFzZTtcbn1cblxuLyogUmVzcG9uc2l2ZSBhZGp1c3RtZW50cyBmb3IgbW9iaWxlICovXG5AbWVkaWEgKG1heC13aWR0aDogNjQwcHgpIHtcbiAgLmRhc2hib2FyZC1jYXJkIHtcbiAgICBwYWRkaW5nOiAxMnB4O1xuICAgIGJvcmRlci1yYWRpdXM6IDhweDtcbiAgfVxufVxuXG4uZGFzaGJvYXJkLWNhcmQ6aG92ZXIge1xuICBib3JkZXItY29sb3I6ICNkMWQ1ZGI7XG4gIC8qIEJvcmRhIHVtIHBvdWNvIG1haXMgZXNjdXJhIG5vIGhvdmVyICovXG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMnB4KTtcbn1cblxuLyogQ2FydMODwrVlcyBkZSBlc3RhdMODwq1zdGljYXMgKi9cbi5zdGF0cy1jYXJkIHtcbiAgYmFja2dyb3VuZDogd2hpdGU7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNlNWU3ZWI7XG4gIGJvcmRlci1yYWRpdXM6IDEycHg7XG4gIHBhZGRpbmc6IDE2cHg7XG4gIHRyYW5zaXRpb246IGFsbCAwLjJzIGVhc2U7XG4gIGhlaWdodDogMTAwJTtcbiAgd2lkdGg6IDEwMCU7XG4gIG1hcmdpbjogOHB4O1xufVxuXG5AbWVkaWEgKG1heC13aWR0aDogNjQwcHgpIHtcbiAgLnN0YXRzLWNhcmQge1xuICAgIHBhZGRpbmc6IDEycHg7XG4gICAgbWFyZ2luOiA0cHg7XG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xuICB9XG59XG5cbi5zdGF0cy1jYXJkOmhvdmVyIHtcbiAgYm9yZGVyLWNvbG9yOiAjZDFkNWRiO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTJweCk7XG59XG5cbi8qIENhcnTDg8K1ZXMgZGUgYcODwqfDg8K1ZXMgcsODwqFwaWRhcyAqL1xuLmFjdGlvbi1jYXJkIHtcbiAgYmFja2dyb3VuZDogd2hpdGU7XG4gIGJvcmRlcjogMXB4IHNvbGlkICNlNWU3ZWI7XG4gIGJvcmRlci1yYWRpdXM6IDEycHg7XG4gIHBhZGRpbmc6IDE2cHg7XG4gIHRyYW5zaXRpb246IGFsbCAwLjJzIGVhc2U7XG4gIGhlaWdodDogMTAwJTtcbiAgd2lkdGg6IDEwMCU7XG4gIGN1cnNvcjogcG9pbnRlcjtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDY0MHB4KSB7XG4gIC5hY3Rpb24tY2FyZCB7XG4gICAgcGFkZGluZzogMTJweDtcbiAgICBib3JkZXItcmFkaXVzOiA4cHg7XG4gIH1cbn1cblxuLmFjdGlvbi1jYXJkOmhvdmVyIHtcbiAgYm9yZGVyLWNvbG9yOiAjZDFkNWRiO1xuICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTJweCk7XG59XG5cbi8qIENhcnTDg8K1ZXMgZGUgc2XDg8Knw4PCo28gKi9cbi5zZWN0aW9uLWNhcmQge1xuICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgYm9yZGVyOiAxcHggc29saWQgI2U1ZTdlYjtcbiAgYm9yZGVyLXJhZGl1czogMTJweDtcbiAgcGFkZGluZzogMjBweDtcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnMgZWFzZTtcbn1cblxuQG1lZGlhIChtYXgtd2lkdGg6IDY0MHB4KSB7XG4gIC5zZWN0aW9uLWNhcmQge1xuICAgIHBhZGRpbmc6IDE2cHg7XG4gICAgYm9yZGVyLXJhZGl1czogOHB4O1xuICB9XG59XG5cbi5zZWN0aW9uLWNhcmQ6aG92ZXIge1xuICBib3JkZXItY29sb3I6ICNkMWQ1ZGI7XG59XG5cbi8qIENhcnTDg8KjbyBkZSBhbGVydGEgKi9cbi5hbGVydC1jYXJkIHtcbiAgYmFja2dyb3VuZDogI2VmZjZmZjtcbiAgYm9yZGVyOiAxcHggc29saWQgIzNiODJmNjtcbiAgYm9yZGVyLXJhZGl1czogMTJweDtcbiAgcGFkZGluZzogMTZweDtcbiAgdHJhbnNpdGlvbjogYWxsIDAuMnMgZWFzZTtcbn1cblxuLmFsZXJ0LWNhcmQ6aG92ZXIge1xuICBib3JkZXItY29sb3I6ICMyNTYzZWI7XG59XG5cbi8qIMODwo1jb25lcyBkb3MgY2FydMODwrVlcyAqL1xuLmNhcmQtaWNvbiB7XG4gIHRyYW5zaXRpb246IGFsbCAwLjJzIGVhc2U7XG59XG5cbi5jYXJkLWljb246aG92ZXIge1xuICB0cmFuc2Zvcm06IHNjYWxlKDEuMDUpO1xufVxuXG4vKiBDb250YWluZXIgZGUgw4PCrWNvbmVzIGNpcmN1bGFyIHBlcmZlaXRvICovXG4uaWNvbi1jaXJjbGUge1xuICB3aWR0aDogNDhweCAhaW1wb3J0YW50O1xuICBoZWlnaHQ6IDQ4cHggIWltcG9ydGFudDtcbiAgbWluLXdpZHRoOiA0OHB4ICFpbXBvcnRhbnQ7XG4gIG1pbi1oZWlnaHQ6IDQ4cHggIWltcG9ydGFudDtcbiAgYm9yZGVyLXJhZGl1czogNTAlICFpbXBvcnRhbnQ7XG4gIGRpc3BsYXk6IGZsZXggIWltcG9ydGFudDtcbiAgYWxpZ24taXRlbXM6IGNlbnRlciAhaW1wb3J0YW50O1xuICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlciAhaW1wb3J0YW50O1xuICBmbGV4LXNocmluazogMCAhaW1wb3J0YW50O1xufVxuXG4vKiBCYWRnZXMgZGUgc3RhdHVzICovXG4uc3RhdHVzLWJhZGdlIHtcbiAgYm9yZGVyOiAxcHggc29saWQgI2U1ZTdlYjtcbiAgYm9yZGVyLXJhZGl1czogOTk5OXB4O1xuICBwYWRkaW5nOiA4cHggMTZweDtcbiAgZm9udC1zaXplOiAxMnB4O1xuICBmb250LXdlaWdodDogNTAwO1xuICB0cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlO1xufVxuXG4uc3RhdHVzLWJhZGdlOmhvdmVyIHtcbiAgYm9yZGVyLWNvbG9yOiAjZDFkNWRiO1xufVxuXG4vKiBCb3TDg8K1ZXMgKi9cbi5jbGVhbi1idXR0b24ge1xuICBiYWNrZ3JvdW5kOiAjMjU2M2ViO1xuICBjb2xvcjogd2hpdGU7XG4gIGJvcmRlcjogbm9uZTtcbiAgYm9yZGVyLXJhZGl1czogOHB4O1xuICBwYWRkaW5nOiA4cHggMTZweDtcbiAgZm9udC13ZWlnaHQ6IDUwMDtcbiAgZm9udC1zaXplOiAxNHB4O1xuICB0cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlO1xuICBjdXJzb3I6IHBvaW50ZXI7XG4gIGhlaWdodDogMzZweDtcbn1cblxuLmNsZWFuLWJ1dHRvbjpob3ZlciB7XG4gIGJhY2tncm91bmQ6ICMxZDRlZDg7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtMXB4KTtcbn1cblxuLmNsZWFuLWJ1dHRvbjpkaXNhYmxlZCB7XG4gIGJhY2tncm91bmQ6ICM5Y2EzYWY7XG4gIGN1cnNvcjogbm90LWFsbG93ZWQ7XG4gIHRyYW5zZm9ybTogbm9uZTtcbn1cblxuLyogTG9hZGluZyBzcGlubmVyICovXG4ubG9hZGluZy1zcGlubmVyIHtcbiAgYm9yZGVyOiAycHggc29saWQgI2U1ZTdlYjtcbiAgYm9yZGVyLXRvcDogMnB4IHNvbGlkICMzYjgyZjY7XG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcbiAgYW5pbWF0aW9uOiBzcGluIDFzIGxpbmVhciBpbmZpbml0ZTtcbn1cblxuQGtleWZyYW1lcyBzcGluIHtcbiAgMCUge1xuICAgIHRyYW5zZm9ybTogcm90YXRlKDBkZWcpO1xuICB9XG5cbiAgMTAwJSB7XG4gICAgdHJhbnNmb3JtOiByb3RhdGUoMzYwZGVnKTtcbiAgfVxufVxuXG4vKiBBbmltYcODwqfDg8K1ZXMgc3VhdmVzICovXG4uc21vb3RoLXRyYW5zaXRpb24ge1xuICB0cmFuc2l0aW9uOiBhbGwgMC4ycyBlYXNlO1xufVxuXG4vKiBFc3RhZG9zIGVzcGVjaWFpcyAqL1xuLmNhcmQuYWN0aXZlIHtcbiAgYm9yZGVyLWNvbG9yOiAjN2MzYWVkO1xuICBiYWNrZ3JvdW5kOiAjZmFmNWZmO1xufVxuXG4uY2FyZC5zdWNjZXNzIHtcbiAgYm9yZGVyLWNvbG9yOiAjMTBiOTgxO1xuICBiYWNrZ3JvdW5kOiAjZjBmZGY0O1xufVxuXG4uY2FyZC53YXJuaW5nIHtcbiAgYm9yZGVyLWNvbG9yOiAjZjU5ZTBiO1xuICBiYWNrZ3JvdW5kOiAjZmZmYmViO1xufVxuXG4uY2FyZC5lcnJvciB7XG4gIGJvcmRlci1jb2xvcjogI2VmNDQ0NDtcbiAgYmFja2dyb3VuZDogI2ZlZjJmMjtcbn0iXSwic291cmNlUm9vdCI6IiJ9 */\"]\n  });\n}","map":{"version":3,"names":["CommonModule","RouterModule","MatCardModule","MatButtonModule","MatIconModule","MatProgressSpinnerModule","MatGridListModule","MatBadgeModule","MatChipsModule","MatDividerModule","MatListModule","MatTooltipModule","AuthService","SidebarComponent","FooterComponent","UsuarioService","ErrorHandlerService","AuthErrorHandlerService","CampoService","TemplateCsvService","AnalyticsService","AssinaturaService","getPlanoLimite","getPlanoConfig","getLimiteTemplates","getLimiteTotalCampos","i0","ɵɵelementContainerStart","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate1","ctx_r1","calcularCrescimentoTemplates","calcularCrescimentoPreenchimentos","totalTemplates","ɵɵtextInterpolate","mensagem","ɵɵtemplate","DashboardComponent_ng_template_6_div_144_div_1_Template","ɵɵproperty","ɵɵpureFunction0","_c0","atividade_r3","i_r4","DashboardComponent_ng_template_6_div_145_div_1_Template","atividades","trackByAtividade","recurso_r5","ɵɵlistener","DashboardComponent_ng_template_6_section_169_Template_a_mouseenter_13_listener","ɵɵrestoreView","_r6","upgradeButton_r7","ɵɵreference","ɵɵnextContext","ɵɵresetView","onUpgradeButtonHover","DashboardComponent_ng_template_6_section_169_Template_a_mouseleave_13_listener","tituloUpgrade","descricaoUpgrade","textoBotaoUpgrade","DashboardComponent_ng_template_6_span_16_Template","DashboardComponent_ng_template_6_div_18_Template","DashboardComponent_ng_template_6_span_35_Template","DashboardComponent_ng_template_6_div_37_Template","DashboardComponent_ng_template_6_a_59_Template","DashboardComponent_ng_template_6_div_107_Template","DashboardComponent_ng_template_6_section_128_Template","DashboardComponent_ng_template_6_Template_button_click_139_listener","_r1","atualizarAtividades","DashboardComponent_ng_template_6_mat_icon_140_Template","DashboardComponent_ng_template_6_div_141_Template","DashboardComponent_ng_template_6_div_144_Template","DashboardComponent_ng_template_6_div_145_Template","DashboardComponent_ng_template_6_ng_template_146_Template","ɵɵtemplateRefExtractor","DashboardComponent_ng_template_6_div_168_Template","DashboardComponent_ng_template_6_section_169_Template","carregandoPagina","formulariosPreenchidos","ultimoPreenchimento","podeAcessarUploadCsv","carregandoAtividades","length","noActivities_r8","nomePlano","descricaoPlano","limiteTemplates","limiteTotalCampos","getRecursosPrincipais","mostrarUpgrade","DashboardComponent","authService","usuarioService","campoService","templateCsvService","analyticsService","assinaturaService","errorHandler","authErrorHandler","nomeUsuario","emailUsuario","planoUsuario","carregamentoInicial","assinaturaValida","assinaturaExpirada","nome","descricao","limiteCampos","limite","constructor","ngOnInit","estaAutenticado","console","log","carregarDadosCompleto","ngOnDestroy","carregarDadosUsuario","carregarDadosBackend","localStorage","getItem","email","plano","obterUsuarioBackend","subscribe","next","usuario","setItem","error","handleAuthError","listarTemplates","templatesUsuario","Array","isArray","calcularEstatisticas","gerarAtividadesBaseadas","atualizarAtividadesReais","setTimeout","isAuthError","getErrorMessage","consultarAssinaturaUsuarioLogado","assinatura","status","templates","reduce","total","template","totalUso","templatesComUso","filter","ultimoUso","templateMaisRecente","sort","a","b","dataA","Date","dataB","getTime","dataUltimo","agora","diffHoras","Math","floor","diffDias","push","templatesOrdenados","dataCriacao","templatesRelevantes","slice","forEach","dataTemplate","tempoAtras","templateMaisUsado","totalCampos","campos","atualizarCampos","_this","_asyncToGenerator","onWindowFocus","index","atividade","recursos","recursosFiltrados","recurso","array","toLowerCase","includes","indexOf","recursosPrioritarios","resultado","outrosRecursos","button","isHovering","element","style","backgroundColor","toUpperCase","registrarAtividade","acao","horaFormatada","toLocaleTimeString","hour","minute","novaAtividade","unshift","ɵɵdirectiveInject","i1","i2","i3","i4","i5","i6","i7","i8","selectors","hostBindings","DashboardComponent_HostBindings","rf","ctx","DashboardComponent_focus_HostBindingHandler","ɵɵresolveWindow","DashboardComponent_ng_container_5_Template","DashboardComponent_ng_template_6_Template","dashboardContent_r9","i9","NgForOf","NgIf","i10","RouterLink","i11","MatIconButton","i12","MatIcon","i13","MatTooltip","styles"],"sources":["/home/danilo/Área de trabalho/formsync-nx/apps/front/src/app/components/dashboard/dashboard.component.ts"],"sourcesContent":["import { Component, OnInit, OnDestroy, HostListener } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { RouterModule } from '@angular/router';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatBadgeModule } from '@angular/material/badge';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { MatDividerModule } from '@angular/material/divider';\nimport { MatListModule } from '@angular/material/list';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { AuthService } from '../../services/auth.service';\nimport { SidebarComponent } from '../sidebar/sidebar.component';\nimport { FooterComponent } from '../footer/footer.component';\nimport { UsuarioService } from '../../services/usuario.service';\nimport { ErrorHandlerService } from '../../services/error-handler.service';\nimport { AuthErrorHandlerService } from '../../services/auth-error-handler.service';\nimport { CampoService } from '../../services/campo.service';\nimport { TemplateCsvService } from '../../services/template-csv.service';\nimport { AnalyticsService } from '../../services/analytics.service';\nimport { AssinaturaService } from '../../services/assinatura.service';\nimport { getPlanoLimite, getPlanoConfig, getLimiteTemplates, getLimiteTotalCampos } from '../../shared/planos-config';\n\n\n@Component({\n  standalone: true,\n  selector: 'app-dashboard',\n  imports: [\n    CommonModule,\n    RouterModule,\n    MatCardModule,\n    MatButtonModule,\n    MatIconModule,\n    MatProgressSpinnerModule,\n    MatGridListModule,\n    MatBadgeModule,\n    MatChipsModule,\n    MatDividerModule,\n    MatListModule,\n    MatTooltipModule,\n    SidebarComponent,\n    FooterComponent\n  ],\n  template: `\n    <!-- Layout Dashboard Moderno -->\n    <div class=\"min-h-screen bg-gray-50\">\n\n      <!-- Layout Principal -->\n      <div class=\"flex\">\n        <!-- Sidebar -->\n        <app-sidebar #sidebar></app-sidebar>\n\n        <!-- Conteúdo Principal -->\n        <main class=\"flex-1 p-3 sm:p-4\">\n          <!-- Loading State Moderno -->\n          <ng-container *ngIf=\"carregandoPagina; else dashboardContent\">\n            <div class=\"flex flex-col items-center justify-center py-16\">\n              <div class=\"animate-spin rounded-full h-10 w-10 border-b-2 border-indigo-600\"></div>\n              <h3 class=\"mt-6 text-lg font-semibold text-gray-900\">\n                Carregando Dashboard\n              </h3>\n              <p class=\"text-gray-500 mt-2\">\n                Aguarde enquanto preparamos suas informações...\n              </p>\n            </div>\n          </ng-container>\n\n          <ng-template #dashboardContent>\n            <!-- Boas-vindas e Resumo -->\n            <div class=\"mb-4 sm:mb-6\">\n              <h1 class=\"text-base sm:text-lg font-bold text-gray-900 mb-1\">\n                Bem-vindo ao seu Dashboard\n              </h1>\n              <p class=\"text-xs sm:text-sm text-gray-600\">\n                Gerencie Seus Formulários e acompanhe suas atividades de preenchimento automático.\n              </p>\n            </div>\n\n            <!-- Estatísticas Principais -->\n            <div class=\"grid grid-cols-1 sm:grid-cols-2 gap-3 sm:gap-4 mb-4 sm:mb-6\">\n              <!-- Total de Templates -->\n              <div class=\"bg-white rounded-xl border border-gray-200 p-3 sm:p-4 hover:border-gray-300 transition-colors duration-200\">\n                <div class=\"flex items-start justify-between mb-2\">\n                  <div class=\"flex items-center gap-2\">\n                    <div class=\"w-7 h-7 bg-indigo-100 rounded-lg flex items-center justify-center\">\n                      <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"text-indigo-600\">\n                        <rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect>\n                        <line x1=\"9\" y1=\"9\" x2=\"15\" y2=\"9\"></line>\n                        <line x1=\"9\" y1=\"15\" x2=\"15\" y2=\"15\"></line>\n                      </svg>\n                    </div>\n                    <h3 class=\"text-sm font-semibold text-gray-900\">Formulários</h3>\n                  </div>\n                  <span *ngIf=\"!carregandoPagina && totalTemplates > 0\" class=\"text-xs font-medium text-green-600 bg-green-50 px-2 py-1 rounded-full\">\n                    {{ calcularCrescimentoTemplates() }}\n                  </span>\n                </div>\n                <div class=\"flex items-center gap-2 mb-1\">\n                  <div *ngIf=\"carregandoPagina\" class=\"animate-spin rounded-full h-4 w-4 border-b-2 border-indigo-600\"></div>\n                  <span class=\"text-xl font-bold text-gray-900\">{{ totalTemplates }}</span>\n                </div>\n                <p class=\"text-xs text-gray-500\">Criados manualmente ou via CSV</p>\n              </div>\n\n              <!-- Formulários Preenchidos -->\n              <div class=\"bg-white rounded-xl border border-gray-200 p-3 sm:p-4 hover:border-gray-300 transition-colors duration-200\">\n                <div class=\"flex items-start justify-between mb-2\">\n                  <div class=\"flex items-center gap-2\">\n                    <div class=\"w-7 h-7 bg-green-100 rounded-lg flex items-center justify-center\">\n                      <svg width=\"14\" height=\"14\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"text-green-600\">\n                        <path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"></path>\n                        <polyline points=\"14,2 14,8 20,8\"></polyline>\n                        <line x1=\"16\" y1=\"13\" x2=\"8\" y2=\"13\"></line>\n                        <line x1=\"16\" y1=\"17\" x2=\"8\" y2=\"17\"></line>\n                        <polyline points=\"10,9 9,9 8,9\"></polyline>\n                      </svg>\n                    </div>\n                    <h3 class=\"text-sm font-semibold text-gray-900\">Preenchimentos</h3>\n                  </div>\n                  <span *ngIf=\"!carregandoPagina && formulariosPreenchidos > 0\" class=\"text-xs font-medium text-green-600 bg-green-50 px-2 py-1 rounded-full\">\n                    {{ calcularCrescimentoPreenchimentos() }}\n                  </span>\n                </div>\n                <div class=\"flex items-center gap-2 mb-1\">\n                  <div *ngIf=\"carregandoPagina\" class=\"animate-spin rounded-full h-4 w-4 border-b-2 border-green-600\"></div>\n                  <span class=\"text-xl font-bold text-gray-900\">{{ formulariosPreenchidos }}</span>\n                </div>\n                <p class=\"text-xs text-gray-500\">Último: {{ ultimoPreenchimento }}</p>\n              </div>\n            </div>\n\n            <!-- Ações Rápidas -->\n            <div class=\"mb-4 sm:mb-6\">\n              <h2 class=\"text-sm sm:text-base font-semibold text-gray-900 mb-3 flex items-center gap-2\">\n                <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"text-orange-500\">\n                  <polygon points=\"13 2 3 14 12 14 11 22 21 10 12 10 13 2\"></polygon>\n                </svg>\n                Ações Rápidas\n              </h2>\n              \n              <div class=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-3\">\n                <!-- Gerenciar Templates -->\n                <a routerLink=\"/formularios\" class=\"group block\">\n                  <div class=\"bg-white rounded-xl border border-gray-200 p-3 text-center hover:border-indigo-300 hover:shadow-md transition-all duration-200\">\n                    <div class=\"w-8 h-8 bg-indigo-100 rounded-xl flex items-center justify-center mx-auto mb-2 group-hover:bg-indigo-200 transition-colors duration-200\">\n                      <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"text-indigo-600\">\n                        <rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect>\n                        <line x1=\"9\" y1=\"9\" x2=\"15\" y2=\"9\"></line>\n                        <line x1=\"9\" y1=\"15\" x2=\"15\" y2=\"15\"></line>\n                      </svg>\n                    </div>\n                    <h3 class=\"text-sm font-semibold text-gray-900 mb-1\">Formulários</h3>\n                    <p class=\"text-xs text-gray-500\">Crie e organize Seus Formulários</p>\n                  </div>\n                </a>\n\n                <!-- Upload CSV -->\n                <a *ngIf=\"podeAcessarUploadCsv()\" routerLink=\"/upload-csv\" class=\"group block\">\n                  <div class=\"bg-white rounded-xl border border-gray-200 p-3 text-center hover:border-green-300 hover:shadow-md transition-all duration-200\">\n                    <div class=\"w-8 h-8 bg-green-100 rounded-xl flex items-center justify-center mx-auto mb-2 group-hover:bg-green-200 transition-colors duration-200\">\n                      <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"text-green-600\">\n                        <path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"></path>\n                        <polyline points=\"14,2 14,8 20,8\"></polyline>\n                        <line x1=\"12\" y1=\"18\" x2=\"12\" y2=\"12\"></line>\n                        <line x1=\"9\" y1=\"15\" x2=\"12\" y2=\"12\"></line>\n                        <line x1=\"15\" y1=\"15\" x2=\"12\" y2=\"12\"></line>\n                      </svg>\n                    </div>\n                    <h3 class=\"text-sm font-semibold text-gray-900 mb-1\">Upload CSV</h3>\n                    <p class=\"text-xs text-gray-500\">Importe templates em lote</p>\n                  </div>\n                </a>\n\n                <!-- Perfil -->\n                <a routerLink=\"/user/perfil\" class=\"group block\">\n                  <div class=\"bg-white rounded-xl border border-gray-200 p-3 text-center hover:border-blue-300 hover:shadow-md transition-all duration-200\">\n                    <div class=\"w-8 h-8 bg-blue-100 rounded-xl flex items-center justify-center mx-auto mb-2 group-hover:bg-blue-200 transition-colors duration-200\">\n                      <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"text-blue-600\">\n                        <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\"></path>\n                        <circle cx=\"12\" cy=\"7\" r=\"4\"></circle>\n                      </svg>\n                    </div>\n                    <h3 class=\"text-sm font-semibold text-gray-900 mb-1\">Perfil</h3>\n                    <p class=\"text-xs text-gray-500\">Atualize suas informações</p>\n                  </div>\n                </a>\n\n                <!-- Suporte -->\n                <a routerLink=\"/contato\" class=\"group block\">\n                  <div class=\"bg-white rounded-xl border border-gray-200 p-3 text-center hover:border-orange-300 hover:shadow-md transition-all duration-200\">\n                    <div class=\"w-8 h-8 bg-orange-100 rounded-xl flex items-center justify-center mx-auto mb-2 group-hover:bg-orange-200 transition-colors duration-200\">\n                      <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"text-orange-600\">\n                        <path d=\"M14 9V5a3 3 0 0 0-6 0v4\"></path>\n                        <rect x=\"2\" y=\"9\" width=\"20\" height=\"12\" rx=\"2\" ry=\"2\"></rect>\n                        <circle cx=\"12\" cy=\"15\" r=\"1\"></circle>\n                      </svg>\n                    </div>\n                    <h3 class=\"text-sm font-semibold text-gray-900 mb-1\">Suporte</h3>\n                    <p class=\"text-xs text-gray-500\">Entre em contato conosco</p>\n                  </div>\n                </a>\n                          </div>\n          </div>\n\n          <!-- Seus Formulários -->\n          <div class=\"mb-4 sm:mb-6\">\n            <h2 class=\"text-sm sm:text-base font-semibold text-gray-900 mb-3 flex items-center gap-2\">\n              <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"text-indigo-500\">\n                <rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect>\n                <line x1=\"9\" y1=\"9\" x2=\"15\" y2=\"9\"></line>\n                <line x1=\"9\" y1=\"15\" x2=\"15\" y2=\"15\"></line>\n              </svg>\n              Seus Formulários\n            </h2>\n            \n            <div class=\"grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-3 sm:gap-4\">\n              <!-- Formulário Completo - Teste FormSync -->\n              <div class=\"bg-white rounded-xl border border-gray-200 p-3 hover:border-indigo-300 hover:shadow-md transition-all duration-200\">\n                <div class=\"flex items-start justify-between mb-2\">\n                  <div class=\"w-8 h-8 bg-indigo-100 rounded-xl flex items-center justify-center\">\n                    <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"text-indigo-600\">\n                      <rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect>\n                      <line x1=\"9\" y1=\"9\" x2=\"15\" y2=\"9\"></line>\n                      <line x1=\"9\" y1=\"15\" x2=\"15\" y2=\"15\"></line>\n                    </svg>\n                  </div>\n                  <span class=\"text-xs font-medium text-green-600 bg-green-50 px-2 py-1 rounded-full\">Teste</span>\n                </div>\n                <h3 class=\"text-sm font-semibold text-gray-900 mb-2\">Formulário Completo</h3>\n                <p class=\"text-xs text-gray-600 mb-2\">Teste todos os tipos de campo com a extensão FormSync</p>\n                <div class=\"flex items-center justify-between\">\n                  <span class=\"text-xs text-gray-500\">{{ totalTemplates + 1 }} formulários</span>\n                  <a routerLink=\"/formularios/formulario-completo\" \n                     class=\"bg-indigo-600 hover:bg-indigo-700 text-white px-3 py-1.5 rounded-lg text-xs font-medium transition-colors duration-200\">\n                    Testar\n                  </a>\n                </div>\n              </div>\n\n              <!-- Template Padrão (se existir) -->\n              <div *ngIf=\"totalTemplates > 0\" class=\"bg-white rounded-xl border border-gray-200 p-3 hover:border-gray-300 hover:shadow-md transition-all duration-200\">\n                <div class=\"flex items-start justify-between mb-2\">\n                  <div class=\"w-8 h-8 bg-blue-100 rounded-xl flex items-center justify-center\">\n                    <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"text-blue-600\">\n                      <rect x=\"3\" y=\"3\" width=\"18\" height=\"18\" rx=\"2\" ry=\"2\"></rect>\n                      <line x1=\"9\" y1=\"9\" x2=\"15\" y2=\"9\"></line>\n                      <line x1=\"9\" y1=\"15\" x2=\"15\" y2=\"15\"></line>\n                    </svg>\n                  </div>\n                  <span class=\"text-xs font-medium text-blue-600 bg-blue-50 px-2 py-1 rounded-full\">Ativo</span>\n                </div>\n                <h3 class=\"text-sm font-semibold text-gray-900 mb-2\">Seus Formulários</h3>\n                <p class=\"text-xs text-gray-600 mb-2\">Gerencie todos os seus formulários criados</p>\n                <div class=\"flex items-center justify-between\">\n                  <span class=\"text-xs text-gray-500\">{{ totalTemplates }} templates</span>\n                  <a routerLink=\"/formularios\" \n                     class=\"bg-blue-600 hover:bg-blue-700 text-white px-3 py-1.5 rounded-lg text-xs font-medium transition-colors duration-200\">\n                    Ver Todos\n                  </a>\n                </div>\n              </div>\n\n              <!-- Card de Criação -->\n              <div class=\"bg-gradient-to-r from-green-50 to-emerald-50 border border-green-200 p-3 hover:border-green-300 hover:shadow-md transition-all duration-200\">\n                <div class=\"flex items-start justify-between mb-2\">\n                  <div class=\"w-8 h-8 bg-green-100 rounded-xl flex items-center justify-center\">\n                    <svg width=\"16\" height=\"16\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"text-green-600\">\n                      <path d=\"M14 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V8z\"></path>\n                      <polyline points=\"14,2 14,8 20,8\"></polyline>\n                      <line x1=\"12\" y1=\"18\" x2=\"12\" y2=\"12\"></line>\n                      <line x1=\"9\" y1=\"15\" x2=\"12\" y2=\"12\"></line>\n                      <line x1=\"15\" y1=\"15\" x2=\"12\" y2=\"12\"></line>\n                    </svg>\n                  </div>\n                  <span class=\"text-xs font-medium text-green-600 bg-green-50 px-2 py-1 rounded-full\">Novo</span>\n                </div>\n                <h3 class=\"text-sm font-semibold text-gray-900 mb-2\">Criar Formulário</h3>\n                <p class=\"text-xs text-gray-600 mb-2\">Crie um novo formulário personalizado</p>\n                <div class=\"flex items-center justify-between\">\n                  <span class=\"text-xs text-gray-500\">Personalizado</span>\n                  <a routerLink=\"/formularios\" \n                     class=\"bg-green-600 hover:bg-green-700 text-white px-3 py-1.5 rounded-lg text-xs font-medium transition-colors duration-200\">\n                    Criar\n                  </a>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Alertas -->\n          <section *ngIf=\"mensagem\" class=\"mb-6\">\n            <div class=\"alert-card p-4\">\n              <div class=\"flex items-center\">\n                <mat-icon class=\"text-blue-500 mr-4 text-2xl card-icon\">info</mat-icon>\n                <span class=\"text-blue-700 font-semibold text-base\">{{ mensagem }}</span>\n              </div>\n            </div>\n          </section>\n\n          <!-- Atividades Recentes -->\n          <div class=\"section-card mb-4 sm:mb-6\">\n            <div class=\"p-4\">\n              <div class=\"flex justify-between items-center mb-3\">\n                <div>\n                  <h2 class=\"m-0 text-base font-bold text-gray-800 flex items-center\">\n                    <mat-icon class=\"mr-2 text-purple-500 text-lg card-icon\">history</mat-icon>\n                    Atividades Recentes\n                  </h2>\n                  <p class=\"mt-2 text-gray-600 text-sm\">\n                    Acompanhe suas últimas ações no sistema\n                  </p>\n                </div>\n                <button\n                  mat-icon-button\n                  (click)=\"atualizarAtividades()\"\n                  [disabled]=\"carregandoAtividades\"\n                  matTooltip=\"Atualizar atividades\"\n                  class=\"!bg-gray-100 hover:!bg-gray-200 rounded-full transition-all duration-200 p-2\"\n                >\n                  <mat-icon *ngIf=\"!carregandoAtividades\" class=\"text-gray-600 card-icon\">refresh</mat-icon>\n                  <div *ngIf=\"carregandoAtividades\" class=\"loading-spinner h-5 w-5\"></div>\n                </button>\n              </div>\n\n              <div class=\"border-t border-gray-200 my-4\"></div>\n\n              <div>\n                <!-- Skeleton para atividades -->\n                <div *ngIf=\"carregandoAtividades\">\n                  <div\n                    *ngFor=\"let i of [1, 2, 3]\"\n                    class=\"flex items-center mb-3\"\n                  >\n                    <div class=\"w-2 h-2 bg-gray-300 rounded-full mr-3\"></div>\n                    <div class=\"flex-1 h-4 bg-gray-300 rounded\"></div>\n                  </div>\n                </div>\n\n                <!-- Conteúdo real das atividades -->\n                <div\n                  *ngIf=\"\n                    !carregandoAtividades && atividades.length > 0;\n                    else noActivities\n                  \"\n                >\n                  <div\n                    *ngFor=\"\n                      let atividade of atividades;\n                      trackBy: trackByAtividade;\n                      let i = index\n                    \"\n                    class=\"flex items-center mb-3\"\n                  >\n                    <div class=\"w-2 h-2 bg-green-500 rounded-full mr-3\"></div>\n                    <span class=\"flex-1 text-gray-800\">{{ atividade }}</span>\n                    <span class=\"text-gray-500 text-xs\">{{\n                      i === 0\n                        ? 'Agora'\n                        : i === 1\n                        ? '2 min atrás'\n                        : i === 2\n                        ? '5 min atrás'\n                        : '10 min atrás'\n                    }}</span>\n                  </div>\n                </div>\n\n                <ng-template #noActivities>\n                  <div class=\"text-center py-8 px-4\">\n                    <div class=\"w-12 h-12 bg-gray-100 rounded-full flex items-center justify-center mx-auto mb-3\">\n                      <mat-icon class=\"text-gray-400 text-2xl card-icon\">inbox</mat-icon>\n                    </div>\n                    <h3 class=\"m-0 mb-2 text-base font-medium text-gray-600\">\n                      Nenhuma atividade recente\n                    </h3>\n                    <p class=\"m-0 text-gray-500\">\n                      Comece a usar a extensão para ver suas atividades aqui\n                    </p>\n                  </div>\n                </ng-template>\n              </div>\n            </div>\n          </div>\n\n          <!-- Informações do Plano Atual -->\n          <section class=\"mb-4 sm:mb-6\">\n            <div class=\"bg-gradient-to-br from-green-500 to-green-600 text-white shadow-2xl rounded-3xl border border-green-400\">\n              <div class=\"p-4\">\n                <div class=\"flex items-center mb-3\">\n                  <div class=\"w-10 h-10 bg-white bg-opacity-20 rounded-2xl flex items-center justify-center mr-4 text-xl backdrop-blur-sm\">\n                    🎉\n                  </div>\n                  <div class=\"flex-1\">\n                    <h2 class=\"m-0 mb-2 text-base font-bold text-white\">\n                      {{ nomePlano }} Ativo!\n                    </h2>\n                    <p class=\"m-0 opacity-90 text-sm text-white\">\n                      {{ descricaoPlano }}\n                    </p>\n                  </div>\n                </div>\n                <div class=\"flex gap-3 flex-wrap\">\n                  <div class=\"!bg-white !text-green-600 !border !border-white px-3 py-1.5 text-sm font-semibold rounded-full flex items-center\">\n                    <mat-icon class=\"text-green-600 mr-2 !flex !items-center !justify-center !w-5 !h-5\">folder</mat-icon>\n                    {{ limiteTemplates }} formulários\n                  </div>\n                  <div class=\"!bg-white !text-green-600 !border !border-white px-3 py-1.5 text-sm font-semibold rounded-full flex items-center\">\n                    <mat-icon class=\"text-green-600 mr-2 !flex !items-center !justify-center !w-5 !h-5\">description</mat-icon>\n                    {{ limiteTotalCampos }} campos total\n                  </div>\n                  <div *ngFor=\"let recurso of getRecursosPrincipais()\" class=\"!bg-white !text-green-600 !border !border-white px-3 py-1.5 text-sm font-semibold rounded-full flex items-center\">\n                    <mat-icon class=\"text-green-600 mr-2 !flex !items-center !justify-center !w-5 !h-5\">check</mat-icon>\n                    {{ recurso }}\n                  </div>\n                </div>\n              </div>\n            </div>\n          </section>\n\n          <!-- Seção de Upgrade -->\n          <section *ngIf=\"mostrarUpgrade\" class=\"mb-4 sm:mb-6\">\n            <div class=\"bg-gradient-to-br from-blue-500 to-purple-600 text-white shadow-2xl rounded-3xl border border-blue-400\">\n              <div class=\"p-4\">\n                <div class=\"flex items-center mb-3\">\n                  <div class=\"w-10 h-10 bg-white bg-opacity-20 rounded-2xl flex items-center justify-center mr-4 backdrop-blur-sm\">\n                    <mat-icon class=\"text-white text-xl\">rocket_launch</mat-icon>\n                  </div>\n                  <div class=\"flex-1\">\n                    <h2 class=\"m-0 mb-2 text-lg font-bold text-white\">\n                      {{ tituloUpgrade || 'Upgrade do Plano' }}\n                    </h2>\n                    <p class=\"m-0 opacity-90 text-sm text-white\">\n                      {{\n                        descricaoUpgrade ||\n                          'Faça upgrade do seu plano para acessar mais recursos e funcionalidades.'\n                      }}\n                    </p>\n                  </div>\n                </div>\n                <div>\n                  <a\n                    routerLink=\"/upgrade\"\n                    #upgradeButton\n                    class=\"inline-flex items-center bg-white bg-opacity-20 text-white px-4 py-2 rounded-xl no-underline font-semibold text-sm transition-all duration-300 hover:bg-opacity-30 hover:scale-105 backdrop-blur-sm border border-white border-opacity-30\"\n                    (mouseenter)=\"onUpgradeButtonHover(upgradeButton, true)\"\n                    (mouseleave)=\"onUpgradeButtonHover(upgradeButton, false)\"\n                  >\n                    <mat-icon class=\"mr-2 text-lg\">arrow_forward</mat-icon>\n                    {{ textoBotaoUpgrade || 'Ver Planos' }}\n                  </a>\n                </div>\n              </div>\n            </div>\n          </section>\n        </ng-template>\n      </main>\n    </div>\n  </div>\n\n  <!-- Footer -->\n  <app-footer></app-footer>\n  `,\n  styleUrl: './dashboard.component.css',\n})\nexport class DashboardComponent implements OnInit, OnDestroy {\n  // Dados do usuário\n  nomeUsuario = '';\n  emailUsuario = '';\n  planoUsuario = 'PESSOAL';\n\n  // Estatísticas\n  totalTemplates = 0; // Total geral de templates (manuais + CSV)\n  formulariosPreenchidos = 0;\n  ultimoPreenchimento = 'Nunca';\n  atividades: string[] = [];\n\n  // Estado de carregamento\n  carregandoPagina = true;\n  carregandoAtividades = false;\n  private carregamentoInicial = true;\n\n  // Assinatura\n  assinaturaValida = true;\n  assinaturaExpirada = false;\n\n  // Mensagens\n  mensagem = '';\n\n  // Propriedades computadas do plano\n  get nomePlano(): string {\n    return getPlanoConfig(this.planoUsuario).nome;\n  }\n\n  get descricaoPlano(): string {\n    return getPlanoConfig(this.planoUsuario).descricao;\n  }\n\n  get limiteCampos(): number {\n    return getPlanoConfig(this.planoUsuario).limite;\n  }\n\n  get limiteTemplates(): number {\n    return getLimiteTemplates(this.planoUsuario);\n  }\n\n  get limiteTotalCampos(): number {\n    return getLimiteTotalCampos(this.planoUsuario);\n  }\n\n  constructor(\n    private authService: AuthService,\n    private usuarioService: UsuarioService,\n    private campoService: CampoService,\n    private templateCsvService: TemplateCsvService,\n    private analyticsService: AnalyticsService,\n    private assinaturaService: AssinaturaService,\n    private errorHandler: ErrorHandlerService,\n    private authErrorHandler: AuthErrorHandlerService,\n  ) { }\n\n  ngOnInit() {\n    // Verificar se o usuário está autenticado\n    if (!this.authService.estaAutenticado()) {\n      console.log('❌ Usuário não autenticado');\n      this.mensagem = '⚠️ Faça login para acessar o dashboard.';\n      return;\n    }\n\n    console.log('✅ Usuário autenticado, carregando dados...');\n    this.carregarDadosCompleto();\n  }\n\n  ngOnDestroy() {\n    // Cleanup se necessário\n  }\n\n  /**\n   * Carrega todos os dados do dashboard de forma centralizada\n   */\n  carregarDadosCompleto() {\n    if (this.carregandoPagina && !this.carregamentoInicial) {\n      console.log('🔄 Carregamento já em andamento, ignorando nova requisição');\n      return;\n    }\n\n    this.carregandoPagina = true;\n    if (this.carregamentoInicial) {\n      this.carregamentoInicial = false;\n    }\n\n    console.log('🔄 Iniciando carregamento completo do dashboard...');\n\n    // Carregar dados do usuário\n    this.carregarDadosUsuario();\n\n    // Carregar dados reais do backend\n    this.carregarDadosBackend();\n  }\n\n  /**\n   * Carrega dados do usuário do localStorage e backend\n   */\n  carregarDadosUsuario() {\n    // Dados do localStorage\n    this.nomeUsuario = localStorage.getItem('nomeUsuario') || 'Usuário';\n    this.emailUsuario =\n      localStorage.getItem('emailUsuario') || 'email@exemplo.com';\n    this.planoUsuario = localStorage.getItem('plano') || 'PESSOAL';\n\n    console.log('✅ Dados do usuário carregados:', {\n      nome: this.nomeUsuario,\n      email: this.emailUsuario,\n      plano: this.planoUsuario,\n    });\n\n    // Buscar dados do usuário no backend\n    this.usuarioService.obterUsuarioBackend().subscribe({\n      next: (usuario) => {\n        console.log('✅ Dados do usuário do backend:', usuario);\n        this.nomeUsuario = usuario.nome || this.nomeUsuario;\n        this.emailUsuario = usuario.email || this.emailUsuario;\n        this.planoUsuario = usuario.plano || this.planoUsuario;\n\n        // Atualizar localStorage\n        localStorage.setItem('nomeUsuario', this.nomeUsuario);\n        localStorage.setItem('emailUsuario', this.emailUsuario);\n        localStorage.setItem('plano', this.planoUsuario);\n      },\n      error: (error) => {\n        console.error('❌ Erro ao buscar dados do usuário:', error);\n\n        // Usar o serviço especializado para tratar erros de autenticação\n        this.authErrorHandler.handleAuthError(error, 'Dashboard-Usuario');\n      },\n    });\n  }\n\n  /**\n   * Carrega dados reais do backend\n   */\n  carregarDadosBackend() {\n    console.log('🔄 Carregando dados do backend...');\n\n    // Fazer apenas UMA requisição para Buscar Formulários do usuário\n    this.templateCsvService.listarTemplates().subscribe({\n      next: (templatesUsuario) => {\n        console.log('✅ Templates do usuário carregados:', templatesUsuario);\n\n        // Usar apenas templates do usuário (manuais + CSV que ele criou)\n        this.totalTemplates = Array.isArray(templatesUsuario) ? templatesUsuario.length : 0;\n\n        // Calcular estatísticas baseadas nos templates do usuário\n        this.calcularEstatisticas(templatesUsuario);\n\n        // Gerar atividades usando os dados já obtidos\n        this.gerarAtividadesBaseadas(templatesUsuario);\n\n        // Atualizar atividades com dados reais\n        this.atualizarAtividadesReais();\n\n        // Finalizar carregamento\n        setTimeout(() => {\n          this.carregandoPagina = false;\n          console.log('✅ Carregamento completo finalizado');\n        }, 500);\n      },\n      error: (error) => {\n        console.error('❌ Erro ao carregar templates do usuário:', error);\n\n        // Usar o serviço especializado para tratar erros de autenticação\n        this.authErrorHandler.handleAuthError(error, 'Dashboard-Templates');\n\n        // Se não for erro de autenticação, continuar com o tratamento normal\n        if (!this.authErrorHandler.isAuthError(error)) {\n          this.totalTemplates = 0;\n          this.mensagem = this.errorHandler.getErrorMessage(error);\n          this.carregandoPagina = false;\n        }\n      },\n    });\n\n    // Buscar informações da assinatura em paralelo\n    this.assinaturaService.consultarAssinaturaUsuarioLogado().subscribe({\n      next: (assinatura) => {\n        console.log('✅ Assinatura carregada:', assinatura);\n        this.planoUsuario = assinatura.plano;\n        this.assinaturaValida = assinatura.status === 'ATIVA';\n        this.assinaturaExpirada = !this.assinaturaValida;\n\n        // Atualizar localStorage\n        localStorage.setItem('plano', this.planoUsuario);\n      },\n      error: (error) => {\n        console.error('❌ Erro ao carregar assinatura:', error);\n        // Usar dados do localStorage\n        this.assinaturaValida = true; // Fallback\n        this.assinaturaExpirada = false;\n      },\n    });\n  }\n\n  /**\n   * Calcula estatísticas baseadas nos templates cadastrados\n   */\n  calcularEstatisticas(templates: any[]) {\n    if (!templates || templates.length === 0) {\n      this.formulariosPreenchidos = 0;\n      this.ultimoPreenchimento = 'Nunca';\n      return;\n    }\n\n    // Calcular total de formulários preenchidos baseado no totalUso dos templates\n    this.formulariosPreenchidos = templates.reduce((total, template) => {\n      return total + (template.totalUso || 0);\n    }, 0);\n\n    // Calcular último preenchimento baseado no ultimoUso dos templates\n    const templatesComUso = templates.filter(template => template.ultimoUso && template.ultimoUso !== '');\n\n    if (templatesComUso.length > 0) {\n      // Encontrar o template com uso mais recente\n      const templateMaisRecente = templatesComUso.sort((a, b) => {\n        const dataA = new Date(a.ultimoUso);\n        const dataB = new Date(b.ultimoUso);\n        return dataB.getTime() - dataA.getTime();\n      })[0];\n\n      const dataUltimo = new Date(templateMaisRecente.ultimoUso);\n      const agora = new Date();\n      const diffHoras = Math.floor(\n        (agora.getTime() - dataUltimo.getTime()) / (1000 * 60 * 60),\n      );\n\n      if (diffHoras < 1) {\n        this.ultimoPreenchimento = 'Agora mesmo';\n      } else if (diffHoras < 24) {\n        this.ultimoPreenchimento = `Há ${diffHoras} horas`;\n      } else {\n        const diffDias = Math.floor(diffHoras / 24);\n        this.ultimoPreenchimento = `Há ${diffDias} dias`;\n      }\n    } else {\n      this.ultimoPreenchimento = 'Nunca';\n    }\n  }\n\n  /**\n   * Gera atividades baseadas nos templates cadastrados e histórico real\n   */\n  gerarAtividadesBaseadas(templates: any[]) {\n    const atividades: string[] = [];\n\n    // Adicionar login sempre como primeira atividade\n    atividades.push('Login realizado com sucesso');\n\n    if (!templates || templates.length === 0) {\n      atividades.push('Nenhum formulário cadastrado ainda');\n      atividades.push('Use o painel para cadastrar seus primeiros formulários');\n      this.atividades = atividades;\n      return;\n    }\n\n    // Ordenar templates por data de criação (mais recentes primeiro)\n    const templatesOrdenados = templates\n      .filter((template) => template.dataCriacao)\n      .sort((a, b) => {\n        const dataA = new Date(a.dataCriacao);\n        const dataB = new Date(b.dataCriacao);\n        return dataB.getTime() - dataA.getTime();\n      });\n\n    // Gerar atividades baseadas nos templates mais recentes\n    const templatesRelevantes = templatesOrdenados.slice(0, 3);\n\n    templatesRelevantes.forEach((template) => {\n      if (template.dataCriacao) {\n        const dataTemplate = new Date(template.dataCriacao);\n        const agora = new Date();\n        const diffHoras = Math.floor(\n          (agora.getTime() - dataTemplate.getTime()) / (1000 * 60 * 60),\n        );\n\n        let tempoAtras = '';\n        if (diffHoras < 1) {\n          tempoAtras = 'agora mesmo';\n        } else if (diffHoras < 24) {\n          tempoAtras = `há ${diffHoras} horas`;\n        } else {\n          const diffDias = Math.floor(diffHoras / 24);\n          tempoAtras = `há ${diffDias} dias`;\n        }\n\n        atividades.push(\n          `Formulário \"${template.nome}\" criado ${tempoAtras}`,\n        );\n      }\n    });\n\n    // Adicionar atividades baseadas no uso real\n    const templatesComUso = templates.filter(template => template.totalUso > 0);\n    if (templatesComUso.length > 0) {\n      const templateMaisUsado = templatesComUso.sort((a, b) => (b.totalUso || 0) - (a.totalUso || 0))[0];\n      atividades.push(\n        `Formulário \"${templateMaisUsado.nome}\" mais usado: ${templateMaisUsado.totalUso} preenchimentos`\n      );\n    }\n\n    // Adicionar estatísticas reais\n    const totalCampos = templates.reduce((total, template) => {\n      return total + (template.campos?.length || 0);\n    }, 0);\n\n    if (totalCampos > 0) {\n      atividades.push(`Total de ${totalCampos} campos em ${templates.length} formulários`);\n    }\n\n    // Adicionar atividade de sucesso baseada em dados reais\n    if (templates.length >= 5) {\n      atividades.push(`Excelente! Você criou ${templates.length} formulários`);\n    } else if (templates.length >= 3) {\n      atividades.push(`Bom trabalho! ${templates.length} formulários criados`);\n    } else if (templates.length >= 1) {\n      atividades.push(`Começando bem! Seu primeiro formulário foi criado`);\n    }\n\n    this.atividades = atividades;\n  }\n\n  /**\n   * Atualiza apenas os campos\n   */\n  async atualizarCampos() {\n    console.log('🔄 Atualizando dados do dashboard...');\n    this.carregandoPagina = true;\n\n    // Fazer apenas UMA requisição para Buscar Formulários do usuário\n    this.templateCsvService.listarTemplates().subscribe({\n      next: (templatesUsuario) => {\n\n        // Usar apenas templates do usuário (manuais + CSV que ele criou)\n        this.totalTemplates = Array.isArray(templatesUsuario) ? templatesUsuario.length : 0;\n\n\n        // Recalcular estatísticas baseadas nos templates do usuário\n        this.calcularEstatisticas(templatesUsuario);\n\n        // Gerar atividades usando os dados já obtidos\n        this.gerarAtividadesBaseadas(templatesUsuario);\n\n        this.carregandoPagina = false;\n      },\n      error: (error) => {\n        console.error('❌ Erro ao  templates do usuário:', error);\n        this.mensagem = this.errorHandler.getErrorMessage(error);\n        this.carregandoPagina = false;\n      },\n    });\n  }\n\n  /**\n   * Atualiza apenas as atividades recentes\n   */\n  atualizarAtividades() {\n    console.log('🔄 Atualizando atividades recentes...');\n    this.carregandoAtividades = true;\n\n    // Buscar Formulários do usuário atualizados para gerar novas atividades\n    this.templateCsvService.listarTemplates().subscribe({\n      next: (templatesUsuario) => {\n        this.gerarAtividadesBaseadas(templatesUsuario);\n        this.atualizarAtividadesReais();\n        this.carregandoAtividades = false;\n      },\n      error: (error) => {\n        console.error('❌ Erro ao atualizar atividades:', error);\n        this.carregandoAtividades = false;\n        // Manter atividades existentes em caso de erro\n      },\n    });\n  }\n\n  /**\n   * Atualiza dados quando a página ganha foco\n   */\n  @HostListener('window:focus')\n  onWindowFocus() {\n    if (!this.carregandoPagina && !this.carregamentoInicial) {\n      console.log('🔄 Página ganhou foco, atualizando dados...');\n      this.atualizarCampos();\n    }\n  }\n\n  // Getters para upgrade\n  get tituloUpgrade(): string {\n    if (this.planoUsuario === 'PESSOAL') {\n      return 'Plano Profissional';\n    } else if (\n      this.planoUsuario === 'PROFISSIONAL' ||\n      this.planoUsuario === 'PROFISSIONAL_MENSAL' ||\n      this.planoUsuario === 'PROFISSIONAL_VITALICIO'\n    ) {\n      return 'Plano Empresarial';\n    } else if (this.planoUsuario === 'EMPRESARIAL') {\n      return 'Plano Completo';\n    } else {\n      return 'Upgrade do Plano';\n    }\n  }\n\n  get descricaoUpgrade(): string {\n    if (this.planoUsuario === 'PESSOAL') {\n      return `Tenha acesso até ${getPlanoLimite(\n        'PROFISSIONAL_MENSAL',\n      )} campos e ao histórico de preenchimentos e recursos avançados para gerenciar seus dados!`;\n    } else if (\n      this.planoUsuario === 'PROFISSIONAL' ||\n      this.planoUsuario === 'PROFISSIONAL_MENSAL' ||\n      this.planoUsuario === 'PROFISSIONAL_VITALICIO'\n    ) {\n      return 'Importe dados via CSV, crie perfis de equipe e acesse histórico completo de preenchimentos.';\n    } else if (this.planoUsuario === 'EMPRESARIAL') {\n      return 'Você já possui o plano mais completo disponível!';\n    } else {\n      return 'Faça upgrade do seu plano para acessar mais recursos e funcionalidades.';\n    }\n  }\n\n  get textoBotaoUpgrade(): string {\n    if (this.planoUsuario === 'PESSOAL') {\n      return 'Conhecer Plano Profissional';\n    } else if (\n      this.planoUsuario === 'PROFISSIONAL' ||\n      this.planoUsuario === 'PROFISSIONAL_MENSAL' ||\n      this.planoUsuario === 'PROFISSIONAL_VITALICIO'\n    ) {\n      return 'Conhecer Plano Empresarial';\n    } else if (this.planoUsuario === 'EMPRESARIAL') {\n      return 'Plano Completo';\n    } else {\n      return 'Ver Planos';\n    }\n  }\n\n  get mostrarUpgrade(): boolean {\n    // Sempre mostrar o upgrade card, exceto se for empresarial\n    return this.planoUsuario !== 'EMPRESARIAL';\n  }\n\n  trackByAtividade(index: number, atividade: string): string {\n    return atividade;\n  }\n\n\n\n  /**\n   * Retorna os recursos principais do plano atual, filtrados e organizados\n   */\n  getRecursosPrincipais(): string[] {\n    const plano = getPlanoConfig(this.planoUsuario);\n    const recursos = [...plano.recursos];\n\n    // Filtrar recursos duplicados ou muito similares\n    const recursosFiltrados = recursos.filter((recurso, index, array) => {\n      // Remover recursos que são apenas descrições do plano\n      if (recurso.toLowerCase().includes('para') ||\n        recurso.toLowerCase().includes('pague') ||\n        recurso.toLowerCase().includes('empresas')) {\n        return false;\n      }\n\n      // Remover duplicatas\n      return array.indexOf(recurso) === index;\n    });\n\n    // Priorizar recursos específicos e úteis\n    const recursosPrioritarios = recursosFiltrados.filter(recurso =>\n      recurso.toLowerCase().includes('csv') ||\n      recurso.toLowerCase().includes('templates') ||\n      recurso.toLowerCase().includes('relatórios') ||\n      recurso.toLowerCase().includes('empresarial') ||\n      recurso.toLowerCase().includes('prioritário')\n    );\n\n    // Se não houver recursos prioritários suficientes, usar os primeiros disponíveis\n    if (recursosPrioritarios.length >= 3) {\n      return recursosPrioritarios.slice(0, 3);\n    }\n\n    // Combinar recursos prioritários com outros recursos\n    const resultado = [...recursosPrioritarios];\n    const outrosRecursos = recursosFiltrados.filter(recurso =>\n      !recursosPrioritarios.includes(recurso)\n    );\n\n    resultado.push(...outrosRecursos.slice(0, 3 - resultado.length));\n\n    return resultado;\n  }\n\n  /**\n   * Manipula o hover do botão de upgrade\n   */\n  onUpgradeButtonHover(button: any, isHovering: boolean): void {\n    const element = button as HTMLElement;\n    if (isHovering) {\n      element.style.backgroundColor = 'rgba(255,255,255,0.3)';\n    } else {\n      element.style.backgroundColor = 'rgba(255,255,255,0.2)';\n    }\n  }\n\n  /**\n * Verifica se o usuário pode acessar o upload CSV baseado no plano\n */\n  podeAcessarUploadCsv(): boolean {\n    const planoUsuario = this.planoUsuario.toUpperCase();\n\n    return planoUsuario === 'EMPRESARIAL' ||\n      planoUsuario.includes('EMPRESARIAL') ||\n      planoUsuario === 'PROFISSIONAL_VITALICIO' ||\n      planoUsuario.includes('VITALICIO') ||\n      planoUsuario === 'PROFISSIONAL_MENSAL' ||\n      planoUsuario.includes('MENSAL');\n  }\n\n  /**\n   * Calcula o crescimento de templates baseado no histórico\n   */\n  calcularCrescimentoTemplates(): string {\n    if (this.totalTemplates === 0) return '';\n\n    // Simular crescimento baseado no número de templates\n    if (this.totalTemplates >= 10) return '+25%';\n    if (this.totalTemplates >= 5) return '+15%';\n    if (this.totalTemplates >= 3) return '+10%';\n    if (this.totalTemplates >= 1) return '+5%';\n\n    return '';\n  }\n\n  /**\n   * Calcula o crescimento de preenchimentos baseado no histórico\n   */\n  calcularCrescimentoPreenchimentos(): string {\n    if (this.formulariosPreenchidos === 0) return '';\n\n    // Simular crescimento baseado no número de preenchimentos\n    if (this.formulariosPreenchidos >= 50) return '+20%';\n    if (this.formulariosPreenchidos >= 25) return '+15%';\n    if (this.formulariosPreenchidos >= 10) return '+10%';\n    if (this.formulariosPreenchidos >= 5) return '+8%';\n\n    return '';\n  }\n\n  /**\n   * Registra uma nova atividade em tempo real\n   */\n  registrarAtividade(acao: string): void {\n    const agora = new Date();\n    const horaFormatada = agora.toLocaleTimeString('pt-BR', {\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n\n    const novaAtividade = `${acao} - ${horaFormatada}`;\n\n    // Adiciona no início da lista\n    this.atividades.unshift(novaAtividade);\n\n    // Mantém apenas as 10 atividades mais recentes\n    if (this.atividades.length > 10) {\n      this.atividades = this.atividades.slice(0, 10);\n    }\n  }\n\n  /**\n   * Atualiza atividades com dados reais do usuário\n   */\n  atualizarAtividadesReais(): void {\n    if (this.totalTemplates > 0) {\n      // Registrar atividade baseada no número de formulários\n      if (this.totalTemplates === 1) {\n        this.registrarAtividade('Primeiro formulário criado com sucesso!');\n      } else if (this.totalTemplates >= 5) {\n        this.registrarAtividade(`Gerenciando ${this.totalTemplates} formulários`);\n      }\n\n      // Registrar atividade baseada no uso\n      if (this.formulariosPreenchidos > 0) {\n        this.registrarAtividade(`${this.formulariosPreenchidos} formulários preenchidos`);\n      }\n    }\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}