{"ast":null,"code":"import { FocusMonitor, _IdGenerator, FocusKeyManager } from '@angular/cdk/a11y';\nimport { ENTER, SPACE, BACKSPACE, DELETE, TAB, hasModifierKey, UP_ARROW, DOWN_ARROW } from '@angular/cdk/keycodes';\nimport { _CdkPrivateStyleLoader, _VisuallyHiddenLoader } from '@angular/cdk/private';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, ElementRef, booleanAttribute, numberAttribute, Directive, Input, ChangeDetectorRef, HOST_TAG_NAME, NgZone, DOCUMENT, EventEmitter, Injector, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, Output, ContentChild, ViewChild, afterNextRender, QueryList, forwardRef, NgModule } from '@angular/core';\nimport { Subject, merge } from 'rxjs';\nimport { _StructuralStylesLoader } from './structural-styles.mjs';\nimport { MAT_RIPPLE_GLOBAL_OPTIONS } from './ripple.mjs';\nimport { _animationsDisabled } from './animation.mjs';\nimport { MatRippleLoader } from './ripple-loader.mjs';\nimport { takeUntil, startWith, switchMap } from 'rxjs/operators';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { NG_VALUE_ACCESSOR, NgControl, Validators, NgForm, FormGroupDirective } from '@angular/forms';\nimport { ErrorStateMatcher } from './error-options.mjs';\nimport { _ErrorStateTracker } from './error-state.mjs';\nimport { MatFormFieldControl, MAT_FORM_FIELD } from './form-field2.mjs';\nimport { MatCommonModule } from './common-module.mjs';\nimport { MatRippleModule } from './ripple-module.mjs';\nimport '@angular/cdk/platform';\nimport '@angular/cdk/coercion';\nimport '@angular/cdk/layout';\nimport '@angular/common';\nimport '@angular/cdk/observers/private';\n\n/** Injection token to be used to override the default options for the chips module. */\nconst _c0 = [\"*\", [[\"mat-chip-avatar\"], [\"\", \"matChipAvatar\", \"\"]], [[\"mat-chip-trailing-icon\"], [\"\", \"matChipRemove\", \"\"], [\"\", \"matChipTrailingIcon\", \"\"]]];\nconst _c1 = [\"*\", \"mat-chip-avatar, [matChipAvatar]\", \"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\"];\nfunction MatChip_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 3);\n    i0.ɵɵprojection(1, 1);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatChip_Conditional_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 6);\n    i0.ɵɵprojection(1, 2);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatChipOption_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 3);\n    i0.ɵɵprojection(1, 1);\n    i0.ɵɵelementStart(2, \"span\", 7);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(3, \"svg\", 8);\n    i0.ɵɵelement(4, \"path\", 9);\n    i0.ɵɵelementEnd()()();\n  }\n}\nfunction MatChipOption_Conditional_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 6);\n    i0.ɵɵprojection(1, 2);\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c2 = \".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}@media(forced-colors: active){.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{forced-color-adjust:none}}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-outline-width, 1px);border-radius:var(--mat-chip-container-shape-radius, 8px);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-outline-color, var(--mat-sys-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mat-chip-focus-outline-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--secondary{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mat-chip-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-chip-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-chip-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mat-chip-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-chip-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-label-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mat-chip-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mat-chip-with-avatar-avatar-size, 24px);height:var(--mat-chip-with-avatar-avatar-size, 24px);font-size:var(--mat-chip-with-avatar-avatar-size, 24px)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__graphic{padding-left:0}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@media(forced-colors: active){.mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mat-mdc-standard-chip{border-radius:var(--mat-chip-container-shape-radius, 8px);height:var(--mat-chip-container-height, 32px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mat-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mat-chip-flat-disabled-selected-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}@media(forced-colors: active){.mat-mdc-standard-chip{outline:solid 1px}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mat-chip-with-avatar-avatar-shape-radius, 24px);width:var(--mat-chip-with-icon-icon-size, 18px);height:var(--mat-chip-with-icon-icon-size, 18px);font-size:var(--mat-chip-with-icon-icon-size, 18px)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-highlighted{--mat-chip-with-icon-icon-color: var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container));--mat-chip-elevated-container-color: var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container));--mat-chip-label-text-color: var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container));--mat-chip-outline-width: var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-hover-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-hover-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mat-chip-with-avatar-disabled-avatar-opacity, 0.38)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mat-chip-with-icon-disabled-icon-opacity, 0.38)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity, 1)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-edit,.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity, 1)}.mat-mdc-chip-edit:focus,.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity, 1)}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-edit:hover::after,.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-edit:focus::after,.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mat-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-edit::before,.mat-mdc-chip-remove::before{margin:calc(var(--mat-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}@media(forced-colors: active){.mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}}.mat-mdc-chip-action:focus .mat-focus-indicator::before{content:\\\"\\\"}.mdc-evolution-chip__icon,.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{min-height:fit-content}\\n\";\nconst _c3 = [[[\"\", \"matChipEdit\", \"\"]], [[\"mat-chip-avatar\"], [\"\", \"matChipAvatar\", \"\"]], [[\"\", \"matChipEditInput\", \"\"]], \"*\", [[\"mat-chip-trailing-icon\"], [\"\", \"matChipRemove\", \"\"], [\"\", \"matChipTrailingIcon\", \"\"]]];\nconst _c4 = [\"[matChipEdit]\", \"mat-chip-avatar, [matChipAvatar]\", \"[matChipEditInput]\", \"*\", \"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\"];\nfunction MatChipRow_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 0);\n  }\n}\nfunction MatChipRow_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 1);\n    i0.ɵɵprojection(1);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatChipRow_Conditional_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 3);\n    i0.ɵɵprojection(1, 1);\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MatChipRow_Conditional_5_Conditional_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 2);\n  }\n}\nfunction MatChipRow_Conditional_5_Conditional_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"span\", 7);\n  }\n}\nfunction MatChipRow_Conditional_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵconditionalCreate(0, MatChipRow_Conditional_5_Conditional_0_Template, 1, 0)(1, MatChipRow_Conditional_5_Conditional_1_Template, 1, 0, \"span\", 7);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵconditional(ctx_r0.contentEditInput ? 0 : 1);\n  }\n}\nfunction MatChipRow_Conditional_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵprojection(0, 3);\n  }\n}\nfunction MatChipRow_Conditional_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 6);\n    i0.ɵɵprojection(1, 4);\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c5 = [\"*\"];\nconst _c6 = \".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-moz-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-webkit-input-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input:-ms-input-placeholder{opacity:1}.mat-mdc-chip-set+input.mat-mdc-chip-input{margin-left:0;margin-right:0}\\n\";\nconst MAT_CHIPS_DEFAULT_OPTIONS = new InjectionToken('mat-chips-default-options', {\n  providedIn: 'root',\n  factory: () => ({\n    separatorKeyCodes: [ENTER]\n  })\n});\n/**\n * Injection token that can be used to reference instances of `MatChipAvatar`. It serves as\n * alternative token to the actual `MatChipAvatar` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_AVATAR = new InjectionToken('MatChipAvatar');\n/**\n * Injection token that can be used to reference instances of `MatChipTrailingIcon`. It serves as\n * alternative token to the actual `MatChipTrailingIcon` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_TRAILING_ICON = new InjectionToken('MatChipTrailingIcon');\n/**\n * Injection token that can be used to reference instances of `MatChipEdit`. It serves as\n * alternative token to the actual `MatChipEdit` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_EDIT = new InjectionToken('MatChipEdit');\n/**\n * Injection token that can be used to reference instances of `MatChipRemove`. It serves as\n * alternative token to the actual `MatChipRemove` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_REMOVE = new InjectionToken('MatChipRemove');\n/**\n * Injection token used to avoid a circular dependency between the `MatChip` and `MatChipAction`.\n */\nconst MAT_CHIP = new InjectionToken('MatChip');\n\n/**\n * Section within a chip.\n * @docs-private\n */\nclass MatChipAction {\n  _elementRef = inject(ElementRef);\n  _parentChip = inject(MAT_CHIP);\n  /** Whether the action is interactive. */\n  isInteractive = true;\n  /** Whether this is the primary action in the chip. */\n  _isPrimary = true;\n  /** Whether this is the leading action in the chip. */\n  _isLeading = false; // TODO(adolgachev): consolidate usage to secondary css class\n  /** Whether the action is disabled. */\n  get disabled() {\n    return this._disabled || this._parentChip?.disabled || false;\n  }\n  set disabled(value) {\n    this._disabled = value;\n  }\n  _disabled = false;\n  /** Tab index of the action. */\n  tabIndex = -1;\n  /**\n   * Private API to allow focusing this chip when it is disabled.\n   */\n  _allowFocusWhenDisabled = false;\n  /**\n   * Determine the value of the disabled attribute for this chip action.\n   */\n  _getDisabledAttribute() {\n    // When this chip action is disabled and focusing disabled chips is not permitted, return empty\n    // string to indicate that disabled attribute should be included.\n    return this.disabled && !this._allowFocusWhenDisabled ? '' : null;\n  }\n  /**\n   * Determine the value of the tabindex attribute for this chip action.\n   */\n  _getTabindex() {\n    return this.disabled && !this._allowFocusWhenDisabled || !this.isInteractive ? null : this.tabIndex.toString();\n  }\n  constructor() {\n    inject(_CdkPrivateStyleLoader).load(_StructuralStylesLoader);\n    if (this._elementRef.nativeElement.nodeName === 'BUTTON') {\n      this._elementRef.nativeElement.setAttribute('type', 'button');\n    }\n  }\n  focus() {\n    this._elementRef.nativeElement.focus();\n  }\n  _handleClick(event) {\n    if (!this.disabled && this.isInteractive && this._isPrimary) {\n      event.preventDefault();\n      this._parentChip._handlePrimaryActionInteraction();\n    }\n  }\n  _handleKeydown(event) {\n    if ((event.keyCode === ENTER || event.keyCode === SPACE) && !this.disabled && this.isInteractive && this._isPrimary && !this._parentChip._isEditing) {\n      event.preventDefault();\n      this._parentChip._handlePrimaryActionInteraction();\n    }\n  }\n  static ɵfac = function MatChipAction_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatChipAction)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatChipAction,\n    selectors: [[\"\", \"matChipAction\", \"\"]],\n    hostAttrs: [1, \"mdc-evolution-chip__action\", \"mat-mdc-chip-action\"],\n    hostVars: 11,\n    hostBindings: function MatChipAction_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"click\", function MatChipAction_click_HostBindingHandler($event) {\n          return ctx._handleClick($event);\n        })(\"keydown\", function MatChipAction_keydown_HostBindingHandler($event) {\n          return ctx._handleKeydown($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"tabindex\", ctx._getTabindex())(\"disabled\", ctx._getDisabledAttribute())(\"aria-disabled\", ctx.disabled);\n        i0.ɵɵclassProp(\"mdc-evolution-chip__action--primary\", ctx._isPrimary)(\"mdc-evolution-chip__action--presentational\", !ctx.isInteractive)(\"mdc-evolution-chip__action--secondary\", !ctx._isPrimary)(\"mdc-evolution-chip__action--trailing\", !ctx._isPrimary && !ctx._isLeading);\n      }\n    },\n    inputs: {\n      isInteractive: \"isInteractive\",\n      disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n      tabIndex: [2, \"tabIndex\", \"tabIndex\", value => value == null ? -1 : numberAttribute(value)],\n      _allowFocusWhenDisabled: \"_allowFocusWhenDisabled\"\n    }\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipAction, [{\n    type: Directive,\n    args: [{\n      selector: '[matChipAction]',\n      host: {\n        'class': 'mdc-evolution-chip__action mat-mdc-chip-action',\n        '[class.mdc-evolution-chip__action--primary]': '_isPrimary',\n        '[class.mdc-evolution-chip__action--presentational]': '!isInteractive',\n        '[class.mdc-evolution-chip__action--secondary]': '!_isPrimary',\n        '[class.mdc-evolution-chip__action--trailing]': '!_isPrimary && !_isLeading',\n        '[attr.tabindex]': '_getTabindex()',\n        '[attr.disabled]': '_getDisabledAttribute()',\n        '[attr.aria-disabled]': 'disabled',\n        '(click)': '_handleClick($event)',\n        '(keydown)': '_handleKeydown($event)'\n      }\n    }]\n  }], () => [], {\n    isInteractive: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    tabIndex: [{\n      type: Input,\n      args: [{\n        transform: value => value == null ? -1 : numberAttribute(value)\n      }]\n    }],\n    _allowFocusWhenDisabled: [{\n      type: Input\n    }]\n  });\n})();\n\n/** Avatar image within a chip. */\nclass MatChipAvatar {\n  static ɵfac = function MatChipAvatar_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatChipAvatar)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatChipAvatar,\n    selectors: [[\"mat-chip-avatar\"], [\"\", \"matChipAvatar\", \"\"]],\n    hostAttrs: [\"role\", \"img\", 1, \"mat-mdc-chip-avatar\", \"mdc-evolution-chip__icon\", \"mdc-evolution-chip__icon--primary\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_CHIP_AVATAR,\n      useExisting: MatChipAvatar\n    }])]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipAvatar, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-chip-avatar, [matChipAvatar]',\n      host: {\n        'class': 'mat-mdc-chip-avatar mdc-evolution-chip__icon mdc-evolution-chip__icon--primary',\n        'role': 'img'\n      },\n      providers: [{\n        provide: MAT_CHIP_AVATAR,\n        useExisting: MatChipAvatar\n      }]\n    }]\n  }], null, null);\n})();\n/** Non-interactive trailing icon in a chip. */\nclass MatChipTrailingIcon extends MatChipAction {\n  /**\n   * MDC considers all trailing actions as a remove icon,\n   * but we support non-interactive trailing icons.\n   */\n  isInteractive = false;\n  _isPrimary = false;\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatChipTrailingIcon_BaseFactory;\n    return function MatChipTrailingIcon_Factory(__ngFactoryType__) {\n      return (ɵMatChipTrailingIcon_BaseFactory || (ɵMatChipTrailingIcon_BaseFactory = i0.ɵɵgetInheritedFactory(MatChipTrailingIcon)))(__ngFactoryType__ || MatChipTrailingIcon);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatChipTrailingIcon,\n    selectors: [[\"mat-chip-trailing-icon\"], [\"\", \"matChipTrailingIcon\", \"\"]],\n    hostAttrs: [\"aria-hidden\", \"true\", 1, \"mat-mdc-chip-trailing-icon\", \"mdc-evolution-chip__icon\", \"mdc-evolution-chip__icon--trailing\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_CHIP_TRAILING_ICON,\n      useExisting: MatChipTrailingIcon\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipTrailingIcon, [{\n    type: Directive,\n    args: [{\n      selector: 'mat-chip-trailing-icon, [matChipTrailingIcon]',\n      host: {\n        'class': 'mat-mdc-chip-trailing-icon mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing',\n        'aria-hidden': 'true'\n      },\n      providers: [{\n        provide: MAT_CHIP_TRAILING_ICON,\n        useExisting: MatChipTrailingIcon\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * Directive to edit the parent chip when the leading action icon is clicked or\n * when the ENTER key is pressed on it.\n *\n * Recommended for use with the Material Design \"edit\" icon\n * available at https://material.io/icons/#ic_edit.\n *\n * Example:\n *\n * ```\n * <mat-chip>\n *   <button matChipEdit aria-label=\"Edit\">\n *     <mat-icon>edit</mat-icon>\n *   </button>\n * </mat-chip>\n * ```\n */\nclass MatChipEdit extends MatChipAction {\n  _isPrimary = false;\n  _isLeading = true;\n  _handleClick(event) {\n    if (!this.disabled) {\n      event.stopPropagation();\n      event.preventDefault();\n      this._parentChip._edit();\n    }\n  }\n  _handleKeydown(event) {\n    if ((event.keyCode === ENTER || event.keyCode === SPACE) && !this.disabled) {\n      event.stopPropagation();\n      event.preventDefault();\n      this._parentChip._edit();\n    }\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatChipEdit_BaseFactory;\n    return function MatChipEdit_Factory(__ngFactoryType__) {\n      return (ɵMatChipEdit_BaseFactory || (ɵMatChipEdit_BaseFactory = i0.ɵɵgetInheritedFactory(MatChipEdit)))(__ngFactoryType__ || MatChipEdit);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatChipEdit,\n    selectors: [[\"\", \"matChipEdit\", \"\"]],\n    hostAttrs: [\"role\", \"button\", 1, \"mat-mdc-chip-edit\", \"mat-mdc-chip-avatar\", \"mat-focus-indicator\", \"mdc-evolution-chip__icon\", \"mdc-evolution-chip__icon--primary\"],\n    hostVars: 1,\n    hostBindings: function MatChipEdit_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-hidden\", null);\n      }\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_CHIP_EDIT,\n      useExisting: MatChipEdit\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipEdit, [{\n    type: Directive,\n    args: [{\n      selector: '[matChipEdit]',\n      host: {\n        'class': 'mat-mdc-chip-edit mat-mdc-chip-avatar mat-focus-indicator ' + 'mdc-evolution-chip__icon mdc-evolution-chip__icon--primary',\n        'role': 'button',\n        '[attr.aria-hidden]': 'null'\n      },\n      providers: [{\n        provide: MAT_CHIP_EDIT,\n        useExisting: MatChipEdit\n      }]\n    }]\n  }], null, null);\n})();\n/**\n * Directive to remove the parent chip when the trailing icon is clicked or\n * when the ENTER key is pressed on it.\n *\n * Recommended for use with the Material Design \"cancel\" icon\n * available at https://material.io/icons/#ic_cancel.\n *\n * Example:\n *\n * ```\n * <mat-chip>\n *   <mat-icon matChipRemove>cancel</mat-icon>\n * </mat-chip>\n * ```\n */\nclass MatChipRemove extends MatChipAction {\n  _isPrimary = false;\n  _handleClick(event) {\n    if (!this.disabled) {\n      event.stopPropagation();\n      event.preventDefault();\n      this._parentChip.remove();\n    }\n  }\n  _handleKeydown(event) {\n    if ((event.keyCode === ENTER || event.keyCode === SPACE) && !this.disabled) {\n      event.stopPropagation();\n      event.preventDefault();\n      this._parentChip.remove();\n    }\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatChipRemove_BaseFactory;\n    return function MatChipRemove_Factory(__ngFactoryType__) {\n      return (ɵMatChipRemove_BaseFactory || (ɵMatChipRemove_BaseFactory = i0.ɵɵgetInheritedFactory(MatChipRemove)))(__ngFactoryType__ || MatChipRemove);\n    };\n  })();\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatChipRemove,\n    selectors: [[\"\", \"matChipRemove\", \"\"]],\n    hostAttrs: [\"role\", \"button\", 1, \"mat-mdc-chip-remove\", \"mat-mdc-chip-trailing-icon\", \"mat-focus-indicator\", \"mdc-evolution-chip__icon\", \"mdc-evolution-chip__icon--trailing\"],\n    hostVars: 1,\n    hostBindings: function MatChipRemove_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵattribute(\"aria-hidden\", null);\n      }\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_CHIP_REMOVE,\n      useExisting: MatChipRemove\n    }]), i0.ɵɵInheritDefinitionFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipRemove, [{\n    type: Directive,\n    args: [{\n      selector: '[matChipRemove]',\n      host: {\n        'class': 'mat-mdc-chip-remove mat-mdc-chip-trailing-icon mat-focus-indicator ' + 'mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing',\n        'role': 'button',\n        '[attr.aria-hidden]': 'null'\n      },\n      providers: [{\n        provide: MAT_CHIP_REMOVE,\n        useExisting: MatChipRemove\n      }]\n    }]\n  }], null, null);\n})();\n\n/**\n * Material design styled Chip base component. Used inside the MatChipSet component.\n *\n * Extended by MatChipOption and MatChipRow for different interaction patterns.\n */\nclass MatChip {\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _elementRef = inject(ElementRef);\n  _tagName = inject(HOST_TAG_NAME);\n  _ngZone = inject(NgZone);\n  _focusMonitor = inject(FocusMonitor);\n  _globalRippleOptions = inject(MAT_RIPPLE_GLOBAL_OPTIONS, {\n    optional: true\n  });\n  _document = inject(DOCUMENT);\n  /** Emits when the chip is focused. */\n  _onFocus = new Subject();\n  /** Emits when the chip is blurred. */\n  _onBlur = new Subject();\n  /** Whether this chip is a basic (unstyled) chip. */\n  _isBasicChip;\n  /** Role for the root of the chip. */\n  role = null;\n  /** Whether the chip has focus. */\n  _hasFocusInternal = false;\n  /** Whether moving focus into the chip is pending. */\n  _pendingFocus;\n  /** Subscription to changes in the chip's actions. */\n  _actionChanges;\n  /** Whether animations for the chip are enabled. */\n  _animationsDisabled = _animationsDisabled();\n  /** All avatars present in the chip. */\n  _allLeadingIcons;\n  /** All trailing icons present in the chip. */\n  _allTrailingIcons;\n  /** All edit icons present in the chip. */\n  _allEditIcons;\n  /** All remove icons present in the chip. */\n  _allRemoveIcons;\n  _hasFocus() {\n    return this._hasFocusInternal;\n  }\n  /** A unique id for the chip. If none is supplied, it will be auto-generated. */\n  id = inject(_IdGenerator).getId('mat-mdc-chip-');\n  // TODO(#26104): Consider deprecating and using `_computeAriaAccessibleName` instead.\n  // `ariaLabel` may be unnecessary, and `_computeAriaAccessibleName` only supports\n  // datepicker's use case.\n  /** ARIA label for the content of the chip. */\n  ariaLabel = null;\n  // TODO(#26104): Consider deprecating and using `_computeAriaAccessibleName` instead.\n  // `ariaDescription` may be unnecessary, and `_computeAriaAccessibleName` only supports\n  // datepicker's use case.\n  /** ARIA description for the content of the chip. */\n  ariaDescription = null;\n  /** Whether the chip list is disabled. */\n  _chipListDisabled = false;\n  /** Whether the chip was focused when it was removed. */\n  _hadFocusOnRemove = false;\n  _textElement;\n  /**\n   * The value of the chip. Defaults to the content inside\n   * the `mat-mdc-chip-action-label` element.\n   */\n  get value() {\n    return this._value !== undefined ? this._value : this._textElement.textContent.trim();\n  }\n  set value(value) {\n    this._value = value;\n  }\n  _value;\n  // TODO: should be typed as `ThemePalette` but internal apps pass in arbitrary strings.\n  /**\n   * Theme color of the chip. This API is supported in M2 themes only, it has no\n   * effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/chips/styling.\n   *\n   * For information on applying color variants in M3, see\n   * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n   */\n  color;\n  /**\n   * Determines whether or not the chip displays the remove styling and emits (removed) events.\n   */\n  removable = true;\n  /**\n   * Colors the chip for emphasis as if it were selected.\n   */\n  highlighted = false;\n  /** Whether the ripple effect is disabled or not. */\n  disableRipple = false;\n  /** Whether the chip is disabled. */\n  get disabled() {\n    return this._disabled || this._chipListDisabled;\n  }\n  set disabled(value) {\n    this._disabled = value;\n  }\n  _disabled = false;\n  /** Emitted when a chip is to be removed. */\n  removed = new EventEmitter();\n  /** Emitted when the chip is destroyed. */\n  destroyed = new EventEmitter();\n  /** The unstyled chip selector for this component. */\n  basicChipAttrName = 'mat-basic-chip';\n  /** The chip's leading icon. */\n  leadingIcon;\n  /** The chip's leading edit icon. */\n  editIcon;\n  /** The chip's trailing icon. */\n  trailingIcon;\n  /** The chip's trailing remove icon. */\n  removeIcon;\n  /** Action receiving the primary set of user interactions. */\n  primaryAction;\n  /**\n   * Handles the lazy creation of the MatChip ripple.\n   * Used to improve initial load time of large applications.\n   */\n  _rippleLoader = inject(MatRippleLoader);\n  _injector = inject(Injector);\n  constructor() {\n    const styleLoader = inject(_CdkPrivateStyleLoader);\n    styleLoader.load(_StructuralStylesLoader);\n    styleLoader.load(_VisuallyHiddenLoader);\n    this._monitorFocus();\n    this._rippleLoader?.configureRipple(this._elementRef.nativeElement, {\n      className: 'mat-mdc-chip-ripple',\n      disabled: this._isRippleDisabled()\n    });\n  }\n  ngOnInit() {\n    // This check needs to happen in `ngOnInit` so the overridden value of\n    // `basicChipAttrName` coming from base classes can be picked up.\n    this._isBasicChip = this._elementRef.nativeElement.hasAttribute(this.basicChipAttrName) || this._tagName.toLowerCase() === this.basicChipAttrName;\n  }\n  ngAfterViewInit() {\n    this._textElement = this._elementRef.nativeElement.querySelector('.mat-mdc-chip-action-label');\n    if (this._pendingFocus) {\n      this._pendingFocus = false;\n      this.focus();\n    }\n  }\n  ngAfterContentInit() {\n    // Since the styling depends on the presence of some\n    // actions, we have to mark for check on changes.\n    this._actionChanges = merge(this._allLeadingIcons.changes, this._allTrailingIcons.changes, this._allEditIcons.changes, this._allRemoveIcons.changes).subscribe(() => this._changeDetectorRef.markForCheck());\n  }\n  ngDoCheck() {\n    this._rippleLoader.setDisabled(this._elementRef.nativeElement, this._isRippleDisabled());\n  }\n  ngOnDestroy() {\n    this._focusMonitor.stopMonitoring(this._elementRef);\n    this._rippleLoader?.destroyRipple(this._elementRef.nativeElement);\n    this._actionChanges?.unsubscribe();\n    this.destroyed.emit({\n      chip: this\n    });\n    this.destroyed.complete();\n  }\n  /**\n   * Allows for programmatic removal of the chip.\n   *\n   * Informs any listeners of the removal request. Does not remove the chip from the DOM.\n   */\n  remove() {\n    if (this.removable) {\n      this._hadFocusOnRemove = this._hasFocus();\n      this.removed.emit({\n        chip: this\n      });\n    }\n  }\n  /** Whether or not the ripple should be disabled. */\n  _isRippleDisabled() {\n    return this.disabled || this.disableRipple || this._animationsDisabled || this._isBasicChip || !this._hasInteractiveActions() || !!this._globalRippleOptions?.disabled;\n  }\n  /** Returns whether the chip has a trailing icon. */\n  _hasTrailingIcon() {\n    return !!(this.trailingIcon || this.removeIcon);\n  }\n  /** Handles keyboard events on the chip. */\n  _handleKeydown(event) {\n    // Ignore backspace events where the user is holding down the key\n    // so that we don't accidentally remove too many chips.\n    if (event.keyCode === BACKSPACE && !event.repeat || event.keyCode === DELETE) {\n      event.preventDefault();\n      this.remove();\n    }\n  }\n  /** Allows for programmatic focusing of the chip. */\n  focus() {\n    if (!this.disabled) {\n      // If `focus` is called before `ngAfterViewInit`, we won't have access to the primary action.\n      // This can happen if the consumer tries to focus a chip immediately after it is added.\n      // Queue the method to be called again on init.\n      if (this.primaryAction) {\n        this.primaryAction.focus();\n      } else {\n        this._pendingFocus = true;\n      }\n    }\n  }\n  /** Gets the action that contains a specific target node. */\n  _getSourceAction(target) {\n    return this._getActions().find(action => {\n      const element = action._elementRef.nativeElement;\n      return element === target || element.contains(target);\n    });\n  }\n  /** Gets all of the actions within the chip. */\n  _getActions() {\n    const result = [];\n    if (this.editIcon) {\n      result.push(this.editIcon);\n    }\n    if (this.primaryAction) {\n      result.push(this.primaryAction);\n    }\n    if (this.removeIcon) {\n      result.push(this.removeIcon);\n    }\n    if (this.trailingIcon) {\n      result.push(this.trailingIcon);\n    }\n    return result;\n  }\n  /** Handles interactions with the primary action of the chip. */\n  _handlePrimaryActionInteraction() {\n    // Empty here, but is overwritten in child classes.\n  }\n  /** Returns whether the chip has any interactive actions. */\n  _hasInteractiveActions() {\n    return this._getActions().some(a => a.isInteractive);\n  }\n  /** Handles interactions with the edit action of the chip. */\n  _edit(event) {\n    // Empty here, but is overwritten in child classes.\n  }\n  /** Starts the focus monitoring process on the chip. */\n  _monitorFocus() {\n    this._focusMonitor.monitor(this._elementRef, true).subscribe(origin => {\n      const hasFocus = origin !== null;\n      if (hasFocus !== this._hasFocusInternal) {\n        this._hasFocusInternal = hasFocus;\n        if (hasFocus) {\n          this._onFocus.next({\n            chip: this\n          });\n        } else {\n          // When animations are enabled, Angular may end up removing the chip from the DOM a little\n          // earlier than usual, causing it to be blurred and throwing off the logic in the chip list\n          // that moves focus to the next item. To work around the issue, we defer marking the chip\n          // as not focused until after the next render.\n          this._changeDetectorRef.markForCheck();\n          setTimeout(() => this._ngZone.run(() => this._onBlur.next({\n            chip: this\n          })));\n        }\n      }\n    });\n  }\n  static ɵfac = function MatChip_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatChip)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatChip,\n    selectors: [[\"mat-basic-chip\"], [\"\", \"mat-basic-chip\", \"\"], [\"mat-chip\"], [\"\", \"mat-chip\", \"\"]],\n    contentQueries: function MatChip_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MAT_CHIP_AVATAR, 5);\n        i0.ɵɵcontentQuery(dirIndex, MAT_CHIP_EDIT, 5);\n        i0.ɵɵcontentQuery(dirIndex, MAT_CHIP_TRAILING_ICON, 5);\n        i0.ɵɵcontentQuery(dirIndex, MAT_CHIP_REMOVE, 5);\n        i0.ɵɵcontentQuery(dirIndex, MAT_CHIP_AVATAR, 5);\n        i0.ɵɵcontentQuery(dirIndex, MAT_CHIP_TRAILING_ICON, 5);\n        i0.ɵɵcontentQuery(dirIndex, MAT_CHIP_EDIT, 5);\n        i0.ɵɵcontentQuery(dirIndex, MAT_CHIP_REMOVE, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.leadingIcon = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.editIcon = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.trailingIcon = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.removeIcon = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allLeadingIcons = _t);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allTrailingIcons = _t);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allEditIcons = _t);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._allRemoveIcons = _t);\n      }\n    },\n    viewQuery: function MatChip_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatChipAction, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.primaryAction = _t.first);\n      }\n    },\n    hostAttrs: [1, \"mat-mdc-chip\"],\n    hostVars: 31,\n    hostBindings: function MatChip_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown\", function MatChip_keydown_HostBindingHandler($event) {\n          return ctx._handleKeydown($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵdomProperty(\"id\", ctx.id);\n        i0.ɵɵattribute(\"role\", ctx.role)(\"aria-label\", ctx.ariaLabel);\n        i0.ɵɵclassMap(\"mat-\" + (ctx.color || \"primary\"));\n        i0.ɵɵclassProp(\"mdc-evolution-chip\", !ctx._isBasicChip)(\"mdc-evolution-chip--disabled\", ctx.disabled)(\"mdc-evolution-chip--with-trailing-action\", ctx._hasTrailingIcon())(\"mdc-evolution-chip--with-primary-graphic\", ctx.leadingIcon)(\"mdc-evolution-chip--with-primary-icon\", ctx.leadingIcon)(\"mdc-evolution-chip--with-avatar\", ctx.leadingIcon)(\"mat-mdc-chip-with-avatar\", ctx.leadingIcon)(\"mat-mdc-chip-highlighted\", ctx.highlighted)(\"mat-mdc-chip-disabled\", ctx.disabled)(\"mat-mdc-basic-chip\", ctx._isBasicChip)(\"mat-mdc-standard-chip\", !ctx._isBasicChip)(\"mat-mdc-chip-with-trailing-icon\", ctx._hasTrailingIcon())(\"_mat-animation-noopable\", ctx._animationsDisabled);\n      }\n    },\n    inputs: {\n      role: \"role\",\n      id: \"id\",\n      ariaLabel: [0, \"aria-label\", \"ariaLabel\"],\n      ariaDescription: [0, \"aria-description\", \"ariaDescription\"],\n      value: \"value\",\n      color: \"color\",\n      removable: [2, \"removable\", \"removable\", booleanAttribute],\n      highlighted: [2, \"highlighted\", \"highlighted\", booleanAttribute],\n      disableRipple: [2, \"disableRipple\", \"disableRipple\", booleanAttribute],\n      disabled: [2, \"disabled\", \"disabled\", booleanAttribute]\n    },\n    outputs: {\n      removed: \"removed\",\n      destroyed: \"destroyed\"\n    },\n    exportAs: [\"matChip\"],\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MAT_CHIP,\n      useExisting: MatChip\n    }])],\n    ngContentSelectors: _c1,\n    decls: 8,\n    vars: 3,\n    consts: [[1, \"mat-mdc-chip-focus-overlay\"], [1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--primary\"], [\"matChipAction\", \"\", 3, \"isInteractive\"], [1, \"mdc-evolution-chip__graphic\", \"mat-mdc-chip-graphic\"], [1, \"mdc-evolution-chip__text-label\", \"mat-mdc-chip-action-label\"], [1, \"mat-mdc-chip-primary-focus-indicator\", \"mat-focus-indicator\"], [1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--trailing\"]],\n    template: function MatChip_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c0);\n        i0.ɵɵelement(0, \"span\", 0);\n        i0.ɵɵelementStart(1, \"span\", 1)(2, \"span\", 2);\n        i0.ɵɵconditionalCreate(3, MatChip_Conditional_3_Template, 2, 0, \"span\", 3);\n        i0.ɵɵelementStart(4, \"span\", 4);\n        i0.ɵɵprojection(5);\n        i0.ɵɵelement(6, \"span\", 5);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵconditionalCreate(7, MatChip_Conditional_7_Template, 2, 0, \"span\", 6);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"isInteractive\", false);\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(ctx.leadingIcon ? 3 : -1);\n        i0.ɵɵadvance(4);\n        i0.ɵɵconditional(ctx._hasTrailingIcon() ? 7 : -1);\n      }\n    },\n    dependencies: [MatChipAction],\n    styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}@media(forced-colors: active){.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{forced-color-adjust:none}}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-outline-width, 1px);border-radius:var(--mat-chip-container-shape-radius, 8px);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-outline-color, var(--mat-sys-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mat-chip-focus-outline-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--secondary{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mat-chip-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-chip-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-chip-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mat-chip-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-chip-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-label-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mat-chip-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mat-chip-with-avatar-avatar-size, 24px);height:var(--mat-chip-with-avatar-avatar-size, 24px);font-size:var(--mat-chip-with-avatar-avatar-size, 24px)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__graphic{padding-left:0}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@media(forced-colors: active){.mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mat-mdc-standard-chip{border-radius:var(--mat-chip-container-shape-radius, 8px);height:var(--mat-chip-container-height, 32px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mat-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mat-chip-flat-disabled-selected-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}@media(forced-colors: active){.mat-mdc-standard-chip{outline:solid 1px}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mat-chip-with-avatar-avatar-shape-radius, 24px);width:var(--mat-chip-with-icon-icon-size, 18px);height:var(--mat-chip-with-icon-icon-size, 18px);font-size:var(--mat-chip-with-icon-icon-size, 18px)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-highlighted{--mat-chip-with-icon-icon-color: var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container));--mat-chip-elevated-container-color: var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container));--mat-chip-label-text-color: var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container));--mat-chip-outline-width: var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-hover-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-hover-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mat-chip-with-avatar-disabled-avatar-opacity, 0.38)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mat-chip-with-icon-disabled-icon-opacity, 0.38)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity, 1)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-edit,.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity, 1)}.mat-mdc-chip-edit:focus,.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity, 1)}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-edit:hover::after,.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-edit:focus::after,.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mat-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-edit::before,.mat-mdc-chip-remove::before{margin:calc(var(--mat-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}@media(forced-colors: active){.mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}}.mat-mdc-chip-action:focus .mat-focus-indicator::before{content:\\\"\\\"}.mdc-evolution-chip__icon,.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{min-height:fit-content}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChip, [{\n    type: Component,\n    args: [{\n      selector: 'mat-basic-chip, [mat-basic-chip], mat-chip, [mat-chip]',\n      exportAs: 'matChip',\n      host: {\n        'class': 'mat-mdc-chip',\n        '[class]': '\"mat-\" + (color || \"primary\")',\n        '[class.mdc-evolution-chip]': '!_isBasicChip',\n        '[class.mdc-evolution-chip--disabled]': 'disabled',\n        '[class.mdc-evolution-chip--with-trailing-action]': '_hasTrailingIcon()',\n        '[class.mdc-evolution-chip--with-primary-graphic]': 'leadingIcon',\n        '[class.mdc-evolution-chip--with-primary-icon]': 'leadingIcon',\n        '[class.mdc-evolution-chip--with-avatar]': 'leadingIcon',\n        '[class.mat-mdc-chip-with-avatar]': 'leadingIcon',\n        '[class.mat-mdc-chip-highlighted]': 'highlighted',\n        '[class.mat-mdc-chip-disabled]': 'disabled',\n        '[class.mat-mdc-basic-chip]': '_isBasicChip',\n        '[class.mat-mdc-standard-chip]': '!_isBasicChip',\n        '[class.mat-mdc-chip-with-trailing-icon]': '_hasTrailingIcon()',\n        '[class._mat-animation-noopable]': '_animationsDisabled',\n        '[id]': 'id',\n        '[attr.role]': 'role',\n        '[attr.aria-label]': 'ariaLabel',\n        '(keydown)': '_handleKeydown($event)'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      providers: [{\n        provide: MAT_CHIP,\n        useExisting: MatChip\n      }],\n      imports: [MatChipAction],\n      template: \"<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <span matChipAction [isInteractive]=\\\"false\\\">\\n    @if (leadingIcon) {\\n      <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n        <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n      </span>\\n    }\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-focus-indicator\\\"></span>\\n    </span>\\n  </span>\\n</span>\\n\\n@if (_hasTrailingIcon()) {\\n  <span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\">\\n    <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n  </span>\\n}\\n\",\n      styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}@media(forced-colors: active){.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{forced-color-adjust:none}}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-outline-width, 1px);border-radius:var(--mat-chip-container-shape-radius, 8px);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-outline-color, var(--mat-sys-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mat-chip-focus-outline-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--secondary{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mat-chip-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-chip-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-chip-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mat-chip-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-chip-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-label-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mat-chip-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mat-chip-with-avatar-avatar-size, 24px);height:var(--mat-chip-with-avatar-avatar-size, 24px);font-size:var(--mat-chip-with-avatar-avatar-size, 24px)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__graphic{padding-left:0}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@media(forced-colors: active){.mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mat-mdc-standard-chip{border-radius:var(--mat-chip-container-shape-radius, 8px);height:var(--mat-chip-container-height, 32px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mat-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mat-chip-flat-disabled-selected-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}@media(forced-colors: active){.mat-mdc-standard-chip{outline:solid 1px}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mat-chip-with-avatar-avatar-shape-radius, 24px);width:var(--mat-chip-with-icon-icon-size, 18px);height:var(--mat-chip-with-icon-icon-size, 18px);font-size:var(--mat-chip-with-icon-icon-size, 18px)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-highlighted{--mat-chip-with-icon-icon-color: var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container));--mat-chip-elevated-container-color: var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container));--mat-chip-label-text-color: var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container));--mat-chip-outline-width: var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-hover-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-hover-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mat-chip-with-avatar-disabled-avatar-opacity, 0.38)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mat-chip-with-icon-disabled-icon-opacity, 0.38)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity, 1)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-edit,.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity, 1)}.mat-mdc-chip-edit:focus,.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity, 1)}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-edit:hover::after,.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-edit:focus::after,.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mat-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-edit::before,.mat-mdc-chip-remove::before{margin:calc(var(--mat-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}@media(forced-colors: active){.mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}}.mat-mdc-chip-action:focus .mat-focus-indicator::before{content:\\\"\\\"}.mdc-evolution-chip__icon,.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{min-height:fit-content}\\n\"]\n    }]\n  }], () => [], {\n    role: [{\n      type: Input\n    }],\n    _allLeadingIcons: [{\n      type: ContentChildren,\n      args: [MAT_CHIP_AVATAR, {\n        descendants: true\n      }]\n    }],\n    _allTrailingIcons: [{\n      type: ContentChildren,\n      args: [MAT_CHIP_TRAILING_ICON, {\n        descendants: true\n      }]\n    }],\n    _allEditIcons: [{\n      type: ContentChildren,\n      args: [MAT_CHIP_EDIT, {\n        descendants: true\n      }]\n    }],\n    _allRemoveIcons: [{\n      type: ContentChildren,\n      args: [MAT_CHIP_REMOVE, {\n        descendants: true\n      }]\n    }],\n    id: [{\n      type: Input\n    }],\n    ariaLabel: [{\n      type: Input,\n      args: ['aria-label']\n    }],\n    ariaDescription: [{\n      type: Input,\n      args: ['aria-description']\n    }],\n    value: [{\n      type: Input\n    }],\n    color: [{\n      type: Input\n    }],\n    removable: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    highlighted: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disableRipple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    removed: [{\n      type: Output\n    }],\n    destroyed: [{\n      type: Output\n    }],\n    leadingIcon: [{\n      type: ContentChild,\n      args: [MAT_CHIP_AVATAR]\n    }],\n    editIcon: [{\n      type: ContentChild,\n      args: [MAT_CHIP_EDIT]\n    }],\n    trailingIcon: [{\n      type: ContentChild,\n      args: [MAT_CHIP_TRAILING_ICON]\n    }],\n    removeIcon: [{\n      type: ContentChild,\n      args: [MAT_CHIP_REMOVE]\n    }],\n    primaryAction: [{\n      type: ViewChild,\n      args: [MatChipAction]\n    }]\n  });\n})();\n\n/** Event object emitted by MatChipOption when selected or deselected. */\nclass MatChipSelectionChange {\n  source;\n  selected;\n  isUserInput;\n  constructor(/** Reference to the chip that emitted the event. */\n  source, /** Whether the chip that emitted the event is selected. */\n  selected, /** Whether the selection change was a result of a user interaction. */\n  isUserInput = false) {\n    this.source = source;\n    this.selected = selected;\n    this.isUserInput = isUserInput;\n  }\n}\n/**\n * An extension of the MatChip component that supports chip selection. Used with MatChipListbox.\n *\n * Unlike other chips, the user can focus on disabled chip options inside a MatChipListbox. The\n * user cannot click disabled chips.\n */\nclass MatChipOption extends MatChip {\n  /** Default chip options. */\n  _defaultOptions = inject(MAT_CHIPS_DEFAULT_OPTIONS, {\n    optional: true\n  });\n  /** Whether the chip list is selectable. */\n  chipListSelectable = true;\n  /** Whether the chip list is in multi-selection mode. */\n  _chipListMultiple = false;\n  /** Whether the chip list hides single-selection indicator. */\n  _chipListHideSingleSelectionIndicator = this._defaultOptions?.hideSingleSelectionIndicator ?? false;\n  /**\n   * Whether or not the chip is selectable.\n   *\n   * When a chip is not selectable, changes to its selected state are always\n   * ignored. By default an option chip is selectable, and it becomes\n   * non-selectable if its parent chip list is not selectable.\n   */\n  get selectable() {\n    return this._selectable && this.chipListSelectable;\n  }\n  set selectable(value) {\n    this._selectable = value;\n    this._changeDetectorRef.markForCheck();\n  }\n  _selectable = true;\n  /** Whether the chip is selected. */\n  get selected() {\n    return this._selected;\n  }\n  set selected(value) {\n    this._setSelectedState(value, false, true);\n  }\n  _selected = false;\n  /**\n   * The ARIA selected applied to the chip. Conforms to WAI ARIA best practices for listbox\n   * interaction patterns.\n   *\n   * From [WAI ARIA Listbox authoring practices guide](\n   * https://www.w3.org/WAI/ARIA/apg/patterns/listbox/):\n   *  \"If any options are selected, each selected option has either aria-selected or aria-checked\n   *  set to true. All options that are selectable but not selected have either aria-selected or\n   *  aria-checked set to false.\"\n   *\n   * Set `aria-selected=\"false\"` on not-selected listbox options that are selectable to fix\n   * VoiceOver reading every option as \"selected\" (#25736).\n   */\n  get ariaSelected() {\n    return this.selectable ? this.selected.toString() : null;\n  }\n  /** The unstyled chip selector for this component. */\n  basicChipAttrName = 'mat-basic-chip-option';\n  /** Emitted when the chip is selected or deselected. */\n  selectionChange = new EventEmitter();\n  ngOnInit() {\n    super.ngOnInit();\n    this.role = 'presentation';\n  }\n  /** Selects the chip. */\n  select() {\n    this._setSelectedState(true, false, true);\n  }\n  /** Deselects the chip. */\n  deselect() {\n    this._setSelectedState(false, false, true);\n  }\n  /** Selects this chip and emits userInputSelection event */\n  selectViaInteraction() {\n    this._setSelectedState(true, true, true);\n  }\n  /** Toggles the current selected state of this chip. */\n  toggleSelected(isUserInput = false) {\n    this._setSelectedState(!this.selected, isUserInput, true);\n    return this.selected;\n  }\n  _handlePrimaryActionInteraction() {\n    if (!this.disabled) {\n      // Interacting with the primary action implies that the chip already has focus, however\n      // there's a bug in Safari where focus ends up lingering on the previous chip (see #27544).\n      // We work around it by explicitly focusing the primary action of the current chip.\n      this.focus();\n      if (this.selectable) {\n        this.toggleSelected(true);\n      }\n    }\n  }\n  _hasLeadingGraphic() {\n    if (this.leadingIcon) {\n      return true;\n    }\n    // The checkmark graphic communicates selected state for both single-select and multi-select.\n    // Include checkmark in single-select to fix a11y issue where selected state is communicated\n    // visually only using color (#25886).\n    return !this._chipListHideSingleSelectionIndicator || this._chipListMultiple;\n  }\n  _setSelectedState(isSelected, isUserInput, emitEvent) {\n    if (isSelected !== this.selected) {\n      this._selected = isSelected;\n      if (emitEvent) {\n        this.selectionChange.emit({\n          source: this,\n          isUserInput,\n          selected: this.selected\n        });\n      }\n      this._changeDetectorRef.markForCheck();\n    }\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatChipOption_BaseFactory;\n    return function MatChipOption_Factory(__ngFactoryType__) {\n      return (ɵMatChipOption_BaseFactory || (ɵMatChipOption_BaseFactory = i0.ɵɵgetInheritedFactory(MatChipOption)))(__ngFactoryType__ || MatChipOption);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatChipOption,\n    selectors: [[\"mat-basic-chip-option\"], [\"\", \"mat-basic-chip-option\", \"\"], [\"mat-chip-option\"], [\"\", \"mat-chip-option\", \"\"]],\n    hostAttrs: [1, \"mat-mdc-chip\", \"mat-mdc-chip-option\"],\n    hostVars: 37,\n    hostBindings: function MatChipOption_HostBindings(rf, ctx) {\n      if (rf & 2) {\n        i0.ɵɵdomProperty(\"id\", ctx.id);\n        i0.ɵɵattribute(\"tabindex\", null)(\"aria-label\", null)(\"aria-description\", null)(\"role\", ctx.role);\n        i0.ɵɵclassProp(\"mdc-evolution-chip\", !ctx._isBasicChip)(\"mdc-evolution-chip--filter\", !ctx._isBasicChip)(\"mdc-evolution-chip--selectable\", !ctx._isBasicChip)(\"mat-mdc-chip-selected\", ctx.selected)(\"mat-mdc-chip-multiple\", ctx._chipListMultiple)(\"mat-mdc-chip-disabled\", ctx.disabled)(\"mat-mdc-chip-with-avatar\", ctx.leadingIcon)(\"mdc-evolution-chip--disabled\", ctx.disabled)(\"mdc-evolution-chip--selected\", ctx.selected)(\"mdc-evolution-chip--selecting\", !ctx._animationsDisabled)(\"mdc-evolution-chip--with-trailing-action\", ctx._hasTrailingIcon())(\"mdc-evolution-chip--with-primary-icon\", ctx.leadingIcon)(\"mdc-evolution-chip--with-primary-graphic\", ctx._hasLeadingGraphic())(\"mdc-evolution-chip--with-avatar\", ctx.leadingIcon)(\"mat-mdc-chip-highlighted\", ctx.highlighted)(\"mat-mdc-chip-with-trailing-icon\", ctx._hasTrailingIcon());\n      }\n    },\n    inputs: {\n      selectable: [2, \"selectable\", \"selectable\", booleanAttribute],\n      selected: [2, \"selected\", \"selected\", booleanAttribute]\n    },\n    outputs: {\n      selectionChange: \"selectionChange\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MatChip,\n      useExisting: MatChipOption\n    }, {\n      provide: MAT_CHIP,\n      useExisting: MatChipOption\n    }]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c1,\n    decls: 8,\n    vars: 6,\n    consts: [[1, \"mat-mdc-chip-focus-overlay\"], [1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--primary\"], [\"matChipAction\", \"\", \"role\", \"option\", 3, \"_allowFocusWhenDisabled\"], [1, \"mdc-evolution-chip__graphic\", \"mat-mdc-chip-graphic\"], [1, \"mdc-evolution-chip__text-label\", \"mat-mdc-chip-action-label\"], [1, \"mat-mdc-chip-primary-focus-indicator\", \"mat-focus-indicator\"], [1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--trailing\"], [1, \"mdc-evolution-chip__checkmark\"], [\"viewBox\", \"-2 -3 30 30\", \"focusable\", \"false\", \"aria-hidden\", \"true\", 1, \"mdc-evolution-chip__checkmark-svg\"], [\"fill\", \"none\", \"stroke\", \"currentColor\", \"d\", \"M1.73,12.91 8.1,19.28 22.79,4.59\", 1, \"mdc-evolution-chip__checkmark-path\"]],\n    template: function MatChipOption_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c0);\n        i0.ɵɵelement(0, \"span\", 0);\n        i0.ɵɵelementStart(1, \"span\", 1)(2, \"button\", 2);\n        i0.ɵɵconditionalCreate(3, MatChipOption_Conditional_3_Template, 5, 0, \"span\", 3);\n        i0.ɵɵelementStart(4, \"span\", 4);\n        i0.ɵɵprojection(5);\n        i0.ɵɵelement(6, \"span\", 5);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵconditionalCreate(7, MatChipOption_Conditional_7_Template, 2, 0, \"span\", 6);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"_allowFocusWhenDisabled\", true);\n        i0.ɵɵattribute(\"aria-description\", ctx.ariaDescription)(\"aria-label\", ctx.ariaLabel)(\"aria-selected\", ctx.ariaSelected);\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(ctx._hasLeadingGraphic() ? 3 : -1);\n        i0.ɵɵadvance(4);\n        i0.ɵɵconditional(ctx._hasTrailingIcon() ? 7 : -1);\n      }\n    },\n    dependencies: [MatChipAction],\n    styles: [_c2],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipOption, [{\n    type: Component,\n    args: [{\n      selector: 'mat-basic-chip-option, [mat-basic-chip-option], mat-chip-option, [mat-chip-option]',\n      host: {\n        'class': 'mat-mdc-chip mat-mdc-chip-option',\n        '[class.mdc-evolution-chip]': '!_isBasicChip',\n        '[class.mdc-evolution-chip--filter]': '!_isBasicChip',\n        '[class.mdc-evolution-chip--selectable]': '!_isBasicChip',\n        '[class.mat-mdc-chip-selected]': 'selected',\n        '[class.mat-mdc-chip-multiple]': '_chipListMultiple',\n        '[class.mat-mdc-chip-disabled]': 'disabled',\n        '[class.mat-mdc-chip-with-avatar]': 'leadingIcon',\n        '[class.mdc-evolution-chip--disabled]': 'disabled',\n        '[class.mdc-evolution-chip--selected]': 'selected',\n        // This class enables the transition on the checkmark. Usually MDC adds it when selection\n        // starts and removes it once the animation is finished. We don't need to go through all\n        // the trouble, because we only care about the selection animation. MDC needs to do it,\n        // because they also have an exit animation that we don't care about.\n        '[class.mdc-evolution-chip--selecting]': '!_animationsDisabled',\n        '[class.mdc-evolution-chip--with-trailing-action]': '_hasTrailingIcon()',\n        '[class.mdc-evolution-chip--with-primary-icon]': 'leadingIcon',\n        '[class.mdc-evolution-chip--with-primary-graphic]': '_hasLeadingGraphic()',\n        '[class.mdc-evolution-chip--with-avatar]': 'leadingIcon',\n        '[class.mat-mdc-chip-highlighted]': 'highlighted',\n        '[class.mat-mdc-chip-with-trailing-icon]': '_hasTrailingIcon()',\n        '[attr.tabindex]': 'null',\n        '[attr.aria-label]': 'null',\n        '[attr.aria-description]': 'null',\n        '[attr.role]': 'role',\n        '[id]': 'id'\n      },\n      providers: [{\n        provide: MatChip,\n        useExisting: MatChipOption\n      }, {\n        provide: MAT_CHIP,\n        useExisting: MatChipOption\n      }],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      imports: [MatChipAction],\n      template: \"<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <button\\n    matChipAction\\n    [_allowFocusWhenDisabled]=\\\"true\\\"\\n    [attr.aria-description]=\\\"ariaDescription\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-selected]=\\\"ariaSelected\\\"\\n    role=\\\"option\\\">\\n    @if (_hasLeadingGraphic()) {\\n      <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n        <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n        <span class=\\\"mdc-evolution-chip__checkmark\\\">\\n          <svg\\n            class=\\\"mdc-evolution-chip__checkmark-svg\\\"\\n            viewBox=\\\"-2 -3 30 30\\\"\\n            focusable=\\\"false\\\"\\n            aria-hidden=\\\"true\\\">\\n            <path class=\\\"mdc-evolution-chip__checkmark-path\\\"\\n                  fill=\\\"none\\\" stroke=\\\"currentColor\\\" d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\" />\\n          </svg>\\n        </span>\\n      </span>\\n    }\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-focus-indicator\\\"></span>\\n    </span>\\n  </button>\\n</span>\\n\\n@if (_hasTrailingIcon()) {\\n  <span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\">\\n    <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n  </span>\\n}\\n\",\n      styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}@media(forced-colors: active){.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{forced-color-adjust:none}}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-outline-width, 1px);border-radius:var(--mat-chip-container-shape-radius, 8px);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-outline-color, var(--mat-sys-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mat-chip-focus-outline-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--secondary{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mat-chip-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-chip-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-chip-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mat-chip-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-chip-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-label-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mat-chip-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mat-chip-with-avatar-avatar-size, 24px);height:var(--mat-chip-with-avatar-avatar-size, 24px);font-size:var(--mat-chip-with-avatar-avatar-size, 24px)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__graphic{padding-left:0}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@media(forced-colors: active){.mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mat-mdc-standard-chip{border-radius:var(--mat-chip-container-shape-radius, 8px);height:var(--mat-chip-container-height, 32px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mat-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mat-chip-flat-disabled-selected-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}@media(forced-colors: active){.mat-mdc-standard-chip{outline:solid 1px}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mat-chip-with-avatar-avatar-shape-radius, 24px);width:var(--mat-chip-with-icon-icon-size, 18px);height:var(--mat-chip-with-icon-icon-size, 18px);font-size:var(--mat-chip-with-icon-icon-size, 18px)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-highlighted{--mat-chip-with-icon-icon-color: var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container));--mat-chip-elevated-container-color: var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container));--mat-chip-label-text-color: var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container));--mat-chip-outline-width: var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-hover-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-hover-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mat-chip-with-avatar-disabled-avatar-opacity, 0.38)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mat-chip-with-icon-disabled-icon-opacity, 0.38)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity, 1)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-edit,.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity, 1)}.mat-mdc-chip-edit:focus,.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity, 1)}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-edit:hover::after,.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-edit:focus::after,.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mat-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-edit::before,.mat-mdc-chip-remove::before{margin:calc(var(--mat-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}@media(forced-colors: active){.mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}}.mat-mdc-chip-action:focus .mat-focus-indicator::before{content:\\\"\\\"}.mdc-evolution-chip__icon,.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{min-height:fit-content}\\n\"]\n    }]\n  }], null, {\n    selectable: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    selected: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    selectionChange: [{\n      type: Output\n    }]\n  });\n})();\n\n/**\n * A directive that makes a span editable and exposes functions to modify and retrieve the\n * element's contents.\n */\nclass MatChipEditInput {\n  _elementRef = inject(ElementRef);\n  _document = inject(DOCUMENT);\n  constructor() {}\n  initialize(initialValue) {\n    this.getNativeElement().focus();\n    this.setValue(initialValue);\n  }\n  getNativeElement() {\n    return this._elementRef.nativeElement;\n  }\n  setValue(value) {\n    this.getNativeElement().textContent = value;\n    this._moveCursorToEndOfInput();\n  }\n  getValue() {\n    return this.getNativeElement().textContent || '';\n  }\n  _moveCursorToEndOfInput() {\n    const range = this._document.createRange();\n    range.selectNodeContents(this.getNativeElement());\n    range.collapse(false);\n    const sel = window.getSelection();\n    sel.removeAllRanges();\n    sel.addRange(range);\n  }\n  static ɵfac = function MatChipEditInput_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatChipEditInput)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatChipEditInput,\n    selectors: [[\"span\", \"matChipEditInput\", \"\"]],\n    hostAttrs: [\"role\", \"textbox\", \"tabindex\", \"-1\", \"contenteditable\", \"true\", 1, \"mat-chip-edit-input\"]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipEditInput, [{\n    type: Directive,\n    args: [{\n      selector: 'span[matChipEditInput]',\n      host: {\n        'class': 'mat-chip-edit-input',\n        'role': 'textbox',\n        'tabindex': '-1',\n        'contenteditable': 'true'\n      }\n    }]\n  }], () => [], null);\n})();\n\n/**\n * An extension of the MatChip component used with MatChipGrid and\n * the matChipInputFor directive.\n */\nclass MatChipRow extends MatChip {\n  basicChipAttrName = 'mat-basic-chip-row';\n  /**\n   * The editing action has to be triggered in a timeout. While we're waiting on it, a blur\n   * event might occur which will interrupt the editing. This flag is used to avoid interruptions\n   * while the editing action is being initialized.\n   */\n  _editStartPending = false;\n  editable = false;\n  /** Emitted when the chip is edited. */\n  edited = new EventEmitter();\n  /** The default chip edit input that is used if none is projected into this chip row. */\n  defaultEditInput;\n  /** The projected chip edit input. */\n  contentEditInput;\n  /**\n   * Set on a mousedown when the chip is already focused via mouse or keyboard.\n   *\n   * This allows us to ensure chip is already focused when deciding whether to enter the\n   * edit mode on a subsequent click. Otherwise, the chip appears focused when handling the\n   * first click event.\n   */\n  _alreadyFocused = false;\n  _isEditing = false;\n  constructor() {\n    super();\n    this.role = 'row';\n    this._onBlur.pipe(takeUntil(this.destroyed)).subscribe(() => {\n      if (this._isEditing && !this._editStartPending) {\n        this._onEditFinish();\n      }\n      this._alreadyFocused = false;\n    });\n  }\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    // Sets _alreadyFocused (ahead of click) when chip already has focus.\n    this._ngZone.runOutsideAngular(() => {\n      this._elementRef.nativeElement.addEventListener('mousedown', () => this._alreadyFocused = this._hasFocus());\n    });\n  }\n  _hasLeadingActionIcon() {\n    // The leading action (edit) icon is hidden while editing.\n    return !this._isEditing && !!this.editIcon;\n  }\n  _hasTrailingIcon() {\n    // The trailing icon is hidden while editing.\n    return !this._isEditing && super._hasTrailingIcon();\n  }\n  /** Sends focus to the first gridcell when the user clicks anywhere inside the chip. */\n  _handleFocus() {\n    if (!this._isEditing && !this.disabled) {\n      this.focus();\n    }\n  }\n  _handleKeydown(event) {\n    if (event.keyCode === ENTER && !this.disabled) {\n      if (this._isEditing) {\n        event.preventDefault();\n        this._onEditFinish();\n      } else if (this.editable) {\n        this._startEditing(event);\n      }\n    } else if (this._isEditing) {\n      // Stop the event from reaching the chip set in order to avoid navigating.\n      event.stopPropagation();\n    } else {\n      super._handleKeydown(event);\n    }\n  }\n  _handleClick(event) {\n    if (!this.disabled && this.editable && !this._isEditing && this._alreadyFocused) {\n      // Ensure click event not picked up unintentionally by other listeners, as\n      // once editing starts, the source element is detached from DOM.\n      event.preventDefault();\n      event.stopPropagation();\n      this._startEditing(event);\n    }\n  }\n  _handleDoubleclick(event) {\n    if (!this.disabled && this.editable) {\n      this._startEditing(event);\n    }\n  }\n  _edit() {\n    // markForCheck necessary for edit input to be rendered\n    this._changeDetectorRef.markForCheck();\n    this._startEditing();\n  }\n  _startEditing(event) {\n    if (!this.primaryAction || this.removeIcon && !!event && this._getSourceAction(event.target) === this.removeIcon) {\n      return;\n    }\n    // The value depends on the DOM so we need to extract it before we flip the flag.\n    const value = this.value;\n    this._isEditing = this._editStartPending = true;\n    // Defer initializing the input until after it has been added to the DOM.\n    afterNextRender(() => {\n      this._getEditInput().initialize(value);\n      // Necessary when using edit icon to prevent edit from aborting\n      setTimeout(() => this._ngZone.run(() => this._editStartPending = false));\n    }, {\n      injector: this._injector\n    });\n  }\n  _onEditFinish() {\n    this._isEditing = this._editStartPending = false;\n    this.edited.emit({\n      chip: this,\n      value: this._getEditInput().getValue()\n    });\n    // If the edit input is still focused or focus was returned to the body after it was destroyed,\n    // return focus to the chip contents.\n    if (this._document.activeElement === this._getEditInput().getNativeElement() || this._document.activeElement === this._document.body) {\n      this.primaryAction.focus();\n    }\n  }\n  _isRippleDisabled() {\n    return super._isRippleDisabled() || this._isEditing;\n  }\n  /**\n   * Gets the projected chip edit input, or the default input if none is projected in. One of these\n   * two values is guaranteed to be defined.\n   */\n  _getEditInput() {\n    return this.contentEditInput || this.defaultEditInput;\n  }\n  static ɵfac = function MatChipRow_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatChipRow)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatChipRow,\n    selectors: [[\"mat-chip-row\"], [\"\", \"mat-chip-row\", \"\"], [\"mat-basic-chip-row\"], [\"\", \"mat-basic-chip-row\", \"\"]],\n    contentQueries: function MatChipRow_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MatChipEditInput, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.contentEditInput = _t.first);\n      }\n    },\n    viewQuery: function MatChipRow_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatChipEditInput, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.defaultEditInput = _t.first);\n      }\n    },\n    hostAttrs: [1, \"mat-mdc-chip\", \"mat-mdc-chip-row\", \"mdc-evolution-chip\"],\n    hostVars: 29,\n    hostBindings: function MatChipRow_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"focus\", function MatChipRow_focus_HostBindingHandler() {\n          return ctx._handleFocus();\n        })(\"click\", function MatChipRow_click_HostBindingHandler($event) {\n          return ctx._handleClick($event);\n        })(\"dblclick\", function MatChipRow_dblclick_HostBindingHandler($event) {\n          return ctx._handleDoubleclick($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵdomProperty(\"id\", ctx.id);\n        i0.ɵɵattribute(\"tabindex\", ctx.disabled ? null : -1)(\"aria-label\", null)(\"aria-description\", null)(\"role\", ctx.role);\n        i0.ɵɵclassProp(\"mat-mdc-chip-with-avatar\", ctx.leadingIcon)(\"mat-mdc-chip-disabled\", ctx.disabled)(\"mat-mdc-chip-editing\", ctx._isEditing)(\"mat-mdc-chip-editable\", ctx.editable)(\"mdc-evolution-chip--disabled\", ctx.disabled)(\"mdc-evolution-chip--with-leading-action\", ctx._hasLeadingActionIcon())(\"mdc-evolution-chip--with-trailing-action\", ctx._hasTrailingIcon())(\"mdc-evolution-chip--with-primary-graphic\", ctx.leadingIcon)(\"mdc-evolution-chip--with-primary-icon\", ctx.leadingIcon)(\"mdc-evolution-chip--with-avatar\", ctx.leadingIcon)(\"mat-mdc-chip-highlighted\", ctx.highlighted)(\"mat-mdc-chip-with-trailing-icon\", ctx._hasTrailingIcon());\n      }\n    },\n    inputs: {\n      editable: \"editable\"\n    },\n    outputs: {\n      edited: \"edited\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MatChip,\n      useExisting: MatChipRow\n    }, {\n      provide: MAT_CHIP,\n      useExisting: MatChipRow\n    }]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c4,\n    decls: 9,\n    vars: 8,\n    consts: [[1, \"mat-mdc-chip-focus-overlay\"], [\"role\", \"gridcell\", 1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--leading\"], [\"role\", \"gridcell\", \"matChipAction\", \"\", 1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--primary\", 3, \"disabled\"], [1, \"mdc-evolution-chip__graphic\", \"mat-mdc-chip-graphic\"], [1, \"mdc-evolution-chip__text-label\", \"mat-mdc-chip-action-label\"], [\"aria-hidden\", \"true\", 1, \"mat-mdc-chip-primary-focus-indicator\", \"mat-focus-indicator\"], [\"role\", \"gridcell\", 1, \"mdc-evolution-chip__cell\", \"mdc-evolution-chip__cell--trailing\"], [\"matChipEditInput\", \"\"]],\n    template: function MatChipRow_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef(_c3);\n        i0.ɵɵconditionalCreate(0, MatChipRow_Conditional_0_Template, 1, 0, \"span\", 0);\n        i0.ɵɵconditionalCreate(1, MatChipRow_Conditional_1_Template, 2, 0, \"span\", 1);\n        i0.ɵɵelementStart(2, \"span\", 2);\n        i0.ɵɵconditionalCreate(3, MatChipRow_Conditional_3_Template, 2, 0, \"span\", 3);\n        i0.ɵɵelementStart(4, \"span\", 4);\n        i0.ɵɵconditionalCreate(5, MatChipRow_Conditional_5_Template, 2, 1)(6, MatChipRow_Conditional_6_Template, 1, 0);\n        i0.ɵɵelement(7, \"span\", 5);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵconditionalCreate(8, MatChipRow_Conditional_8_Template, 2, 0, \"span\", 6);\n      }\n      if (rf & 2) {\n        i0.ɵɵconditional(!ctx._isEditing ? 0 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(ctx._hasLeadingActionIcon() ? 1 : -1);\n        i0.ɵɵadvance();\n        i0.ɵɵproperty(\"disabled\", ctx.disabled);\n        i0.ɵɵattribute(\"aria-description\", ctx.ariaDescription)(\"aria-label\", ctx.ariaLabel);\n        i0.ɵɵadvance();\n        i0.ɵɵconditional(ctx.leadingIcon ? 3 : -1);\n        i0.ɵɵadvance(2);\n        i0.ɵɵconditional(ctx._isEditing ? 5 : 6);\n        i0.ɵɵadvance(3);\n        i0.ɵɵconditional(ctx._hasTrailingIcon() ? 8 : -1);\n      }\n    },\n    dependencies: [MatChipAction, MatChipEditInput],\n    styles: [_c2],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipRow, [{\n    type: Component,\n    args: [{\n      selector: 'mat-chip-row, [mat-chip-row], mat-basic-chip-row, [mat-basic-chip-row]',\n      host: {\n        'class': 'mat-mdc-chip mat-mdc-chip-row mdc-evolution-chip',\n        '[class.mat-mdc-chip-with-avatar]': 'leadingIcon',\n        '[class.mat-mdc-chip-disabled]': 'disabled',\n        '[class.mat-mdc-chip-editing]': '_isEditing',\n        '[class.mat-mdc-chip-editable]': 'editable',\n        '[class.mdc-evolution-chip--disabled]': 'disabled',\n        '[class.mdc-evolution-chip--with-leading-action]': '_hasLeadingActionIcon()',\n        '[class.mdc-evolution-chip--with-trailing-action]': '_hasTrailingIcon()',\n        '[class.mdc-evolution-chip--with-primary-graphic]': 'leadingIcon',\n        '[class.mdc-evolution-chip--with-primary-icon]': 'leadingIcon',\n        '[class.mdc-evolution-chip--with-avatar]': 'leadingIcon',\n        '[class.mat-mdc-chip-highlighted]': 'highlighted',\n        '[class.mat-mdc-chip-with-trailing-icon]': '_hasTrailingIcon()',\n        '[id]': 'id',\n        // Has to have a negative tabindex in order to capture\n        // focus and redirect it to the primary action.\n        '[attr.tabindex]': 'disabled ? null : -1',\n        '[attr.aria-label]': 'null',\n        '[attr.aria-description]': 'null',\n        '[attr.role]': 'role',\n        '(focus)': '_handleFocus()',\n        '(click)': '_handleClick($event)',\n        '(dblclick)': '_handleDoubleclick($event)'\n      },\n      providers: [{\n        provide: MatChip,\n        useExisting: MatChipRow\n      }, {\n        provide: MAT_CHIP,\n        useExisting: MatChipRow\n      }],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      imports: [MatChipAction, MatChipEditInput],\n      template: \"@if (!_isEditing) {\\n  <span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n}\\n\\n@if (_hasLeadingActionIcon()) {\\n  <span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--leading\\\" role=\\\"gridcell\\\">\\n    <ng-content select=\\\"[matChipEdit]\\\"></ng-content>\\n  </span>\\n}\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\" role=\\\"gridcell\\\"\\n    matChipAction\\n    [disabled]=\\\"disabled\\\"\\n    [attr.aria-description]=\\\"ariaDescription\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\">\\n  @if (leadingIcon) {\\n    <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n      <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n    </span>\\n  }\\n\\n  <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n    @if (_isEditing) {\\n      @if (contentEditInput) {\\n        <ng-content select=\\\"[matChipEditInput]\\\"></ng-content>\\n      } @else {\\n        <span matChipEditInput></span>\\n      }\\n    } @else {\\n      <ng-content></ng-content>\\n    }\\n\\n    <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-focus-indicator\\\" aria-hidden=\\\"true\\\"></span>\\n  </span>\\n</span>\\n\\n@if (_hasTrailingIcon()) {\\n  <span\\n    class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\"\\n    role=\\\"gridcell\\\">\\n    <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n  </span>\\n}\\n\",\n      styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}@media(forced-colors: active){.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{forced-color-adjust:none}}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-outline-width, 1px);border-radius:var(--mat-chip-container-shape-radius, 8px);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-outline-color, var(--mat-sys-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mat-chip-focus-outline-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--secondary{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mat-chip-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-chip-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-chip-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mat-chip-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-chip-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-label-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mat-chip-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mat-chip-with-avatar-avatar-size, 24px);height:var(--mat-chip-with-avatar-avatar-size, 24px);font-size:var(--mat-chip-with-avatar-avatar-size, 24px)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__graphic{padding-left:0}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@media(forced-colors: active){.mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mat-mdc-standard-chip{border-radius:var(--mat-chip-container-shape-radius, 8px);height:var(--mat-chip-container-height, 32px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mat-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mat-chip-flat-disabled-selected-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}@media(forced-colors: active){.mat-mdc-standard-chip{outline:solid 1px}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mat-chip-with-avatar-avatar-shape-radius, 24px);width:var(--mat-chip-with-icon-icon-size, 18px);height:var(--mat-chip-with-icon-icon-size, 18px);font-size:var(--mat-chip-with-icon-icon-size, 18px)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-highlighted{--mat-chip-with-icon-icon-color: var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container));--mat-chip-elevated-container-color: var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container));--mat-chip-label-text-color: var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container));--mat-chip-outline-width: var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-hover-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-hover-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mat-chip-with-avatar-disabled-avatar-opacity, 0.38)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mat-chip-with-icon-disabled-icon-opacity, 0.38)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity, 1)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-edit,.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity, 1)}.mat-mdc-chip-edit:focus,.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity, 1)}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-edit:hover::after,.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-edit:focus::after,.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mat-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-edit::before,.mat-mdc-chip-remove::before{margin:calc(var(--mat-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}@media(forced-colors: active){.mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}}.mat-mdc-chip-action:focus .mat-focus-indicator::before{content:\\\"\\\"}.mdc-evolution-chip__icon,.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{min-height:fit-content}\\n\"]\n    }]\n  }], () => [], {\n    editable: [{\n      type: Input\n    }],\n    edited: [{\n      type: Output\n    }],\n    defaultEditInput: [{\n      type: ViewChild,\n      args: [MatChipEditInput]\n    }],\n    contentEditInput: [{\n      type: ContentChild,\n      args: [MatChipEditInput]\n    }]\n  });\n})();\n\n/**\n * Basic container component for the MatChip component.\n *\n * Extended by MatChipListbox and MatChipGrid for different interaction patterns.\n */\nclass MatChipSet {\n  _elementRef = inject(ElementRef);\n  _changeDetectorRef = inject(ChangeDetectorRef);\n  _dir = inject(Directionality, {\n    optional: true\n  });\n  /** Index of the last destroyed chip that had focus. */\n  _lastDestroyedFocusedChipIndex = null;\n  /** Used to manage focus within the chip list. */\n  _keyManager;\n  /** Subject that emits when the component has been destroyed. */\n  _destroyed = new Subject();\n  /** Role to use if it hasn't been overwritten by the user. */\n  _defaultRole = 'presentation';\n  /** Combined stream of all of the child chips' focus events. */\n  get chipFocusChanges() {\n    return this._getChipStream(chip => chip._onFocus);\n  }\n  /** Combined stream of all of the child chips' destroy events. */\n  get chipDestroyedChanges() {\n    return this._getChipStream(chip => chip.destroyed);\n  }\n  /** Combined stream of all of the child chips' remove events. */\n  get chipRemovedChanges() {\n    return this._getChipStream(chip => chip.removed);\n  }\n  /** Whether the chip set is disabled. */\n  get disabled() {\n    return this._disabled;\n  }\n  set disabled(value) {\n    this._disabled = value;\n    this._syncChipsState();\n  }\n  _disabled = false;\n  /** Whether the chip list contains chips or not. */\n  get empty() {\n    return !this._chips || this._chips.length === 0;\n  }\n  /** The ARIA role applied to the chip set. */\n  get role() {\n    if (this._explicitRole) {\n      return this._explicitRole;\n    }\n    return this.empty ? null : this._defaultRole;\n  }\n  /** Tabindex of the chip set. */\n  tabIndex = 0;\n  set role(value) {\n    this._explicitRole = value;\n  }\n  _explicitRole = null;\n  /** Whether any of the chips inside of this chip-set has focus. */\n  get focused() {\n    return this._hasFocusedChip();\n  }\n  /** The chips that are part of this chip set. */\n  _chips;\n  /** Flat list of all the actions contained within the chips. */\n  _chipActions = new QueryList();\n  constructor() {}\n  ngAfterViewInit() {\n    this._setUpFocusManagement();\n    this._trackChipSetChanges();\n    this._trackDestroyedFocusedChip();\n  }\n  ngOnDestroy() {\n    this._keyManager?.destroy();\n    this._chipActions.destroy();\n    this._destroyed.next();\n    this._destroyed.complete();\n  }\n  /** Checks whether any of the chips is focused. */\n  _hasFocusedChip() {\n    return this._chips && this._chips.some(chip => chip._hasFocus());\n  }\n  /** Syncs the chip-set's state with the individual chips. */\n  _syncChipsState() {\n    this._chips?.forEach(chip => {\n      chip._chipListDisabled = this._disabled;\n      chip._changeDetectorRef.markForCheck();\n    });\n  }\n  /** Dummy method for subclasses to override. Base chip set cannot be focused. */\n  focus() {}\n  /** Handles keyboard events on the chip set. */\n  _handleKeydown(event) {\n    if (this._originatesFromChip(event)) {\n      this._keyManager.onKeydown(event);\n    }\n  }\n  /**\n   * Utility to ensure all indexes are valid.\n   *\n   * @param index The index to be checked.\n   * @returns True if the index is valid for our list of chips.\n   */\n  _isValidIndex(index) {\n    return index >= 0 && index < this._chips.length;\n  }\n  /**\n   * Removes the `tabindex` from the chip set and resets it back afterwards, allowing the\n   * user to tab out of it. This prevents the set from capturing focus and redirecting\n   * it back to the first chip, creating a focus trap, if it user tries to tab away.\n   */\n  _allowFocusEscape() {\n    const previous = this._elementRef.nativeElement.tabIndex;\n    if (previous !== -1) {\n      // Set the tabindex directly on the element, instead of going through\n      // the data binding, because we aren't guaranteed that change detection\n      // will run quickly enough to allow focus to escape.\n      this._elementRef.nativeElement.tabIndex = -1;\n      // Note that this needs to be a `setTimeout`, because a `Promise.resolve`\n      // doesn't allow enough time for the focus to escape.\n      setTimeout(() => this._elementRef.nativeElement.tabIndex = previous);\n    }\n  }\n  /**\n   * Gets a stream of events from all the chips within the set.\n   * The stream will automatically incorporate any newly-added chips.\n   */\n  _getChipStream(mappingFunction) {\n    return this._chips.changes.pipe(startWith(null), switchMap(() => merge(...this._chips.map(mappingFunction))));\n  }\n  /** Checks whether an event comes from inside a chip element. */\n  _originatesFromChip(event) {\n    let currentElement = event.target;\n    while (currentElement && currentElement !== this._elementRef.nativeElement) {\n      if (currentElement.classList.contains('mat-mdc-chip')) {\n        return true;\n      }\n      currentElement = currentElement.parentElement;\n    }\n    return false;\n  }\n  /** Sets up the chip set's focus management logic. */\n  _setUpFocusManagement() {\n    // Create a flat `QueryList` containing the actions of all of the chips.\n    // This allows us to navigate both within the chip and move to the next/previous\n    // one using the existing `ListKeyManager`.\n    this._chips.changes.pipe(startWith(this._chips)).subscribe(chips => {\n      const actions = [];\n      chips.forEach(chip => chip._getActions().forEach(action => actions.push(action)));\n      this._chipActions.reset(actions);\n      this._chipActions.notifyOnChanges();\n    });\n    this._keyManager = new FocusKeyManager(this._chipActions).withVerticalOrientation().withHorizontalOrientation(this._dir ? this._dir.value : 'ltr').withHomeAndEnd().skipPredicate(action => this._skipPredicate(action));\n    // Keep the manager active index in sync so that navigation picks\n    // up from the current chip if the user clicks into the list directly.\n    this.chipFocusChanges.pipe(takeUntil(this._destroyed)).subscribe(({\n      chip\n    }) => {\n      const action = chip._getSourceAction(document.activeElement);\n      if (action) {\n        this._keyManager.updateActiveItem(action);\n      }\n    });\n    this._dir?.change.pipe(takeUntil(this._destroyed)).subscribe(direction => this._keyManager.withHorizontalOrientation(direction));\n  }\n  /**\n   * Determines if key manager should avoid putting a given chip action in the tab index. Skip\n   * non-interactive and disabled actions since the user can't do anything with them.\n   */\n  _skipPredicate(action) {\n    // Skip chips that the user cannot interact with. `mat-chip-set` does not permit focusing disabled\n    // chips.\n    return !action.isInteractive || action.disabled;\n  }\n  /** Listens to changes in the chip set and syncs up the state of the individual chips. */\n  _trackChipSetChanges() {\n    this._chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n      if (this.disabled) {\n        // Since this happens after the content has been\n        // checked, we need to defer it to the next tick.\n        Promise.resolve().then(() => this._syncChipsState());\n      }\n      this._redirectDestroyedChipFocus();\n    });\n  }\n  /** Starts tracking the destroyed chips in order to capture the focused one. */\n  _trackDestroyedFocusedChip() {\n    this.chipDestroyedChanges.pipe(takeUntil(this._destroyed)).subscribe(event => {\n      // If the focused chip is destroyed, save its index so that we can move focus to the next\n      // chip. We only save the index here, rather than move the focus immediately, because we want\n      // to wait until the chip is removed from the chip list before focusing the next one. This\n      // allows us to keep focus on the same index if the chip gets swapped out.\n      const chipArray = this._chips.toArray();\n      const chipIndex = chipArray.indexOf(event.chip);\n      const hasFocus = event.chip._hasFocus();\n      const wasLastFocused = event.chip._hadFocusOnRemove && this._keyManager.activeItem && event.chip._getActions().includes(this._keyManager.activeItem);\n      // Note that depending on the timing, the chip might've already lost focus by the\n      // time we check this. We need the `wasLastFocused` as a fallback to detect such cases.\n      // In `wasLastFocused` we also need to ensure that the chip actually had focus when it was\n      // deleted so that we don't steal away the user's focus after they've moved on from the chip.\n      const shouldMoveFocus = hasFocus || wasLastFocused;\n      if (this._isValidIndex(chipIndex) && shouldMoveFocus) {\n        this._lastDestroyedFocusedChipIndex = chipIndex;\n      }\n    });\n  }\n  /**\n   * Finds the next appropriate chip to move focus to,\n   * if the currently-focused chip is destroyed.\n   */\n  _redirectDestroyedChipFocus() {\n    if (this._lastDestroyedFocusedChipIndex == null) {\n      return;\n    }\n    if (this._chips.length) {\n      const newIndex = Math.min(this._lastDestroyedFocusedChipIndex, this._chips.length - 1);\n      const chipToFocus = this._chips.toArray()[newIndex];\n      if (chipToFocus.disabled) {\n        // If we're down to one disabled chip, move focus back to the set.\n        if (this._chips.length === 1) {\n          this.focus();\n        } else {\n          this._keyManager.setPreviousItemActive();\n        }\n      } else {\n        chipToFocus.focus();\n      }\n    } else {\n      this.focus();\n    }\n    this._lastDestroyedFocusedChipIndex = null;\n  }\n  static ɵfac = function MatChipSet_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatChipSet)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatChipSet,\n    selectors: [[\"mat-chip-set\"]],\n    contentQueries: function MatChipSet_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MatChip, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._chips = _t);\n      }\n    },\n    hostAttrs: [1, \"mat-mdc-chip-set\", \"mdc-evolution-chip-set\"],\n    hostVars: 1,\n    hostBindings: function MatChipSet_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown\", function MatChipSet_keydown_HostBindingHandler($event) {\n          return ctx._handleKeydown($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"role\", ctx.role);\n      }\n    },\n    inputs: {\n      disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n      role: \"role\",\n      tabIndex: [2, \"tabIndex\", \"tabIndex\", value => value == null ? 0 : numberAttribute(value)]\n    },\n    ngContentSelectors: _c5,\n    decls: 2,\n    vars: 0,\n    consts: [[\"role\", \"presentation\", 1, \"mdc-evolution-chip-set__chips\"]],\n    template: function MatChipSet_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵdomElementStart(0, \"div\", 0);\n        i0.ɵɵprojection(1);\n        i0.ɵɵdomElementEnd();\n      }\n    },\n    styles: [\".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-moz-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-webkit-input-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input:-ms-input-placeholder{opacity:1}.mat-mdc-chip-set+input.mat-mdc-chip-input{margin-left:0;margin-right:0}\\n\"],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipSet, [{\n    type: Component,\n    args: [{\n      selector: 'mat-chip-set',\n      template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `,\n      host: {\n        'class': 'mat-mdc-chip-set mdc-evolution-chip-set',\n        '(keydown)': '_handleKeydown($event)',\n        '[attr.role]': 'role'\n      },\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-moz-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-webkit-input-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input:-ms-input-placeholder{opacity:1}.mat-mdc-chip-set+input.mat-mdc-chip-input{margin-left:0;margin-right:0}\\n\"]\n    }]\n  }], () => [], {\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    role: [{\n      type: Input\n    }],\n    tabIndex: [{\n      type: Input,\n      args: [{\n        transform: value => value == null ? 0 : numberAttribute(value)\n      }]\n    }],\n    _chips: [{\n      type: ContentChildren,\n      args: [MatChip, {\n        // We need to use `descendants: true`, because Ivy will no longer match\n        // indirect descendants if it's left as false.\n        descendants: true\n      }]\n    }]\n  });\n})();\n\n/** Change event object that is emitted when the chip listbox value has changed. */\nclass MatChipListboxChange {\n  source;\n  value;\n  constructor(/** Chip listbox that emitted the event. */\n  source, /** Value of the chip listbox when the event was emitted. */\n  value) {\n    this.source = source;\n    this.value = value;\n  }\n}\n/**\n * Provider Expression that allows mat-chip-listbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nconst MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR = {\n  provide: NG_VALUE_ACCESSOR,\n  useExisting: forwardRef(() => MatChipListbox),\n  multi: true\n};\n/**\n * An extension of the MatChipSet component that supports chip selection.\n * Used with MatChipOption chips.\n */\nclass MatChipListbox extends MatChipSet {\n  /**\n   * Function when touched. Set as part of ControlValueAccessor implementation.\n   * @docs-private\n   */\n  _onTouched = () => {};\n  /**\n   * Function when changed. Set as part of ControlValueAccessor implementation.\n   * @docs-private\n   */\n  _onChange = () => {};\n  // TODO: MDC uses `grid` here\n  _defaultRole = 'listbox';\n  /** Default chip options. */\n  _defaultOptions = inject(MAT_CHIPS_DEFAULT_OPTIONS, {\n    optional: true\n  });\n  /** Whether the user should be allowed to select multiple chips. */\n  get multiple() {\n    return this._multiple;\n  }\n  set multiple(value) {\n    this._multiple = value;\n    this._syncListboxProperties();\n  }\n  _multiple = false;\n  /** The array of selected chips inside the chip listbox. */\n  get selected() {\n    const selectedChips = this._chips.toArray().filter(chip => chip.selected);\n    return this.multiple ? selectedChips : selectedChips[0];\n  }\n  /** Orientation of the chip list. */\n  ariaOrientation = 'horizontal';\n  /**\n   * Whether or not this chip listbox is selectable.\n   *\n   * When a chip listbox is not selectable, the selected states for all\n   * the chips inside the chip listbox are always ignored.\n   */\n  get selectable() {\n    return this._selectable;\n  }\n  set selectable(value) {\n    this._selectable = value;\n    this._syncListboxProperties();\n  }\n  _selectable = true;\n  /**\n   * A function to compare the option values with the selected values. The first argument\n   * is a value from an option. The second is a value from the selection. A boolean\n   * should be returned.\n   */\n  compareWith = (o1, o2) => o1 === o2;\n  /** Whether this chip listbox is required. */\n  required = false;\n  /** Whether checkmark indicator for single-selection options is hidden. */\n  get hideSingleSelectionIndicator() {\n    return this._hideSingleSelectionIndicator;\n  }\n  set hideSingleSelectionIndicator(value) {\n    this._hideSingleSelectionIndicator = value;\n    this._syncListboxProperties();\n  }\n  _hideSingleSelectionIndicator = this._defaultOptions?.hideSingleSelectionIndicator ?? false;\n  /** Combined stream of all of the child chips' selection change events. */\n  get chipSelectionChanges() {\n    return this._getChipStream(chip => chip.selectionChange);\n  }\n  /** Combined stream of all of the child chips' blur events. */\n  get chipBlurChanges() {\n    return this._getChipStream(chip => chip._onBlur);\n  }\n  /** The value of the listbox, which is the combined value of the selected chips. */\n  get value() {\n    return this._value;\n  }\n  set value(value) {\n    if (this._chips && this._chips.length) {\n      this._setSelectionByValue(value, false);\n    }\n    this._value = value;\n  }\n  _value;\n  /** Event emitted when the selected chip listbox value has been changed by the user. */\n  change = new EventEmitter();\n  _chips = undefined;\n  ngAfterContentInit() {\n    this._chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n      if (this.value !== undefined) {\n        Promise.resolve().then(() => {\n          this._setSelectionByValue(this.value, false);\n        });\n      }\n      // Update listbox selectable/multiple properties on chips\n      this._syncListboxProperties();\n    });\n    this.chipBlurChanges.pipe(takeUntil(this._destroyed)).subscribe(() => this._blur());\n    this.chipSelectionChanges.pipe(takeUntil(this._destroyed)).subscribe(event => {\n      if (!this.multiple) {\n        this._chips.forEach(chip => {\n          if (chip !== event.source) {\n            chip._setSelectedState(false, false, false);\n          }\n        });\n      }\n      if (event.isUserInput) {\n        this._propagateChanges();\n      }\n    });\n  }\n  /**\n   * Focuses the first selected chip in this chip listbox, or the first non-disabled chip when there\n   * are no selected chips.\n   */\n  focus() {\n    if (this.disabled) {\n      return;\n    }\n    const firstSelectedChip = this._getFirstSelectedChip();\n    if (firstSelectedChip && !firstSelectedChip.disabled) {\n      firstSelectedChip.focus();\n    } else if (this._chips.length > 0) {\n      this._keyManager.setFirstItemActive();\n    } else {\n      this._elementRef.nativeElement.focus();\n    }\n  }\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n  writeValue(value) {\n    if (value != null) {\n      this.value = value;\n    } else {\n      this.value = undefined;\n    }\n  }\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n  registerOnChange(fn) {\n    this._onChange = fn;\n  }\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n  registerOnTouched(fn) {\n    this._onTouched = fn;\n  }\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n  }\n  /** Selects all chips with value. */\n  _setSelectionByValue(value, isUserInput = true) {\n    this._clearSelection();\n    if (Array.isArray(value)) {\n      value.forEach(currentValue => this._selectValue(currentValue, isUserInput));\n    } else {\n      this._selectValue(value, isUserInput);\n    }\n  }\n  /** When blurred, marks the field as touched when focus moved outside the chip listbox. */\n  _blur() {\n    if (!this.disabled) {\n      // Wait to see if focus moves to an individual chip.\n      setTimeout(() => {\n        if (!this.focused) {\n          this._markAsTouched();\n        }\n      });\n    }\n  }\n  _keydown(event) {\n    if (event.keyCode === TAB) {\n      super._allowFocusEscape();\n    }\n  }\n  /** Marks the field as touched */\n  _markAsTouched() {\n    this._onTouched();\n    this._changeDetectorRef.markForCheck();\n  }\n  /** Emits change event to set the model value. */\n  _propagateChanges() {\n    let valueToEmit = null;\n    if (Array.isArray(this.selected)) {\n      valueToEmit = this.selected.map(chip => chip.value);\n    } else {\n      valueToEmit = this.selected ? this.selected.value : undefined;\n    }\n    this._value = valueToEmit;\n    this.change.emit(new MatChipListboxChange(this, valueToEmit));\n    this._onChange(valueToEmit);\n    this._changeDetectorRef.markForCheck();\n  }\n  /**\n   * Deselects every chip in the listbox.\n   * @param skip Chip that should not be deselected.\n   */\n  _clearSelection(skip) {\n    this._chips.forEach(chip => {\n      if (chip !== skip) {\n        chip.deselect();\n      }\n    });\n  }\n  /**\n   * Finds and selects the chip based on its value.\n   * @returns Chip that has the corresponding value.\n   */\n  _selectValue(value, isUserInput) {\n    const correspondingChip = this._chips.find(chip => {\n      return chip.value != null && this.compareWith(chip.value, value);\n    });\n    if (correspondingChip) {\n      isUserInput ? correspondingChip.selectViaInteraction() : correspondingChip.select();\n    }\n    return correspondingChip;\n  }\n  /** Syncs the chip-listbox selection state with the individual chips. */\n  _syncListboxProperties() {\n    if (this._chips) {\n      // Defer setting the value in order to avoid the \"Expression\n      // has changed after it was checked\" errors from Angular.\n      Promise.resolve().then(() => {\n        this._chips.forEach(chip => {\n          chip._chipListMultiple = this.multiple;\n          chip.chipListSelectable = this._selectable;\n          chip._chipListHideSingleSelectionIndicator = this.hideSingleSelectionIndicator;\n          chip._changeDetectorRef.markForCheck();\n        });\n      });\n    }\n  }\n  /** Returns the first selected chip in this listbox, or undefined if no chips are selected. */\n  _getFirstSelectedChip() {\n    if (Array.isArray(this.selected)) {\n      return this.selected.length ? this.selected[0] : undefined;\n    } else {\n      return this.selected;\n    }\n  }\n  /**\n   * Determines if key manager should avoid putting a given chip action in the tab index. Skip\n   * non-interactive actions since the user can't do anything with them.\n   */\n  _skipPredicate(action) {\n    // Override the skip predicate in the base class to avoid skipping disabled chips. Allow\n    // disabled chip options to receive focus to align with WAI ARIA recommendation. Normally WAI\n    // ARIA's instructions are to exclude disabled items from the tab order, but it makes a few\n    // exceptions for compound widgets.\n    //\n    // From [Developing a Keyboard Interface](\n    // https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/):\n    //   \"For the following composite widget elements, keep them focusable when disabled: Options in a\n    //   Listbox...\"\n    return !action.isInteractive;\n  }\n  static ɵfac = /* @__PURE__ */(() => {\n    let ɵMatChipListbox_BaseFactory;\n    return function MatChipListbox_Factory(__ngFactoryType__) {\n      return (ɵMatChipListbox_BaseFactory || (ɵMatChipListbox_BaseFactory = i0.ɵɵgetInheritedFactory(MatChipListbox)))(__ngFactoryType__ || MatChipListbox);\n    };\n  })();\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatChipListbox,\n    selectors: [[\"mat-chip-listbox\"]],\n    contentQueries: function MatChipListbox_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MatChipOption, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._chips = _t);\n      }\n    },\n    hostAttrs: [1, \"mdc-evolution-chip-set\", \"mat-mdc-chip-listbox\"],\n    hostVars: 10,\n    hostBindings: function MatChipListbox_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"focus\", function MatChipListbox_focus_HostBindingHandler() {\n          return ctx.focus();\n        })(\"blur\", function MatChipListbox_blur_HostBindingHandler() {\n          return ctx._blur();\n        })(\"keydown\", function MatChipListbox_keydown_HostBindingHandler($event) {\n          return ctx._keydown($event);\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵdomProperty(\"tabIndex\", ctx.disabled || ctx.empty ? -1 : ctx.tabIndex);\n        i0.ɵɵattribute(\"role\", ctx.role)(\"aria-required\", ctx.role ? ctx.required : null)(\"aria-disabled\", ctx.disabled.toString())(\"aria-multiselectable\", ctx.multiple)(\"aria-orientation\", ctx.ariaOrientation);\n        i0.ɵɵclassProp(\"mat-mdc-chip-list-disabled\", ctx.disabled)(\"mat-mdc-chip-list-required\", ctx.required);\n      }\n    },\n    inputs: {\n      multiple: [2, \"multiple\", \"multiple\", booleanAttribute],\n      ariaOrientation: [0, \"aria-orientation\", \"ariaOrientation\"],\n      selectable: [2, \"selectable\", \"selectable\", booleanAttribute],\n      compareWith: \"compareWith\",\n      required: [2, \"required\", \"required\", booleanAttribute],\n      hideSingleSelectionIndicator: [2, \"hideSingleSelectionIndicator\", \"hideSingleSelectionIndicator\", booleanAttribute],\n      value: \"value\"\n    },\n    outputs: {\n      change: \"change\"\n    },\n    features: [i0.ɵɵProvidersFeature([MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c5,\n    decls: 2,\n    vars: 0,\n    consts: [[\"role\", \"presentation\", 1, \"mdc-evolution-chip-set__chips\"]],\n    template: function MatChipListbox_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵdomElementStart(0, \"div\", 0);\n        i0.ɵɵprojection(1);\n        i0.ɵɵdomElementEnd();\n      }\n    },\n    styles: [_c6],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipListbox, [{\n    type: Component,\n    args: [{\n      selector: 'mat-chip-listbox',\n      template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `,\n      host: {\n        'class': 'mdc-evolution-chip-set mat-mdc-chip-listbox',\n        '[attr.role]': 'role',\n        '[tabIndex]': '(disabled || empty) ? -1 : tabIndex',\n        '[attr.aria-required]': 'role ? required : null',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.aria-multiselectable]': 'multiple',\n        '[attr.aria-orientation]': 'ariaOrientation',\n        '[class.mat-mdc-chip-list-disabled]': 'disabled',\n        '[class.mat-mdc-chip-list-required]': 'required',\n        '(focus)': 'focus()',\n        '(blur)': '_blur()',\n        '(keydown)': '_keydown($event)'\n      },\n      providers: [MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-moz-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-webkit-input-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input:-ms-input-placeholder{opacity:1}.mat-mdc-chip-set+input.mat-mdc-chip-input{margin-left:0;margin-right:0}\\n\"]\n    }]\n  }], null, {\n    multiple: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    ariaOrientation: [{\n      type: Input,\n      args: ['aria-orientation']\n    }],\n    selectable: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    compareWith: [{\n      type: Input\n    }],\n    required: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    hideSingleSelectionIndicator: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    value: [{\n      type: Input\n    }],\n    change: [{\n      type: Output\n    }],\n    _chips: [{\n      type: ContentChildren,\n      args: [MatChipOption, {\n        // We need to use `descendants: true`, because Ivy will no longer match\n        // indirect descendants if it's left as false.\n        descendants: true\n      }]\n    }]\n  });\n})();\n\n/** Change event object that is emitted when the chip grid value has changed. */\nclass MatChipGridChange {\n  source;\n  value;\n  constructor(/** Chip grid that emitted the event. */\n  source, /** Value of the chip grid when the event was emitted. */\n  value) {\n    this.source = source;\n    this.value = value;\n  }\n}\n/**\n * An extension of the MatChipSet component used with MatChipRow chips and\n * the matChipInputFor directive.\n */\nclass MatChipGrid extends MatChipSet {\n  ngControl = inject(NgControl, {\n    optional: true,\n    self: true\n  });\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  controlType = 'mat-chip-grid';\n  /** The chip input to add more chips */\n  _chipInput;\n  _defaultRole = 'grid';\n  _errorStateTracker;\n  /**\n   * List of element ids to propagate to the chipInput's aria-describedby attribute.\n   */\n  _ariaDescribedbyIds = [];\n  /**\n   * Function when touched. Set as part of ControlValueAccessor implementation.\n   * @docs-private\n   */\n  _onTouched = () => {};\n  /**\n   * Function when changed. Set as part of ControlValueAccessor implementation.\n   * @docs-private\n   */\n  _onChange = () => {};\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get disabled() {\n    return this.ngControl ? !!this.ngControl.disabled : this._disabled;\n  }\n  set disabled(value) {\n    this._disabled = value;\n    this._syncChipsState();\n    this.stateChanges.next();\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get id() {\n    return this._chipInput.id;\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get empty() {\n    return (!this._chipInput || this._chipInput.empty) && (!this._chips || this._chips.length === 0);\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get placeholder() {\n    return this._chipInput ? this._chipInput.placeholder : this._placeholder;\n  }\n  set placeholder(value) {\n    this._placeholder = value;\n    this.stateChanges.next();\n  }\n  _placeholder;\n  /** Whether any chips or the matChipInput inside of this chip-grid has focus. */\n  get focused() {\n    return this._chipInput.focused || this._hasFocusedChip();\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get required() {\n    return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n  }\n  set required(value) {\n    this._required = value;\n    this.stateChanges.next();\n  }\n  _required;\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get shouldLabelFloat() {\n    return !this.empty || this.focused;\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get value() {\n    return this._value;\n  }\n  set value(value) {\n    this._value = value;\n  }\n  _value = [];\n  /** An object used to control when error messages are shown. */\n  get errorStateMatcher() {\n    return this._errorStateTracker.matcher;\n  }\n  set errorStateMatcher(value) {\n    this._errorStateTracker.matcher = value;\n  }\n  /** Combined stream of all of the child chips' blur events. */\n  get chipBlurChanges() {\n    return this._getChipStream(chip => chip._onBlur);\n  }\n  /** Emits when the chip grid value has been changed by the user. */\n  change = new EventEmitter();\n  /**\n   * Emits whenever the raw value of the chip-grid changes. This is here primarily\n   * to facilitate the two-way binding for the `value` input.\n   * @docs-private\n   */\n  valueChange = new EventEmitter();\n  _chips = undefined;\n  /**\n   * Emits whenever the component state changes and should cause the parent\n   * form-field to update. Implemented as part of `MatFormFieldControl`.\n   * @docs-private\n   */\n  stateChanges = new Subject();\n  /** Whether the chip grid is in an error state. */\n  get errorState() {\n    return this._errorStateTracker.errorState;\n  }\n  set errorState(value) {\n    this._errorStateTracker.errorState = value;\n  }\n  constructor() {\n    super();\n    const parentForm = inject(NgForm, {\n      optional: true\n    });\n    const parentFormGroup = inject(FormGroupDirective, {\n      optional: true\n    });\n    const defaultErrorStateMatcher = inject(ErrorStateMatcher);\n    if (this.ngControl) {\n      this.ngControl.valueAccessor = this;\n    }\n    this._errorStateTracker = new _ErrorStateTracker(defaultErrorStateMatcher, this.ngControl, parentFormGroup, parentForm, this.stateChanges);\n  }\n  ngAfterContentInit() {\n    this.chipBlurChanges.pipe(takeUntil(this._destroyed)).subscribe(() => {\n      this._blur();\n      this.stateChanges.next();\n    });\n    merge(this.chipFocusChanges, this._chips.changes).pipe(takeUntil(this._destroyed)).subscribe(() => this.stateChanges.next());\n  }\n  ngAfterViewInit() {\n    super.ngAfterViewInit();\n    if (!this._chipInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n      throw Error('mat-chip-grid must be used in combination with matChipInputFor.');\n    }\n  }\n  ngDoCheck() {\n    if (this.ngControl) {\n      // We need to re-evaluate this on every change detection cycle, because there are some\n      // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n      // that whatever logic is in here has to be super lean or we risk destroying the performance.\n      this.updateErrorState();\n    }\n  }\n  ngOnDestroy() {\n    super.ngOnDestroy();\n    this.stateChanges.complete();\n  }\n  /** Associates an HTML input element with this chip grid. */\n  registerInput(inputElement) {\n    this._chipInput = inputElement;\n    this._chipInput.setDescribedByIds(this._ariaDescribedbyIds);\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  onContainerClick(event) {\n    if (!this.disabled && !this._originatesFromChip(event)) {\n      this.focus();\n    }\n  }\n  /**\n   * Focuses the first chip in this chip grid, or the associated input when there\n   * are no eligible chips.\n   */\n  focus() {\n    if (this.disabled || this._chipInput.focused) {\n      return;\n    }\n    if (!this._chips.length || this._chips.first.disabled) {\n      // Delay until the next tick, because this can cause a \"changed after checked\"\n      // error if the input does something on focus (e.g. opens an autocomplete).\n      Promise.resolve().then(() => this._chipInput.focus());\n    } else {\n      const activeItem = this._keyManager.activeItem;\n      if (activeItem) {\n        activeItem.focus();\n      } else {\n        this._keyManager.setFirstItemActive();\n      }\n    }\n    this.stateChanges.next();\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  get describedByIds() {\n    return this._chipInput?.describedByIds || [];\n  }\n  /**\n   * Implemented as part of MatFormFieldControl.\n   * @docs-private\n   */\n  setDescribedByIds(ids) {\n    // We must keep this up to date to handle the case where ids are set\n    // before the chip input is registered.\n    this._ariaDescribedbyIds = ids;\n    this._chipInput?.setDescribedByIds(ids);\n  }\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n  writeValue(value) {\n    // The user is responsible for creating the child chips, so we just store the value.\n    this._value = value;\n  }\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n  registerOnChange(fn) {\n    this._onChange = fn;\n  }\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n  registerOnTouched(fn) {\n    this._onTouched = fn;\n  }\n  /**\n   * Implemented as part of ControlValueAccessor.\n   * @docs-private\n   */\n  setDisabledState(isDisabled) {\n    this.disabled = isDisabled;\n    this.stateChanges.next();\n  }\n  /** Refreshes the error state of the chip grid. */\n  updateErrorState() {\n    this._errorStateTracker.updateErrorState();\n  }\n  /** When blurred, mark the field as touched when focus moved outside the chip grid. */\n  _blur() {\n    if (!this.disabled) {\n      // Check whether the focus moved to chip input.\n      // If the focus is not moved to chip input, mark the field as touched. If the focus moved\n      // to chip input, do nothing.\n      // Timeout is needed to wait for the focus() event trigger on chip input.\n      setTimeout(() => {\n        if (!this.focused) {\n          this._propagateChanges();\n          this._markAsTouched();\n        }\n      });\n    }\n  }\n  /**\n   * Removes the `tabindex` from the chip grid and resets it back afterwards, allowing the\n   * user to tab out of it. This prevents the grid from capturing focus and redirecting\n   * it back to the first chip, creating a focus trap, if it user tries to tab away.\n   */\n  _allowFocusEscape() {\n    if (!this._chipInput.focused) {\n      super._allowFocusEscape();\n    }\n  }\n  /** Handles custom keyboard events. */\n  _handleKeydown(event) {\n    const keyCode = event.keyCode;\n    const activeItem = this._keyManager.activeItem;\n    if (keyCode === TAB) {\n      if (this._chipInput.focused && hasModifierKey(event, 'shiftKey') && this._chips.length && !this._chips.last.disabled) {\n        event.preventDefault();\n        if (activeItem) {\n          this._keyManager.setActiveItem(activeItem);\n        } else {\n          this._focusLastChip();\n        }\n      } else {\n        // Use the super method here since it doesn't check for the input\n        // focused state. This allows focus to escape if there's only one\n        // disabled chip left in the list.\n        super._allowFocusEscape();\n      }\n    } else if (!this._chipInput.focused) {\n      // The up and down arrows are supposed to navigate between the individual rows in the grid.\n      // We do this by filtering the actions down to the ones that have the same `_isPrimary`\n      // flag as the active action and moving focus between them ourseles instead of delegating\n      // to the key manager. For more information, see #29359 and:\n      // https://www.w3.org/WAI/ARIA/apg/patterns/grid/examples/layout-grids/#ex2_label\n      if ((keyCode === UP_ARROW || keyCode === DOWN_ARROW) && activeItem) {\n        const eligibleActions = this._chipActions.filter(action => action._isPrimary === activeItem._isPrimary && !this._skipPredicate(action));\n        const currentIndex = eligibleActions.indexOf(activeItem);\n        const delta = event.keyCode === UP_ARROW ? -1 : 1;\n        event.preventDefault();\n        if (currentIndex > -1 && this._isValidIndex(currentIndex + delta)) {\n          this._keyManager.setActiveItem(eligibleActions[currentIndex + delta]);\n        }\n      } else {\n        super._handleKeydown(event);\n      }\n    }\n    this.stateChanges.next();\n  }\n  _focusLastChip() {\n    if (this._chips.length) {\n      this._chips.last.focus();\n    }\n  }\n  /** Emits change event to set the model value. */\n  _propagateChanges() {\n    const valueToEmit = this._chips.length ? this._chips.toArray().map(chip => chip.value) : [];\n    this._value = valueToEmit;\n    this.change.emit(new MatChipGridChange(this, valueToEmit));\n    this.valueChange.emit(valueToEmit);\n    this._onChange(valueToEmit);\n    this._changeDetectorRef.markForCheck();\n  }\n  /** Mark the field as touched */\n  _markAsTouched() {\n    this._onTouched();\n    this._changeDetectorRef.markForCheck();\n    this.stateChanges.next();\n  }\n  static ɵfac = function MatChipGrid_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatChipGrid)();\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: MatChipGrid,\n    selectors: [[\"mat-chip-grid\"]],\n    contentQueries: function MatChipGrid_ContentQueries(rf, ctx, dirIndex) {\n      if (rf & 1) {\n        i0.ɵɵcontentQuery(dirIndex, MatChipRow, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx._chips = _t);\n      }\n    },\n    hostAttrs: [1, \"mat-mdc-chip-set\", \"mat-mdc-chip-grid\", \"mdc-evolution-chip-set\"],\n    hostVars: 10,\n    hostBindings: function MatChipGrid_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"focus\", function MatChipGrid_focus_HostBindingHandler() {\n          return ctx.focus();\n        })(\"blur\", function MatChipGrid_blur_HostBindingHandler() {\n          return ctx._blur();\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵattribute(\"role\", ctx.role)(\"tabindex\", ctx.disabled || ctx._chips && ctx._chips.length === 0 ? -1 : ctx.tabIndex)(\"aria-disabled\", ctx.disabled.toString())(\"aria-invalid\", ctx.errorState);\n        i0.ɵɵclassProp(\"mat-mdc-chip-list-disabled\", ctx.disabled)(\"mat-mdc-chip-list-invalid\", ctx.errorState)(\"mat-mdc-chip-list-required\", ctx.required);\n      }\n    },\n    inputs: {\n      disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n      placeholder: \"placeholder\",\n      required: [2, \"required\", \"required\", booleanAttribute],\n      value: \"value\",\n      errorStateMatcher: \"errorStateMatcher\"\n    },\n    outputs: {\n      change: \"change\",\n      valueChange: \"valueChange\"\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: MatFormFieldControl,\n      useExisting: MatChipGrid\n    }]), i0.ɵɵInheritDefinitionFeature],\n    ngContentSelectors: _c5,\n    decls: 2,\n    vars: 0,\n    consts: [[\"role\", \"presentation\", 1, \"mdc-evolution-chip-set__chips\"]],\n    template: function MatChipGrid_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵdomElementStart(0, \"div\", 0);\n        i0.ɵɵprojection(1);\n        i0.ɵɵdomElementEnd();\n      }\n    },\n    styles: [_c6],\n    encapsulation: 2,\n    changeDetection: 0\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipGrid, [{\n    type: Component,\n    args: [{\n      selector: 'mat-chip-grid',\n      template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `,\n      host: {\n        'class': 'mat-mdc-chip-set mat-mdc-chip-grid mdc-evolution-chip-set',\n        '[attr.role]': 'role',\n        '[attr.tabindex]': '(disabled || (_chips && _chips.length === 0)) ? -1 : tabIndex',\n        '[attr.aria-disabled]': 'disabled.toString()',\n        '[attr.aria-invalid]': 'errorState',\n        '[class.mat-mdc-chip-list-disabled]': 'disabled',\n        '[class.mat-mdc-chip-list-invalid]': 'errorState',\n        '[class.mat-mdc-chip-list-required]': 'required',\n        '(focus)': 'focus()',\n        '(blur)': '_blur()'\n      },\n      providers: [{\n        provide: MatFormFieldControl,\n        useExisting: MatChipGrid\n      }],\n      encapsulation: ViewEncapsulation.None,\n      changeDetection: ChangeDetectionStrategy.OnPush,\n      styles: [\".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-moz-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-webkit-input-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input:-ms-input-placeholder{opacity:1}.mat-mdc-chip-set+input.mat-mdc-chip-input{margin-left:0;margin-right:0}\\n\"]\n    }]\n  }], () => [], {\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    required: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    value: [{\n      type: Input\n    }],\n    errorStateMatcher: [{\n      type: Input\n    }],\n    change: [{\n      type: Output\n    }],\n    valueChange: [{\n      type: Output\n    }],\n    _chips: [{\n      type: ContentChildren,\n      args: [MatChipRow, {\n        // We need to use `descendants: true`, because Ivy will no longer match\n        // indirect descendants if it's left as false.\n        descendants: true\n      }]\n    }]\n  });\n})();\n\n/**\n * Directive that adds chip-specific behaviors to an input element inside `<mat-form-field>`.\n * May be placed inside or outside of a `<mat-chip-grid>`.\n */\nclass MatChipInput {\n  _elementRef = inject(ElementRef);\n  /** Whether the control is focused. */\n  focused = false;\n  /** Register input for chip list */\n  get chipGrid() {\n    return this._chipGrid;\n  }\n  set chipGrid(value) {\n    if (value) {\n      this._chipGrid = value;\n      this._chipGrid.registerInput(this);\n    }\n  }\n  _chipGrid;\n  /**\n   * Whether or not the chipEnd event will be emitted when the input is blurred.\n   */\n  addOnBlur = false;\n  /**\n   * The list of key codes that will trigger a chipEnd event.\n   *\n   * Defaults to `[ENTER]`.\n   */\n  separatorKeyCodes;\n  /** Emitted when a chip is to be added. */\n  chipEnd = new EventEmitter();\n  /** The input's placeholder text. */\n  placeholder = '';\n  /** Unique id for the input. */\n  id = inject(_IdGenerator).getId('mat-mdc-chip-list-input-');\n  /** Whether the input is disabled. */\n  get disabled() {\n    return this._disabled || this._chipGrid && this._chipGrid.disabled;\n  }\n  set disabled(value) {\n    this._disabled = value;\n  }\n  _disabled = false;\n  /** Whether the input is readonly. */\n  readonly = false;\n  /** Whether the input should remain interactive when it is disabled. */\n  disabledInteractive;\n  /** Whether the input is empty. */\n  get empty() {\n    return !this.inputElement.value;\n  }\n  /** The native input element to which this directive is attached. */\n  inputElement;\n  constructor() {\n    const defaultOptions = inject(MAT_CHIPS_DEFAULT_OPTIONS);\n    const formField = inject(MAT_FORM_FIELD, {\n      optional: true\n    });\n    this.inputElement = this._elementRef.nativeElement;\n    this.separatorKeyCodes = defaultOptions.separatorKeyCodes;\n    this.disabledInteractive = defaultOptions.inputDisabledInteractive ?? false;\n    if (formField) {\n      this.inputElement.classList.add('mat-mdc-form-field-input-control');\n    }\n  }\n  ngOnChanges() {\n    this._chipGrid.stateChanges.next();\n  }\n  ngOnDestroy() {\n    this.chipEnd.complete();\n  }\n  /** Utility method to make host definition/tests more clear. */\n  _keydown(event) {\n    if (this.empty && event.keyCode === BACKSPACE) {\n      // Ignore events where the user is holding down backspace\n      // so that we don't accidentally remove too many chips.\n      if (!event.repeat) {\n        this._chipGrid._focusLastChip();\n      }\n      event.preventDefault();\n    } else {\n      this._emitChipEnd(event);\n    }\n  }\n  /** Checks to see if the blur should emit the (chipEnd) event. */\n  _blur() {\n    if (this.addOnBlur) {\n      this._emitChipEnd();\n    }\n    this.focused = false;\n    // Blur the chip list if it is not focused\n    if (!this._chipGrid.focused) {\n      this._chipGrid._blur();\n    }\n    this._chipGrid.stateChanges.next();\n  }\n  _focus() {\n    this.focused = true;\n    this._chipGrid.stateChanges.next();\n  }\n  /** Checks to see if the (chipEnd) event needs to be emitted. */\n  _emitChipEnd(event) {\n    if (!event || this._isSeparatorKey(event) && !event.repeat) {\n      this.chipEnd.emit({\n        input: this.inputElement,\n        value: this.inputElement.value,\n        chipInput: this\n      });\n      event?.preventDefault();\n    }\n  }\n  _onInput() {\n    // Let chip list know whenever the value changes.\n    this._chipGrid.stateChanges.next();\n  }\n  /** Focuses the input. */\n  focus() {\n    this.inputElement.focus();\n  }\n  /** Clears the input */\n  clear() {\n    this.inputElement.value = '';\n  }\n  /**\n   * Implemented as part of MatChipTextControl.\n   * @docs-private\n   */\n  get describedByIds() {\n    const element = this._elementRef.nativeElement;\n    const existingDescribedBy = element.getAttribute('aria-describedby');\n    return existingDescribedBy?.split(' ') || [];\n  }\n  setDescribedByIds(ids) {\n    const element = this._elementRef.nativeElement;\n    // Set the value directly in the DOM since this binding\n    // is prone to \"changed after checked\" errors.\n    if (ids.length) {\n      element.setAttribute('aria-describedby', ids.join(' '));\n    } else {\n      element.removeAttribute('aria-describedby');\n    }\n  }\n  /** Checks whether a keycode is one of the configured separators. */\n  _isSeparatorKey(event) {\n    return !hasModifierKey(event) && new Set(this.separatorKeyCodes).has(event.keyCode);\n  }\n  /** Gets the value to set on the `readonly` attribute. */\n  _getReadonlyAttribute() {\n    return this.readonly || this.disabled && this.disabledInteractive ? 'true' : null;\n  }\n  static ɵfac = function MatChipInput_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatChipInput)();\n  };\n  static ɵdir = /* @__PURE__ */i0.ɵɵdefineDirective({\n    type: MatChipInput,\n    selectors: [[\"input\", \"matChipInputFor\", \"\"]],\n    hostAttrs: [1, \"mat-mdc-chip-input\", \"mat-mdc-input-element\", \"mdc-text-field__input\", \"mat-input-element\"],\n    hostVars: 8,\n    hostBindings: function MatChipInput_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"keydown\", function MatChipInput_keydown_HostBindingHandler($event) {\n          return ctx._keydown($event);\n        })(\"blur\", function MatChipInput_blur_HostBindingHandler() {\n          return ctx._blur();\n        })(\"focus\", function MatChipInput_focus_HostBindingHandler() {\n          return ctx._focus();\n        })(\"input\", function MatChipInput_input_HostBindingHandler() {\n          return ctx._onInput();\n        });\n      }\n      if (rf & 2) {\n        i0.ɵɵdomProperty(\"id\", ctx.id);\n        i0.ɵɵattribute(\"disabled\", ctx.disabled && !ctx.disabledInteractive ? \"\" : null)(\"placeholder\", ctx.placeholder || null)(\"aria-invalid\", ctx._chipGrid && ctx._chipGrid.ngControl ? ctx._chipGrid.ngControl.invalid : null)(\"aria-required\", ctx._chipGrid && ctx._chipGrid.required || null)(\"aria-disabled\", ctx.disabled && ctx.disabledInteractive ? \"true\" : null)(\"readonly\", ctx._getReadonlyAttribute())(\"required\", ctx._chipGrid && ctx._chipGrid.required || null);\n      }\n    },\n    inputs: {\n      chipGrid: [0, \"matChipInputFor\", \"chipGrid\"],\n      addOnBlur: [2, \"matChipInputAddOnBlur\", \"addOnBlur\", booleanAttribute],\n      separatorKeyCodes: [0, \"matChipInputSeparatorKeyCodes\", \"separatorKeyCodes\"],\n      placeholder: \"placeholder\",\n      id: \"id\",\n      disabled: [2, \"disabled\", \"disabled\", booleanAttribute],\n      readonly: [2, \"readonly\", \"readonly\", booleanAttribute],\n      disabledInteractive: [2, \"matChipInputDisabledInteractive\", \"disabledInteractive\", booleanAttribute]\n    },\n    outputs: {\n      chipEnd: \"matChipInputTokenEnd\"\n    },\n    exportAs: [\"matChipInput\", \"matChipInputFor\"],\n    features: [i0.ɵɵNgOnChangesFeature]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipInput, [{\n    type: Directive,\n    args: [{\n      selector: 'input[matChipInputFor]',\n      exportAs: 'matChipInput, matChipInputFor',\n      host: {\n        // TODO: eventually we should remove `mat-input-element` from here since it comes from the\n        // non-MDC version of the input. It's currently being kept for backwards compatibility, because\n        // the MDC chips were landed initially with it.\n        'class': 'mat-mdc-chip-input mat-mdc-input-element mdc-text-field__input mat-input-element',\n        '(keydown)': '_keydown($event)',\n        '(blur)': '_blur()',\n        '(focus)': '_focus()',\n        '(input)': '_onInput()',\n        '[id]': 'id',\n        '[attr.disabled]': 'disabled && !disabledInteractive ? \"\" : null',\n        '[attr.placeholder]': 'placeholder || null',\n        '[attr.aria-invalid]': '_chipGrid && _chipGrid.ngControl ? _chipGrid.ngControl.invalid : null',\n        '[attr.aria-required]': '_chipGrid && _chipGrid.required || null',\n        '[attr.aria-disabled]': 'disabled && disabledInteractive ? \"true\" : null',\n        '[attr.readonly]': '_getReadonlyAttribute()',\n        '[attr.required]': '_chipGrid && _chipGrid.required || null'\n      }\n    }]\n  }], () => [], {\n    chipGrid: [{\n      type: Input,\n      args: ['matChipInputFor']\n    }],\n    addOnBlur: [{\n      type: Input,\n      args: [{\n        alias: 'matChipInputAddOnBlur',\n        transform: booleanAttribute\n      }]\n    }],\n    separatorKeyCodes: [{\n      type: Input,\n      args: ['matChipInputSeparatorKeyCodes']\n    }],\n    chipEnd: [{\n      type: Output,\n      args: ['matChipInputTokenEnd']\n    }],\n    placeholder: [{\n      type: Input\n    }],\n    id: [{\n      type: Input\n    }],\n    disabled: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    readonly: [{\n      type: Input,\n      args: [{\n        transform: booleanAttribute\n      }]\n    }],\n    disabledInteractive: [{\n      type: Input,\n      args: [{\n        alias: 'matChipInputDisabledInteractive',\n        transform: booleanAttribute\n      }]\n    }]\n  });\n})();\nconst CHIP_DECLARATIONS = [MatChip, MatChipAvatar, MatChipEdit, MatChipEditInput, MatChipGrid, MatChipInput, MatChipListbox, MatChipOption, MatChipRemove, MatChipRow, MatChipSet, MatChipTrailingIcon];\nclass MatChipsModule {\n  static ɵfac = function MatChipsModule_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || MatChipsModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: MatChipsModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [ErrorStateMatcher, {\n      provide: MAT_CHIPS_DEFAULT_OPTIONS,\n      useValue: {\n        separatorKeyCodes: [ENTER]\n      }\n    }],\n    imports: [MatCommonModule, MatRippleModule, MatCommonModule]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(MatChipsModule, [{\n    type: NgModule,\n    args: [{\n      imports: [MatCommonModule, MatRippleModule, MatChipAction, CHIP_DECLARATIONS],\n      exports: [MatCommonModule, CHIP_DECLARATIONS],\n      providers: [ErrorStateMatcher, {\n        provide: MAT_CHIPS_DEFAULT_OPTIONS,\n        useValue: {\n          separatorKeyCodes: [ENTER]\n        }\n      }]\n    }]\n  }], null, null);\n})();\nexport { MAT_CHIP, MAT_CHIPS_DEFAULT_OPTIONS, MAT_CHIP_AVATAR, MAT_CHIP_EDIT, MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR, MAT_CHIP_REMOVE, MAT_CHIP_TRAILING_ICON, MatChip, MatChipAvatar, MatChipEdit, MatChipEditInput, MatChipGrid, MatChipGridChange, MatChipInput, MatChipListbox, MatChipListboxChange, MatChipOption, MatChipRemove, MatChipRow, MatChipSelectionChange, MatChipSet, MatChipTrailingIcon, MatChipsModule };","map":{"version":3,"names":["FocusMonitor","_IdGenerator","FocusKeyManager","ENTER","SPACE","BACKSPACE","DELETE","TAB","hasModifierKey","UP_ARROW","DOWN_ARROW","_CdkPrivateStyleLoader","_VisuallyHiddenLoader","i0","InjectionToken","inject","ElementRef","booleanAttribute","numberAttribute","Directive","Input","ChangeDetectorRef","HOST_TAG_NAME","NgZone","DOCUMENT","EventEmitter","Injector","Component","ViewEncapsulation","ChangeDetectionStrategy","ContentChildren","Output","ContentChild","ViewChild","afterNextRender","QueryList","forwardRef","NgModule","Subject","merge","_StructuralStylesLoader","MAT_RIPPLE_GLOBAL_OPTIONS","_animationsDisabled","MatRippleLoader","takeUntil","startWith","switchMap","Directionality","NG_VALUE_ACCESSOR","NgControl","Validators","NgForm","FormGroupDirective","ErrorStateMatcher","_ErrorStateTracker","MatFormFieldControl","MAT_FORM_FIELD","MatCommonModule","MatRippleModule","_c0","_c1","MatChip_Conditional_3_Template","rf","ctx","ɵɵelementStart","ɵɵprojection","ɵɵelementEnd","MatChip_Conditional_7_Template","MatChipOption_Conditional_3_Template","ɵɵnamespaceSVG","ɵɵelement","MatChipOption_Conditional_7_Template","_c2","_c3","_c4","MatChipRow_Conditional_0_Template","MatChipRow_Conditional_1_Template","MatChipRow_Conditional_3_Template","MatChipRow_Conditional_5_Conditional_0_Template","MatChipRow_Conditional_5_Conditional_1_Template","MatChipRow_Conditional_5_Template","ɵɵconditionalCreate","ctx_r0","ɵɵnextContext","ɵɵconditional","contentEditInput","MatChipRow_Conditional_6_Template","MatChipRow_Conditional_8_Template","_c5","_c6","MAT_CHIPS_DEFAULT_OPTIONS","providedIn","factory","separatorKeyCodes","MAT_CHIP_AVATAR","MAT_CHIP_TRAILING_ICON","MAT_CHIP_EDIT","MAT_CHIP_REMOVE","MAT_CHIP","MatChipAction","_elementRef","_parentChip","isInteractive","_isPrimary","_isLeading","disabled","_disabled","value","tabIndex","_allowFocusWhenDisabled","_getDisabledAttribute","_getTabindex","toString","constructor","load","nativeElement","nodeName","setAttribute","focus","_handleClick","event","preventDefault","_handlePrimaryActionInteraction","_handleKeydown","keyCode","_isEditing","ɵfac","MatChipAction_Factory","__ngFactoryType__","ɵdir","ɵɵdefineDirective","type","selectors","hostAttrs","hostVars","hostBindings","MatChipAction_HostBindings","ɵɵlistener","MatChipAction_click_HostBindingHandler","$event","MatChipAction_keydown_HostBindingHandler","ɵɵattribute","ɵɵclassProp","inputs","ngDevMode","ɵsetClassMetadata","args","selector","host","transform","MatChipAvatar","MatChipAvatar_Factory","features","ɵɵProvidersFeature","provide","useExisting","providers","MatChipTrailingIcon","ɵMatChipTrailingIcon_BaseFactory","MatChipTrailingIcon_Factory","ɵɵgetInheritedFactory","ɵɵInheritDefinitionFeature","MatChipEdit","stopPropagation","_edit","ɵMatChipEdit_BaseFactory","MatChipEdit_Factory","MatChipEdit_HostBindings","MatChipRemove","remove","ɵMatChipRemove_BaseFactory","MatChipRemove_Factory","MatChipRemove_HostBindings","MatChip","_changeDetectorRef","_tagName","_ngZone","_focusMonitor","_globalRippleOptions","optional","_document","_onFocus","_onBlur","_isBasicChip","role","_hasFocusInternal","_pendingFocus","_actionChanges","_allLeadingIcons","_allTrailingIcons","_allEditIcons","_allRemoveIcons","_hasFocus","id","getId","ariaLabel","ariaDescription","_chipListDisabled","_hadFocusOnRemove","_textElement","_value","undefined","textContent","trim","color","removable","highlighted","disableRipple","removed","destroyed","basicChipAttrName","leadingIcon","editIcon","trailingIcon","removeIcon","primaryAction","_rippleLoader","_injector","styleLoader","_monitorFocus","configureRipple","className","_isRippleDisabled","ngOnInit","hasAttribute","toLowerCase","ngAfterViewInit","querySelector","ngAfterContentInit","changes","subscribe","markForCheck","ngDoCheck","setDisabled","ngOnDestroy","stopMonitoring","destroyRipple","unsubscribe","emit","chip","complete","_hasInteractiveActions","_hasTrailingIcon","repeat","_getSourceAction","target","_getActions","find","action","element","contains","result","push","some","a","monitor","origin","hasFocus","next","setTimeout","run","MatChip_Factory","ɵcmp","ɵɵdefineComponent","contentQueries","MatChip_ContentQueries","dirIndex","ɵɵcontentQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","viewQuery","MatChip_Query","ɵɵviewQuery","MatChip_HostBindings","MatChip_keydown_HostBindingHandler","ɵɵdomProperty","ɵɵclassMap","outputs","exportAs","ngContentSelectors","decls","vars","consts","template","MatChip_Template","ɵɵprojectionDef","ɵɵadvance","ɵɵproperty","dependencies","styles","encapsulation","changeDetection","None","OnPush","imports","descendants","MatChipSelectionChange","source","selected","isUserInput","MatChipOption","_defaultOptions","chipListSelectable","_chipListMultiple","_chipListHideSingleSelectionIndicator","hideSingleSelectionIndicator","selectable","_selectable","_selected","_setSelectedState","ariaSelected","selectionChange","select","deselect","selectViaInteraction","toggleSelected","_hasLeadingGraphic","isSelected","emitEvent","ɵMatChipOption_BaseFactory","MatChipOption_Factory","MatChipOption_HostBindings","MatChipOption_Template","MatChipEditInput","initialize","initialValue","getNativeElement","setValue","_moveCursorToEndOfInput","getValue","range","createRange","selectNodeContents","collapse","sel","window","getSelection","removeAllRanges","addRange","MatChipEditInput_Factory","MatChipRow","_editStartPending","editable","edited","defaultEditInput","_alreadyFocused","pipe","_onEditFinish","runOutsideAngular","addEventListener","_hasLeadingActionIcon","_handleFocus","_startEditing","_handleDoubleclick","_getEditInput","injector","activeElement","body","MatChipRow_Factory","MatChipRow_ContentQueries","MatChipRow_Query","MatChipRow_HostBindings","MatChipRow_focus_HostBindingHandler","MatChipRow_click_HostBindingHandler","MatChipRow_dblclick_HostBindingHandler","MatChipRow_Template","MatChipSet","_dir","_lastDestroyedFocusedChipIndex","_keyManager","_destroyed","_defaultRole","chipFocusChanges","_getChipStream","chipDestroyedChanges","chipRemovedChanges","_syncChipsState","empty","_chips","length","_explicitRole","focused","_hasFocusedChip","_chipActions","_setUpFocusManagement","_trackChipSetChanges","_trackDestroyedFocusedChip","destroy","forEach","_originatesFromChip","onKeydown","_isValidIndex","index","_allowFocusEscape","previous","mappingFunction","map","currentElement","classList","parentElement","chips","actions","reset","notifyOnChanges","withVerticalOrientation","withHorizontalOrientation","withHomeAndEnd","skipPredicate","_skipPredicate","document","updateActiveItem","change","direction","Promise","resolve","then","_redirectDestroyedChipFocus","chipArray","toArray","chipIndex","indexOf","wasLastFocused","activeItem","includes","shouldMoveFocus","newIndex","Math","min","chipToFocus","setPreviousItemActive","MatChipSet_Factory","MatChipSet_ContentQueries","MatChipSet_HostBindings","MatChipSet_keydown_HostBindingHandler","MatChipSet_Template","ɵɵdomElementStart","ɵɵdomElementEnd","MatChipListboxChange","MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR","MatChipListbox","multi","_onTouched","_onChange","multiple","_multiple","_syncListboxProperties","selectedChips","filter","ariaOrientation","compareWith","o1","o2","required","_hideSingleSelectionIndicator","chipSelectionChanges","chipBlurChanges","_setSelectionByValue","_blur","_propagateChanges","firstSelectedChip","_getFirstSelectedChip","setFirstItemActive","writeValue","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","_clearSelection","Array","isArray","currentValue","_selectValue","_markAsTouched","_keydown","valueToEmit","skip","correspondingChip","ɵMatChipListbox_BaseFactory","MatChipListbox_Factory","MatChipListbox_ContentQueries","MatChipListbox_HostBindings","MatChipListbox_focus_HostBindingHandler","MatChipListbox_blur_HostBindingHandler","MatChipListbox_keydown_HostBindingHandler","MatChipListbox_Template","MatChipGridChange","MatChipGrid","ngControl","self","controlType","_chipInput","_errorStateTracker","_ariaDescribedbyIds","stateChanges","placeholder","_placeholder","_required","control","hasValidator","shouldLabelFloat","errorStateMatcher","matcher","valueChange","errorState","parentForm","parentFormGroup","defaultErrorStateMatcher","valueAccessor","Error","updateErrorState","registerInput","inputElement","setDescribedByIds","onContainerClick","describedByIds","ids","last","setActiveItem","_focusLastChip","eligibleActions","currentIndex","delta","MatChipGrid_Factory","MatChipGrid_ContentQueries","MatChipGrid_HostBindings","MatChipGrid_focus_HostBindingHandler","MatChipGrid_blur_HostBindingHandler","MatChipGrid_Template","MatChipInput","chipGrid","_chipGrid","addOnBlur","chipEnd","readonly","disabledInteractive","defaultOptions","formField","inputDisabledInteractive","add","ngOnChanges","_emitChipEnd","_focus","_isSeparatorKey","input","chipInput","_onInput","clear","existingDescribedBy","getAttribute","split","join","removeAttribute","Set","has","_getReadonlyAttribute","MatChipInput_Factory","MatChipInput_HostBindings","MatChipInput_keydown_HostBindingHandler","MatChipInput_blur_HostBindingHandler","MatChipInput_focus_HostBindingHandler","MatChipInput_input_HostBindingHandler","invalid","ɵɵNgOnChangesFeature","alias","CHIP_DECLARATIONS","MatChipsModule","MatChipsModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","useValue","exports"],"sources":["/home/danilo/Área de trabalho/formsync-nx/apps/front/node_modules/@angular/material/fesm2022/chips.mjs"],"sourcesContent":["import { FocusMonitor, _IdGenerator, FocusKeyManager } from '@angular/cdk/a11y';\nimport { ENTER, SPACE, BACKSPACE, DELETE, TAB, hasModifierKey, UP_ARROW, DOWN_ARROW } from '@angular/cdk/keycodes';\nimport { _CdkPrivateStyleLoader, _VisuallyHiddenLoader } from '@angular/cdk/private';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, inject, ElementRef, booleanAttribute, numberAttribute, Directive, Input, ChangeDetectorRef, HOST_TAG_NAME, NgZone, DOCUMENT, EventEmitter, Injector, Component, ViewEncapsulation, ChangeDetectionStrategy, ContentChildren, Output, ContentChild, ViewChild, afterNextRender, QueryList, forwardRef, NgModule } from '@angular/core';\nimport { Subject, merge } from 'rxjs';\nimport { _StructuralStylesLoader } from './structural-styles.mjs';\nimport { MAT_RIPPLE_GLOBAL_OPTIONS } from './ripple.mjs';\nimport { _animationsDisabled } from './animation.mjs';\nimport { MatRippleLoader } from './ripple-loader.mjs';\nimport { takeUntil, startWith, switchMap } from 'rxjs/operators';\nimport { Directionality } from '@angular/cdk/bidi';\nimport { NG_VALUE_ACCESSOR, NgControl, Validators, NgForm, FormGroupDirective } from '@angular/forms';\nimport { ErrorStateMatcher } from './error-options.mjs';\nimport { _ErrorStateTracker } from './error-state.mjs';\nimport { MatFormFieldControl, MAT_FORM_FIELD } from './form-field2.mjs';\nimport { MatCommonModule } from './common-module.mjs';\nimport { MatRippleModule } from './ripple-module.mjs';\nimport '@angular/cdk/platform';\nimport '@angular/cdk/coercion';\nimport '@angular/cdk/layout';\nimport '@angular/common';\nimport '@angular/cdk/observers/private';\n\n/** Injection token to be used to override the default options for the chips module. */\nconst MAT_CHIPS_DEFAULT_OPTIONS = new InjectionToken('mat-chips-default-options', {\n    providedIn: 'root',\n    factory: () => ({\n        separatorKeyCodes: [ENTER],\n    }),\n});\n/**\n * Injection token that can be used to reference instances of `MatChipAvatar`. It serves as\n * alternative token to the actual `MatChipAvatar` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_AVATAR = new InjectionToken('MatChipAvatar');\n/**\n * Injection token that can be used to reference instances of `MatChipTrailingIcon`. It serves as\n * alternative token to the actual `MatChipTrailingIcon` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_TRAILING_ICON = new InjectionToken('MatChipTrailingIcon');\n/**\n * Injection token that can be used to reference instances of `MatChipEdit`. It serves as\n * alternative token to the actual `MatChipEdit` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_EDIT = new InjectionToken('MatChipEdit');\n/**\n * Injection token that can be used to reference instances of `MatChipRemove`. It serves as\n * alternative token to the actual `MatChipRemove` class which could cause unnecessary\n * retention of the class and its directive metadata.\n */\nconst MAT_CHIP_REMOVE = new InjectionToken('MatChipRemove');\n/**\n * Injection token used to avoid a circular dependency between the `MatChip` and `MatChipAction`.\n */\nconst MAT_CHIP = new InjectionToken('MatChip');\n\n/**\n * Section within a chip.\n * @docs-private\n */\nclass MatChipAction {\n    _elementRef = inject(ElementRef);\n    _parentChip = inject(MAT_CHIP);\n    /** Whether the action is interactive. */\n    isInteractive = true;\n    /** Whether this is the primary action in the chip. */\n    _isPrimary = true;\n    /** Whether this is the leading action in the chip. */\n    _isLeading = false; // TODO(adolgachev): consolidate usage to secondary css class\n    /** Whether the action is disabled. */\n    get disabled() {\n        return this._disabled || this._parentChip?.disabled || false;\n    }\n    set disabled(value) {\n        this._disabled = value;\n    }\n    _disabled = false;\n    /** Tab index of the action. */\n    tabIndex = -1;\n    /**\n     * Private API to allow focusing this chip when it is disabled.\n     */\n    _allowFocusWhenDisabled = false;\n    /**\n     * Determine the value of the disabled attribute for this chip action.\n     */\n    _getDisabledAttribute() {\n        // When this chip action is disabled and focusing disabled chips is not permitted, return empty\n        // string to indicate that disabled attribute should be included.\n        return this.disabled && !this._allowFocusWhenDisabled ? '' : null;\n    }\n    /**\n     * Determine the value of the tabindex attribute for this chip action.\n     */\n    _getTabindex() {\n        return (this.disabled && !this._allowFocusWhenDisabled) || !this.isInteractive\n            ? null\n            : this.tabIndex.toString();\n    }\n    constructor() {\n        inject(_CdkPrivateStyleLoader).load(_StructuralStylesLoader);\n        if (this._elementRef.nativeElement.nodeName === 'BUTTON') {\n            this._elementRef.nativeElement.setAttribute('type', 'button');\n        }\n    }\n    focus() {\n        this._elementRef.nativeElement.focus();\n    }\n    _handleClick(event) {\n        if (!this.disabled && this.isInteractive && this._isPrimary) {\n            event.preventDefault();\n            this._parentChip._handlePrimaryActionInteraction();\n        }\n    }\n    _handleKeydown(event) {\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) &&\n            !this.disabled &&\n            this.isInteractive &&\n            this._isPrimary &&\n            !this._parentChip._isEditing) {\n            event.preventDefault();\n            this._parentChip._handlePrimaryActionInteraction();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipAction, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"20.2.0-rc.1\", type: MatChipAction, isStandalone: true, selector: \"[matChipAction]\", inputs: { isInteractive: \"isInteractive\", disabled: [\"disabled\", \"disabled\", booleanAttribute], tabIndex: [\"tabIndex\", \"tabIndex\", (value) => (value == null ? -1 : numberAttribute(value))], _allowFocusWhenDisabled: \"_allowFocusWhenDisabled\" }, host: { listeners: { \"click\": \"_handleClick($event)\", \"keydown\": \"_handleKeydown($event)\" }, properties: { \"class.mdc-evolution-chip__action--primary\": \"_isPrimary\", \"class.mdc-evolution-chip__action--presentational\": \"!isInteractive\", \"class.mdc-evolution-chip__action--secondary\": \"!_isPrimary\", \"class.mdc-evolution-chip__action--trailing\": \"!_isPrimary && !_isLeading\", \"attr.tabindex\": \"_getTabindex()\", \"attr.disabled\": \"_getDisabledAttribute()\", \"attr.aria-disabled\": \"disabled\" }, classAttribute: \"mdc-evolution-chip__action mat-mdc-chip-action\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipAction, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matChipAction]',\n                    host: {\n                        'class': 'mdc-evolution-chip__action mat-mdc-chip-action',\n                        '[class.mdc-evolution-chip__action--primary]': '_isPrimary',\n                        '[class.mdc-evolution-chip__action--presentational]': '!isInteractive',\n                        '[class.mdc-evolution-chip__action--secondary]': '!_isPrimary',\n                        '[class.mdc-evolution-chip__action--trailing]': '!_isPrimary && !_isLeading',\n                        '[attr.tabindex]': '_getTabindex()',\n                        '[attr.disabled]': '_getDisabledAttribute()',\n                        '[attr.aria-disabled]': 'disabled',\n                        '(click)': '_handleClick($event)',\n                        '(keydown)': '_handleKeydown($event)',\n                    },\n                }]\n        }], ctorParameters: () => [], propDecorators: { isInteractive: [{\n                type: Input\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], tabIndex: [{\n                type: Input,\n                args: [{\n                        transform: (value) => (value == null ? -1 : numberAttribute(value)),\n                    }]\n            }], _allowFocusWhenDisabled: [{\n                type: Input\n            }] } });\n\n/** Avatar image within a chip. */\nclass MatChipAvatar {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipAvatar, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: MatChipAvatar, isStandalone: true, selector: \"mat-chip-avatar, [matChipAvatar]\", host: { attributes: { \"role\": \"img\" }, classAttribute: \"mat-mdc-chip-avatar mdc-evolution-chip__icon mdc-evolution-chip__icon--primary\" }, providers: [{ provide: MAT_CHIP_AVATAR, useExisting: MatChipAvatar }], ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipAvatar, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-chip-avatar, [matChipAvatar]',\n                    host: {\n                        'class': 'mat-mdc-chip-avatar mdc-evolution-chip__icon mdc-evolution-chip__icon--primary',\n                        'role': 'img',\n                    },\n                    providers: [{ provide: MAT_CHIP_AVATAR, useExisting: MatChipAvatar }],\n                }]\n        }] });\n/** Non-interactive trailing icon in a chip. */\nclass MatChipTrailingIcon extends MatChipAction {\n    /**\n     * MDC considers all trailing actions as a remove icon,\n     * but we support non-interactive trailing icons.\n     */\n    isInteractive = false;\n    _isPrimary = false;\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipTrailingIcon, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: MatChipTrailingIcon, isStandalone: true, selector: \"mat-chip-trailing-icon, [matChipTrailingIcon]\", host: { attributes: { \"aria-hidden\": \"true\" }, classAttribute: \"mat-mdc-chip-trailing-icon mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing\" }, providers: [{ provide: MAT_CHIP_TRAILING_ICON, useExisting: MatChipTrailingIcon }], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipTrailingIcon, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'mat-chip-trailing-icon, [matChipTrailingIcon]',\n                    host: {\n                        'class': 'mat-mdc-chip-trailing-icon mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing',\n                        'aria-hidden': 'true',\n                    },\n                    providers: [{ provide: MAT_CHIP_TRAILING_ICON, useExisting: MatChipTrailingIcon }],\n                }]\n        }] });\n/**\n * Directive to edit the parent chip when the leading action icon is clicked or\n * when the ENTER key is pressed on it.\n *\n * Recommended for use with the Material Design \"edit\" icon\n * available at https://material.io/icons/#ic_edit.\n *\n * Example:\n *\n * ```\n * <mat-chip>\n *   <button matChipEdit aria-label=\"Edit\">\n *     <mat-icon>edit</mat-icon>\n *   </button>\n * </mat-chip>\n * ```\n */\nclass MatChipEdit extends MatChipAction {\n    _isPrimary = false;\n    _isLeading = true;\n    _handleClick(event) {\n        if (!this.disabled) {\n            event.stopPropagation();\n            event.preventDefault();\n            this._parentChip._edit();\n        }\n    }\n    _handleKeydown(event) {\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) && !this.disabled) {\n            event.stopPropagation();\n            event.preventDefault();\n            this._parentChip._edit();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipEdit, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: MatChipEdit, isStandalone: true, selector: \"[matChipEdit]\", host: { attributes: { \"role\": \"button\" }, properties: { \"attr.aria-hidden\": \"null\" }, classAttribute: \"mat-mdc-chip-edit mat-mdc-chip-avatar mat-focus-indicator mdc-evolution-chip__icon mdc-evolution-chip__icon--primary\" }, providers: [{ provide: MAT_CHIP_EDIT, useExisting: MatChipEdit }], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipEdit, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matChipEdit]',\n                    host: {\n                        'class': 'mat-mdc-chip-edit mat-mdc-chip-avatar mat-focus-indicator ' +\n                            'mdc-evolution-chip__icon mdc-evolution-chip__icon--primary',\n                        'role': 'button',\n                        '[attr.aria-hidden]': 'null',\n                    },\n                    providers: [{ provide: MAT_CHIP_EDIT, useExisting: MatChipEdit }],\n                }]\n        }] });\n/**\n * Directive to remove the parent chip when the trailing icon is clicked or\n * when the ENTER key is pressed on it.\n *\n * Recommended for use with the Material Design \"cancel\" icon\n * available at https://material.io/icons/#ic_cancel.\n *\n * Example:\n *\n * ```\n * <mat-chip>\n *   <mat-icon matChipRemove>cancel</mat-icon>\n * </mat-chip>\n * ```\n */\nclass MatChipRemove extends MatChipAction {\n    _isPrimary = false;\n    _handleClick(event) {\n        if (!this.disabled) {\n            event.stopPropagation();\n            event.preventDefault();\n            this._parentChip.remove();\n        }\n    }\n    _handleKeydown(event) {\n        if ((event.keyCode === ENTER || event.keyCode === SPACE) && !this.disabled) {\n            event.stopPropagation();\n            event.preventDefault();\n            this._parentChip.remove();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipRemove, deps: null, target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: MatChipRemove, isStandalone: true, selector: \"[matChipRemove]\", host: { attributes: { \"role\": \"button\" }, properties: { \"attr.aria-hidden\": \"null\" }, classAttribute: \"mat-mdc-chip-remove mat-mdc-chip-trailing-icon mat-focus-indicator mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing\" }, providers: [{ provide: MAT_CHIP_REMOVE, useExisting: MatChipRemove }], usesInheritance: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipRemove, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: '[matChipRemove]',\n                    host: {\n                        'class': 'mat-mdc-chip-remove mat-mdc-chip-trailing-icon mat-focus-indicator ' +\n                            'mdc-evolution-chip__icon mdc-evolution-chip__icon--trailing',\n                        'role': 'button',\n                        '[attr.aria-hidden]': 'null',\n                    },\n                    providers: [{ provide: MAT_CHIP_REMOVE, useExisting: MatChipRemove }],\n                }]\n        }] });\n\n/**\n * Material design styled Chip base component. Used inside the MatChipSet component.\n *\n * Extended by MatChipOption and MatChipRow for different interaction patterns.\n */\nclass MatChip {\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _elementRef = inject(ElementRef);\n    _tagName = inject(HOST_TAG_NAME);\n    _ngZone = inject(NgZone);\n    _focusMonitor = inject(FocusMonitor);\n    _globalRippleOptions = inject(MAT_RIPPLE_GLOBAL_OPTIONS, {\n        optional: true,\n    });\n    _document = inject(DOCUMENT);\n    /** Emits when the chip is focused. */\n    _onFocus = new Subject();\n    /** Emits when the chip is blurred. */\n    _onBlur = new Subject();\n    /** Whether this chip is a basic (unstyled) chip. */\n    _isBasicChip;\n    /** Role for the root of the chip. */\n    role = null;\n    /** Whether the chip has focus. */\n    _hasFocusInternal = false;\n    /** Whether moving focus into the chip is pending. */\n    _pendingFocus;\n    /** Subscription to changes in the chip's actions. */\n    _actionChanges;\n    /** Whether animations for the chip are enabled. */\n    _animationsDisabled = _animationsDisabled();\n    /** All avatars present in the chip. */\n    _allLeadingIcons;\n    /** All trailing icons present in the chip. */\n    _allTrailingIcons;\n    /** All edit icons present in the chip. */\n    _allEditIcons;\n    /** All remove icons present in the chip. */\n    _allRemoveIcons;\n    _hasFocus() {\n        return this._hasFocusInternal;\n    }\n    /** A unique id for the chip. If none is supplied, it will be auto-generated. */\n    id = inject(_IdGenerator).getId('mat-mdc-chip-');\n    // TODO(#26104): Consider deprecating and using `_computeAriaAccessibleName` instead.\n    // `ariaLabel` may be unnecessary, and `_computeAriaAccessibleName` only supports\n    // datepicker's use case.\n    /** ARIA label for the content of the chip. */\n    ariaLabel = null;\n    // TODO(#26104): Consider deprecating and using `_computeAriaAccessibleName` instead.\n    // `ariaDescription` may be unnecessary, and `_computeAriaAccessibleName` only supports\n    // datepicker's use case.\n    /** ARIA description for the content of the chip. */\n    ariaDescription = null;\n    /** Whether the chip list is disabled. */\n    _chipListDisabled = false;\n    /** Whether the chip was focused when it was removed. */\n    _hadFocusOnRemove = false;\n    _textElement;\n    /**\n     * The value of the chip. Defaults to the content inside\n     * the `mat-mdc-chip-action-label` element.\n     */\n    get value() {\n        return this._value !== undefined ? this._value : this._textElement.textContent.trim();\n    }\n    set value(value) {\n        this._value = value;\n    }\n    _value;\n    // TODO: should be typed as `ThemePalette` but internal apps pass in arbitrary strings.\n    /**\n     * Theme color of the chip. This API is supported in M2 themes only, it has no\n     * effect in M3 themes. For color customization in M3, see https://material.angular.dev/components/chips/styling.\n     *\n     * For information on applying color variants in M3, see\n     * https://material.angular.dev/guide/material-2-theming#optional-add-backwards-compatibility-styles-for-color-variants\n     */\n    color;\n    /**\n     * Determines whether or not the chip displays the remove styling and emits (removed) events.\n     */\n    removable = true;\n    /**\n     * Colors the chip for emphasis as if it were selected.\n     */\n    highlighted = false;\n    /** Whether the ripple effect is disabled or not. */\n    disableRipple = false;\n    /** Whether the chip is disabled. */\n    get disabled() {\n        return this._disabled || this._chipListDisabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n    }\n    _disabled = false;\n    /** Emitted when a chip is to be removed. */\n    removed = new EventEmitter();\n    /** Emitted when the chip is destroyed. */\n    destroyed = new EventEmitter();\n    /** The unstyled chip selector for this component. */\n    basicChipAttrName = 'mat-basic-chip';\n    /** The chip's leading icon. */\n    leadingIcon;\n    /** The chip's leading edit icon. */\n    editIcon;\n    /** The chip's trailing icon. */\n    trailingIcon;\n    /** The chip's trailing remove icon. */\n    removeIcon;\n    /** Action receiving the primary set of user interactions. */\n    primaryAction;\n    /**\n     * Handles the lazy creation of the MatChip ripple.\n     * Used to improve initial load time of large applications.\n     */\n    _rippleLoader = inject(MatRippleLoader);\n    _injector = inject(Injector);\n    constructor() {\n        const styleLoader = inject(_CdkPrivateStyleLoader);\n        styleLoader.load(_StructuralStylesLoader);\n        styleLoader.load(_VisuallyHiddenLoader);\n        this._monitorFocus();\n        this._rippleLoader?.configureRipple(this._elementRef.nativeElement, {\n            className: 'mat-mdc-chip-ripple',\n            disabled: this._isRippleDisabled(),\n        });\n    }\n    ngOnInit() {\n        // This check needs to happen in `ngOnInit` so the overridden value of\n        // `basicChipAttrName` coming from base classes can be picked up.\n        this._isBasicChip =\n            this._elementRef.nativeElement.hasAttribute(this.basicChipAttrName) ||\n                this._tagName.toLowerCase() === this.basicChipAttrName;\n    }\n    ngAfterViewInit() {\n        this._textElement = this._elementRef.nativeElement.querySelector('.mat-mdc-chip-action-label');\n        if (this._pendingFocus) {\n            this._pendingFocus = false;\n            this.focus();\n        }\n    }\n    ngAfterContentInit() {\n        // Since the styling depends on the presence of some\n        // actions, we have to mark for check on changes.\n        this._actionChanges = merge(this._allLeadingIcons.changes, this._allTrailingIcons.changes, this._allEditIcons.changes, this._allRemoveIcons.changes).subscribe(() => this._changeDetectorRef.markForCheck());\n    }\n    ngDoCheck() {\n        this._rippleLoader.setDisabled(this._elementRef.nativeElement, this._isRippleDisabled());\n    }\n    ngOnDestroy() {\n        this._focusMonitor.stopMonitoring(this._elementRef);\n        this._rippleLoader?.destroyRipple(this._elementRef.nativeElement);\n        this._actionChanges?.unsubscribe();\n        this.destroyed.emit({ chip: this });\n        this.destroyed.complete();\n    }\n    /**\n     * Allows for programmatic removal of the chip.\n     *\n     * Informs any listeners of the removal request. Does not remove the chip from the DOM.\n     */\n    remove() {\n        if (this.removable) {\n            this._hadFocusOnRemove = this._hasFocus();\n            this.removed.emit({ chip: this });\n        }\n    }\n    /** Whether or not the ripple should be disabled. */\n    _isRippleDisabled() {\n        return (this.disabled ||\n            this.disableRipple ||\n            this._animationsDisabled ||\n            this._isBasicChip ||\n            !this._hasInteractiveActions() ||\n            !!this._globalRippleOptions?.disabled);\n    }\n    /** Returns whether the chip has a trailing icon. */\n    _hasTrailingIcon() {\n        return !!(this.trailingIcon || this.removeIcon);\n    }\n    /** Handles keyboard events on the chip. */\n    _handleKeydown(event) {\n        // Ignore backspace events where the user is holding down the key\n        // so that we don't accidentally remove too many chips.\n        if ((event.keyCode === BACKSPACE && !event.repeat) || event.keyCode === DELETE) {\n            event.preventDefault();\n            this.remove();\n        }\n    }\n    /** Allows for programmatic focusing of the chip. */\n    focus() {\n        if (!this.disabled) {\n            // If `focus` is called before `ngAfterViewInit`, we won't have access to the primary action.\n            // This can happen if the consumer tries to focus a chip immediately after it is added.\n            // Queue the method to be called again on init.\n            if (this.primaryAction) {\n                this.primaryAction.focus();\n            }\n            else {\n                this._pendingFocus = true;\n            }\n        }\n    }\n    /** Gets the action that contains a specific target node. */\n    _getSourceAction(target) {\n        return this._getActions().find(action => {\n            const element = action._elementRef.nativeElement;\n            return element === target || element.contains(target);\n        });\n    }\n    /** Gets all of the actions within the chip. */\n    _getActions() {\n        const result = [];\n        if (this.editIcon) {\n            result.push(this.editIcon);\n        }\n        if (this.primaryAction) {\n            result.push(this.primaryAction);\n        }\n        if (this.removeIcon) {\n            result.push(this.removeIcon);\n        }\n        if (this.trailingIcon) {\n            result.push(this.trailingIcon);\n        }\n        return result;\n    }\n    /** Handles interactions with the primary action of the chip. */\n    _handlePrimaryActionInteraction() {\n        // Empty here, but is overwritten in child classes.\n    }\n    /** Returns whether the chip has any interactive actions. */\n    _hasInteractiveActions() {\n        return this._getActions().some(a => a.isInteractive);\n    }\n    /** Handles interactions with the edit action of the chip. */\n    _edit(event) {\n        // Empty here, but is overwritten in child classes.\n    }\n    /** Starts the focus monitoring process on the chip. */\n    _monitorFocus() {\n        this._focusMonitor.monitor(this._elementRef, true).subscribe(origin => {\n            const hasFocus = origin !== null;\n            if (hasFocus !== this._hasFocusInternal) {\n                this._hasFocusInternal = hasFocus;\n                if (hasFocus) {\n                    this._onFocus.next({ chip: this });\n                }\n                else {\n                    // When animations are enabled, Angular may end up removing the chip from the DOM a little\n                    // earlier than usual, causing it to be blurred and throwing off the logic in the chip list\n                    // that moves focus to the next item. To work around the issue, we defer marking the chip\n                    // as not focused until after the next render.\n                    this._changeDetectorRef.markForCheck();\n                    setTimeout(() => this._ngZone.run(() => this._onBlur.next({ chip: this })));\n                }\n            }\n        });\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChip, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.2.0-rc.1\", type: MatChip, isStandalone: true, selector: \"mat-basic-chip, [mat-basic-chip], mat-chip, [mat-chip]\", inputs: { role: \"role\", id: \"id\", ariaLabel: [\"aria-label\", \"ariaLabel\"], ariaDescription: [\"aria-description\", \"ariaDescription\"], value: \"value\", color: \"color\", removable: [\"removable\", \"removable\", booleanAttribute], highlighted: [\"highlighted\", \"highlighted\", booleanAttribute], disableRipple: [\"disableRipple\", \"disableRipple\", booleanAttribute], disabled: [\"disabled\", \"disabled\", booleanAttribute] }, outputs: { removed: \"removed\", destroyed: \"destroyed\" }, host: { listeners: { \"keydown\": \"_handleKeydown($event)\" }, properties: { \"class\": \"\\\"mat-\\\" + (color || \\\"primary\\\")\", \"class.mdc-evolution-chip\": \"!_isBasicChip\", \"class.mdc-evolution-chip--disabled\": \"disabled\", \"class.mdc-evolution-chip--with-trailing-action\": \"_hasTrailingIcon()\", \"class.mdc-evolution-chip--with-primary-graphic\": \"leadingIcon\", \"class.mdc-evolution-chip--with-primary-icon\": \"leadingIcon\", \"class.mdc-evolution-chip--with-avatar\": \"leadingIcon\", \"class.mat-mdc-chip-with-avatar\": \"leadingIcon\", \"class.mat-mdc-chip-highlighted\": \"highlighted\", \"class.mat-mdc-chip-disabled\": \"disabled\", \"class.mat-mdc-basic-chip\": \"_isBasicChip\", \"class.mat-mdc-standard-chip\": \"!_isBasicChip\", \"class.mat-mdc-chip-with-trailing-icon\": \"_hasTrailingIcon()\", \"class._mat-animation-noopable\": \"_animationsDisabled\", \"id\": \"id\", \"attr.role\": \"role\", \"attr.aria-label\": \"ariaLabel\" }, classAttribute: \"mat-mdc-chip\" }, providers: [{ provide: MAT_CHIP, useExisting: MatChip }], queries: [{ propertyName: \"leadingIcon\", first: true, predicate: MAT_CHIP_AVATAR, descendants: true }, { propertyName: \"editIcon\", first: true, predicate: MAT_CHIP_EDIT, descendants: true }, { propertyName: \"trailingIcon\", first: true, predicate: MAT_CHIP_TRAILING_ICON, descendants: true }, { propertyName: \"removeIcon\", first: true, predicate: MAT_CHIP_REMOVE, descendants: true }, { propertyName: \"_allLeadingIcons\", predicate: MAT_CHIP_AVATAR, descendants: true }, { propertyName: \"_allTrailingIcons\", predicate: MAT_CHIP_TRAILING_ICON, descendants: true }, { propertyName: \"_allEditIcons\", predicate: MAT_CHIP_EDIT, descendants: true }, { propertyName: \"_allRemoveIcons\", predicate: MAT_CHIP_REMOVE, descendants: true }], viewQueries: [{ propertyName: \"primaryAction\", first: true, predicate: MatChipAction, descendants: true }], exportAs: [\"matChip\"], ngImport: i0, template: \"<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <span matChipAction [isInteractive]=\\\"false\\\">\\n    @if (leadingIcon) {\\n      <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n        <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n      </span>\\n    }\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-focus-indicator\\\"></span>\\n    </span>\\n  </span>\\n</span>\\n\\n@if (_hasTrailingIcon()) {\\n  <span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\">\\n    <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n  </span>\\n}\\n\", styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}@media(forced-colors: active){.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{forced-color-adjust:none}}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-outline-width, 1px);border-radius:var(--mat-chip-container-shape-radius, 8px);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-outline-color, var(--mat-sys-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mat-chip-focus-outline-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--secondary{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mat-chip-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-chip-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-chip-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mat-chip-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-chip-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-label-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mat-chip-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mat-chip-with-avatar-avatar-size, 24px);height:var(--mat-chip-with-avatar-avatar-size, 24px);font-size:var(--mat-chip-with-avatar-avatar-size, 24px)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__graphic{padding-left:0}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@media(forced-colors: active){.mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mat-mdc-standard-chip{border-radius:var(--mat-chip-container-shape-radius, 8px);height:var(--mat-chip-container-height, 32px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mat-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mat-chip-flat-disabled-selected-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}@media(forced-colors: active){.mat-mdc-standard-chip{outline:solid 1px}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mat-chip-with-avatar-avatar-shape-radius, 24px);width:var(--mat-chip-with-icon-icon-size, 18px);height:var(--mat-chip-with-icon-icon-size, 18px);font-size:var(--mat-chip-with-icon-icon-size, 18px)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-highlighted{--mat-chip-with-icon-icon-color: var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container));--mat-chip-elevated-container-color: var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container));--mat-chip-label-text-color: var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container));--mat-chip-outline-width: var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-hover-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-hover-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mat-chip-with-avatar-disabled-avatar-opacity, 0.38)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mat-chip-with-icon-disabled-icon-opacity, 0.38)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity, 1)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-edit,.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity, 1)}.mat-mdc-chip-edit:focus,.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity, 1)}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-edit:hover::after,.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-edit:focus::after,.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mat-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-edit::before,.mat-mdc-chip-remove::before{margin:calc(var(--mat-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}@media(forced-colors: active){.mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}}.mat-mdc-chip-action:focus .mat-focus-indicator::before{content:\\\"\\\"}.mdc-evolution-chip__icon,.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{min-height:fit-content}\\n\"], dependencies: [{ kind: \"directive\", type: MatChipAction, selector: \"[matChipAction]\", inputs: [\"isInteractive\", \"disabled\", \"tabIndex\", \"_allowFocusWhenDisabled\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChip, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-basic-chip, [mat-basic-chip], mat-chip, [mat-chip]', exportAs: 'matChip', host: {\n                        'class': 'mat-mdc-chip',\n                        '[class]': '\"mat-\" + (color || \"primary\")',\n                        '[class.mdc-evolution-chip]': '!_isBasicChip',\n                        '[class.mdc-evolution-chip--disabled]': 'disabled',\n                        '[class.mdc-evolution-chip--with-trailing-action]': '_hasTrailingIcon()',\n                        '[class.mdc-evolution-chip--with-primary-graphic]': 'leadingIcon',\n                        '[class.mdc-evolution-chip--with-primary-icon]': 'leadingIcon',\n                        '[class.mdc-evolution-chip--with-avatar]': 'leadingIcon',\n                        '[class.mat-mdc-chip-with-avatar]': 'leadingIcon',\n                        '[class.mat-mdc-chip-highlighted]': 'highlighted',\n                        '[class.mat-mdc-chip-disabled]': 'disabled',\n                        '[class.mat-mdc-basic-chip]': '_isBasicChip',\n                        '[class.mat-mdc-standard-chip]': '!_isBasicChip',\n                        '[class.mat-mdc-chip-with-trailing-icon]': '_hasTrailingIcon()',\n                        '[class._mat-animation-noopable]': '_animationsDisabled',\n                        '[id]': 'id',\n                        '[attr.role]': 'role',\n                        '[attr.aria-label]': 'ariaLabel',\n                        '(keydown)': '_handleKeydown($event)',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, providers: [{ provide: MAT_CHIP, useExisting: MatChip }], imports: [MatChipAction], template: \"<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <span matChipAction [isInteractive]=\\\"false\\\">\\n    @if (leadingIcon) {\\n      <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n        <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n      </span>\\n    }\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-focus-indicator\\\"></span>\\n    </span>\\n  </span>\\n</span>\\n\\n@if (_hasTrailingIcon()) {\\n  <span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\">\\n    <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n  </span>\\n}\\n\", styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}@media(forced-colors: active){.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{forced-color-adjust:none}}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-outline-width, 1px);border-radius:var(--mat-chip-container-shape-radius, 8px);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-outline-color, var(--mat-sys-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mat-chip-focus-outline-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--secondary{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mat-chip-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-chip-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-chip-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mat-chip-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-chip-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-label-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mat-chip-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mat-chip-with-avatar-avatar-size, 24px);height:var(--mat-chip-with-avatar-avatar-size, 24px);font-size:var(--mat-chip-with-avatar-avatar-size, 24px)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__graphic{padding-left:0}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@media(forced-colors: active){.mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mat-mdc-standard-chip{border-radius:var(--mat-chip-container-shape-radius, 8px);height:var(--mat-chip-container-height, 32px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mat-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mat-chip-flat-disabled-selected-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}@media(forced-colors: active){.mat-mdc-standard-chip{outline:solid 1px}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mat-chip-with-avatar-avatar-shape-radius, 24px);width:var(--mat-chip-with-icon-icon-size, 18px);height:var(--mat-chip-with-icon-icon-size, 18px);font-size:var(--mat-chip-with-icon-icon-size, 18px)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-highlighted{--mat-chip-with-icon-icon-color: var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container));--mat-chip-elevated-container-color: var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container));--mat-chip-label-text-color: var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container));--mat-chip-outline-width: var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-hover-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-hover-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mat-chip-with-avatar-disabled-avatar-opacity, 0.38)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mat-chip-with-icon-disabled-icon-opacity, 0.38)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity, 1)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-edit,.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity, 1)}.mat-mdc-chip-edit:focus,.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity, 1)}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-edit:hover::after,.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-edit:focus::after,.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mat-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-edit::before,.mat-mdc-chip-remove::before{margin:calc(var(--mat-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}@media(forced-colors: active){.mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}}.mat-mdc-chip-action:focus .mat-focus-indicator::before{content:\\\"\\\"}.mdc-evolution-chip__icon,.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{min-height:fit-content}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { role: [{\n                type: Input\n            }], _allLeadingIcons: [{\n                type: ContentChildren,\n                args: [MAT_CHIP_AVATAR, { descendants: true }]\n            }], _allTrailingIcons: [{\n                type: ContentChildren,\n                args: [MAT_CHIP_TRAILING_ICON, { descendants: true }]\n            }], _allEditIcons: [{\n                type: ContentChildren,\n                args: [MAT_CHIP_EDIT, { descendants: true }]\n            }], _allRemoveIcons: [{\n                type: ContentChildren,\n                args: [MAT_CHIP_REMOVE, { descendants: true }]\n            }], id: [{\n                type: Input\n            }], ariaLabel: [{\n                type: Input,\n                args: ['aria-label']\n            }], ariaDescription: [{\n                type: Input,\n                args: ['aria-description']\n            }], value: [{\n                type: Input\n            }], color: [{\n                type: Input\n            }], removable: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], highlighted: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disableRipple: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], removed: [{\n                type: Output\n            }], destroyed: [{\n                type: Output\n            }], leadingIcon: [{\n                type: ContentChild,\n                args: [MAT_CHIP_AVATAR]\n            }], editIcon: [{\n                type: ContentChild,\n                args: [MAT_CHIP_EDIT]\n            }], trailingIcon: [{\n                type: ContentChild,\n                args: [MAT_CHIP_TRAILING_ICON]\n            }], removeIcon: [{\n                type: ContentChild,\n                args: [MAT_CHIP_REMOVE]\n            }], primaryAction: [{\n                type: ViewChild,\n                args: [MatChipAction]\n            }] } });\n\n/** Event object emitted by MatChipOption when selected or deselected. */\nclass MatChipSelectionChange {\n    source;\n    selected;\n    isUserInput;\n    constructor(\n    /** Reference to the chip that emitted the event. */\n    source, \n    /** Whether the chip that emitted the event is selected. */\n    selected, \n    /** Whether the selection change was a result of a user interaction. */\n    isUserInput = false) {\n        this.source = source;\n        this.selected = selected;\n        this.isUserInput = isUserInput;\n    }\n}\n/**\n * An extension of the MatChip component that supports chip selection. Used with MatChipListbox.\n *\n * Unlike other chips, the user can focus on disabled chip options inside a MatChipListbox. The\n * user cannot click disabled chips.\n */\nclass MatChipOption extends MatChip {\n    /** Default chip options. */\n    _defaultOptions = inject(MAT_CHIPS_DEFAULT_OPTIONS, { optional: true });\n    /** Whether the chip list is selectable. */\n    chipListSelectable = true;\n    /** Whether the chip list is in multi-selection mode. */\n    _chipListMultiple = false;\n    /** Whether the chip list hides single-selection indicator. */\n    _chipListHideSingleSelectionIndicator = this._defaultOptions?.hideSingleSelectionIndicator ?? false;\n    /**\n     * Whether or not the chip is selectable.\n     *\n     * When a chip is not selectable, changes to its selected state are always\n     * ignored. By default an option chip is selectable, and it becomes\n     * non-selectable if its parent chip list is not selectable.\n     */\n    get selectable() {\n        return this._selectable && this.chipListSelectable;\n    }\n    set selectable(value) {\n        this._selectable = value;\n        this._changeDetectorRef.markForCheck();\n    }\n    _selectable = true;\n    /** Whether the chip is selected. */\n    get selected() {\n        return this._selected;\n    }\n    set selected(value) {\n        this._setSelectedState(value, false, true);\n    }\n    _selected = false;\n    /**\n     * The ARIA selected applied to the chip. Conforms to WAI ARIA best practices for listbox\n     * interaction patterns.\n     *\n     * From [WAI ARIA Listbox authoring practices guide](\n     * https://www.w3.org/WAI/ARIA/apg/patterns/listbox/):\n     *  \"If any options are selected, each selected option has either aria-selected or aria-checked\n     *  set to true. All options that are selectable but not selected have either aria-selected or\n     *  aria-checked set to false.\"\n     *\n     * Set `aria-selected=\"false\"` on not-selected listbox options that are selectable to fix\n     * VoiceOver reading every option as \"selected\" (#25736).\n     */\n    get ariaSelected() {\n        return this.selectable ? this.selected.toString() : null;\n    }\n    /** The unstyled chip selector for this component. */\n    basicChipAttrName = 'mat-basic-chip-option';\n    /** Emitted when the chip is selected or deselected. */\n    selectionChange = new EventEmitter();\n    ngOnInit() {\n        super.ngOnInit();\n        this.role = 'presentation';\n    }\n    /** Selects the chip. */\n    select() {\n        this._setSelectedState(true, false, true);\n    }\n    /** Deselects the chip. */\n    deselect() {\n        this._setSelectedState(false, false, true);\n    }\n    /** Selects this chip and emits userInputSelection event */\n    selectViaInteraction() {\n        this._setSelectedState(true, true, true);\n    }\n    /** Toggles the current selected state of this chip. */\n    toggleSelected(isUserInput = false) {\n        this._setSelectedState(!this.selected, isUserInput, true);\n        return this.selected;\n    }\n    _handlePrimaryActionInteraction() {\n        if (!this.disabled) {\n            // Interacting with the primary action implies that the chip already has focus, however\n            // there's a bug in Safari where focus ends up lingering on the previous chip (see #27544).\n            // We work around it by explicitly focusing the primary action of the current chip.\n            this.focus();\n            if (this.selectable) {\n                this.toggleSelected(true);\n            }\n        }\n    }\n    _hasLeadingGraphic() {\n        if (this.leadingIcon) {\n            return true;\n        }\n        // The checkmark graphic communicates selected state for both single-select and multi-select.\n        // Include checkmark in single-select to fix a11y issue where selected state is communicated\n        // visually only using color (#25886).\n        return !this._chipListHideSingleSelectionIndicator || this._chipListMultiple;\n    }\n    _setSelectedState(isSelected, isUserInput, emitEvent) {\n        if (isSelected !== this.selected) {\n            this._selected = isSelected;\n            if (emitEvent) {\n                this.selectionChange.emit({\n                    source: this,\n                    isUserInput,\n                    selected: this.selected,\n                });\n            }\n            this._changeDetectorRef.markForCheck();\n        }\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipOption, deps: null, target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.2.0-rc.1\", type: MatChipOption, isStandalone: true, selector: \"mat-basic-chip-option, [mat-basic-chip-option], mat-chip-option, [mat-chip-option]\", inputs: { selectable: [\"selectable\", \"selectable\", booleanAttribute], selected: [\"selected\", \"selected\", booleanAttribute] }, outputs: { selectionChange: \"selectionChange\" }, host: { properties: { \"class.mdc-evolution-chip\": \"!_isBasicChip\", \"class.mdc-evolution-chip--filter\": \"!_isBasicChip\", \"class.mdc-evolution-chip--selectable\": \"!_isBasicChip\", \"class.mat-mdc-chip-selected\": \"selected\", \"class.mat-mdc-chip-multiple\": \"_chipListMultiple\", \"class.mat-mdc-chip-disabled\": \"disabled\", \"class.mat-mdc-chip-with-avatar\": \"leadingIcon\", \"class.mdc-evolution-chip--disabled\": \"disabled\", \"class.mdc-evolution-chip--selected\": \"selected\", \"class.mdc-evolution-chip--selecting\": \"!_animationsDisabled\", \"class.mdc-evolution-chip--with-trailing-action\": \"_hasTrailingIcon()\", \"class.mdc-evolution-chip--with-primary-icon\": \"leadingIcon\", \"class.mdc-evolution-chip--with-primary-graphic\": \"_hasLeadingGraphic()\", \"class.mdc-evolution-chip--with-avatar\": \"leadingIcon\", \"class.mat-mdc-chip-highlighted\": \"highlighted\", \"class.mat-mdc-chip-with-trailing-icon\": \"_hasTrailingIcon()\", \"attr.tabindex\": \"null\", \"attr.aria-label\": \"null\", \"attr.aria-description\": \"null\", \"attr.role\": \"role\", \"id\": \"id\" }, classAttribute: \"mat-mdc-chip mat-mdc-chip-option\" }, providers: [\n            { provide: MatChip, useExisting: MatChipOption },\n            { provide: MAT_CHIP, useExisting: MatChipOption },\n        ], usesInheritance: true, ngImport: i0, template: \"<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <button\\n    matChipAction\\n    [_allowFocusWhenDisabled]=\\\"true\\\"\\n    [attr.aria-description]=\\\"ariaDescription\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-selected]=\\\"ariaSelected\\\"\\n    role=\\\"option\\\">\\n    @if (_hasLeadingGraphic()) {\\n      <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n        <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n        <span class=\\\"mdc-evolution-chip__checkmark\\\">\\n          <svg\\n            class=\\\"mdc-evolution-chip__checkmark-svg\\\"\\n            viewBox=\\\"-2 -3 30 30\\\"\\n            focusable=\\\"false\\\"\\n            aria-hidden=\\\"true\\\">\\n            <path class=\\\"mdc-evolution-chip__checkmark-path\\\"\\n                  fill=\\\"none\\\" stroke=\\\"currentColor\\\" d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\" />\\n          </svg>\\n        </span>\\n      </span>\\n    }\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-focus-indicator\\\"></span>\\n    </span>\\n  </button>\\n</span>\\n\\n@if (_hasTrailingIcon()) {\\n  <span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\">\\n    <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n  </span>\\n}\\n\", styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}@media(forced-colors: active){.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{forced-color-adjust:none}}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-outline-width, 1px);border-radius:var(--mat-chip-container-shape-radius, 8px);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-outline-color, var(--mat-sys-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mat-chip-focus-outline-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--secondary{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mat-chip-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-chip-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-chip-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mat-chip-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-chip-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-label-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mat-chip-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mat-chip-with-avatar-avatar-size, 24px);height:var(--mat-chip-with-avatar-avatar-size, 24px);font-size:var(--mat-chip-with-avatar-avatar-size, 24px)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__graphic{padding-left:0}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@media(forced-colors: active){.mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mat-mdc-standard-chip{border-radius:var(--mat-chip-container-shape-radius, 8px);height:var(--mat-chip-container-height, 32px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mat-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mat-chip-flat-disabled-selected-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}@media(forced-colors: active){.mat-mdc-standard-chip{outline:solid 1px}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mat-chip-with-avatar-avatar-shape-radius, 24px);width:var(--mat-chip-with-icon-icon-size, 18px);height:var(--mat-chip-with-icon-icon-size, 18px);font-size:var(--mat-chip-with-icon-icon-size, 18px)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-highlighted{--mat-chip-with-icon-icon-color: var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container));--mat-chip-elevated-container-color: var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container));--mat-chip-label-text-color: var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container));--mat-chip-outline-width: var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-hover-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-hover-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mat-chip-with-avatar-disabled-avatar-opacity, 0.38)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mat-chip-with-icon-disabled-icon-opacity, 0.38)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity, 1)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-edit,.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity, 1)}.mat-mdc-chip-edit:focus,.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity, 1)}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-edit:hover::after,.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-edit:focus::after,.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mat-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-edit::before,.mat-mdc-chip-remove::before{margin:calc(var(--mat-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}@media(forced-colors: active){.mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}}.mat-mdc-chip-action:focus .mat-focus-indicator::before{content:\\\"\\\"}.mdc-evolution-chip__icon,.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{min-height:fit-content}\\n\"], dependencies: [{ kind: \"directive\", type: MatChipAction, selector: \"[matChipAction]\", inputs: [\"isInteractive\", \"disabled\", \"tabIndex\", \"_allowFocusWhenDisabled\"] }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipOption, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-basic-chip-option, [mat-basic-chip-option], mat-chip-option, [mat-chip-option]', host: {\n                        'class': 'mat-mdc-chip mat-mdc-chip-option',\n                        '[class.mdc-evolution-chip]': '!_isBasicChip',\n                        '[class.mdc-evolution-chip--filter]': '!_isBasicChip',\n                        '[class.mdc-evolution-chip--selectable]': '!_isBasicChip',\n                        '[class.mat-mdc-chip-selected]': 'selected',\n                        '[class.mat-mdc-chip-multiple]': '_chipListMultiple',\n                        '[class.mat-mdc-chip-disabled]': 'disabled',\n                        '[class.mat-mdc-chip-with-avatar]': 'leadingIcon',\n                        '[class.mdc-evolution-chip--disabled]': 'disabled',\n                        '[class.mdc-evolution-chip--selected]': 'selected',\n                        // This class enables the transition on the checkmark. Usually MDC adds it when selection\n                        // starts and removes it once the animation is finished. We don't need to go through all\n                        // the trouble, because we only care about the selection animation. MDC needs to do it,\n                        // because they also have an exit animation that we don't care about.\n                        '[class.mdc-evolution-chip--selecting]': '!_animationsDisabled',\n                        '[class.mdc-evolution-chip--with-trailing-action]': '_hasTrailingIcon()',\n                        '[class.mdc-evolution-chip--with-primary-icon]': 'leadingIcon',\n                        '[class.mdc-evolution-chip--with-primary-graphic]': '_hasLeadingGraphic()',\n                        '[class.mdc-evolution-chip--with-avatar]': 'leadingIcon',\n                        '[class.mat-mdc-chip-highlighted]': 'highlighted',\n                        '[class.mat-mdc-chip-with-trailing-icon]': '_hasTrailingIcon()',\n                        '[attr.tabindex]': 'null',\n                        '[attr.aria-label]': 'null',\n                        '[attr.aria-description]': 'null',\n                        '[attr.role]': 'role',\n                        '[id]': 'id',\n                    }, providers: [\n                        { provide: MatChip, useExisting: MatChipOption },\n                        { provide: MAT_CHIP, useExisting: MatChipOption },\n                    ], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, imports: [MatChipAction], template: \"<span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\">\\n  <button\\n    matChipAction\\n    [_allowFocusWhenDisabled]=\\\"true\\\"\\n    [attr.aria-description]=\\\"ariaDescription\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\"\\n    [attr.aria-selected]=\\\"ariaSelected\\\"\\n    role=\\\"option\\\">\\n    @if (_hasLeadingGraphic()) {\\n      <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n        <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n        <span class=\\\"mdc-evolution-chip__checkmark\\\">\\n          <svg\\n            class=\\\"mdc-evolution-chip__checkmark-svg\\\"\\n            viewBox=\\\"-2 -3 30 30\\\"\\n            focusable=\\\"false\\\"\\n            aria-hidden=\\\"true\\\">\\n            <path class=\\\"mdc-evolution-chip__checkmark-path\\\"\\n                  fill=\\\"none\\\" stroke=\\\"currentColor\\\" d=\\\"M1.73,12.91 8.1,19.28 22.79,4.59\\\" />\\n          </svg>\\n        </span>\\n      </span>\\n    }\\n    <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n      <ng-content></ng-content>\\n      <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-focus-indicator\\\"></span>\\n    </span>\\n  </button>\\n</span>\\n\\n@if (_hasTrailingIcon()) {\\n  <span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\">\\n    <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n  </span>\\n}\\n\", styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}@media(forced-colors: active){.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{forced-color-adjust:none}}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-outline-width, 1px);border-radius:var(--mat-chip-container-shape-radius, 8px);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-outline-color, var(--mat-sys-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mat-chip-focus-outline-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--secondary{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mat-chip-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-chip-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-chip-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mat-chip-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-chip-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-label-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mat-chip-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mat-chip-with-avatar-avatar-size, 24px);height:var(--mat-chip-with-avatar-avatar-size, 24px);font-size:var(--mat-chip-with-avatar-avatar-size, 24px)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__graphic{padding-left:0}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@media(forced-colors: active){.mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mat-mdc-standard-chip{border-radius:var(--mat-chip-container-shape-radius, 8px);height:var(--mat-chip-container-height, 32px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mat-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mat-chip-flat-disabled-selected-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}@media(forced-colors: active){.mat-mdc-standard-chip{outline:solid 1px}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mat-chip-with-avatar-avatar-shape-radius, 24px);width:var(--mat-chip-with-icon-icon-size, 18px);height:var(--mat-chip-with-icon-icon-size, 18px);font-size:var(--mat-chip-with-icon-icon-size, 18px)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-highlighted{--mat-chip-with-icon-icon-color: var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container));--mat-chip-elevated-container-color: var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container));--mat-chip-label-text-color: var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container));--mat-chip-outline-width: var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-hover-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-hover-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mat-chip-with-avatar-disabled-avatar-opacity, 0.38)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mat-chip-with-icon-disabled-icon-opacity, 0.38)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity, 1)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-edit,.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity, 1)}.mat-mdc-chip-edit:focus,.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity, 1)}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-edit:hover::after,.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-edit:focus::after,.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mat-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-edit::before,.mat-mdc-chip-remove::before{margin:calc(var(--mat-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}@media(forced-colors: active){.mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}}.mat-mdc-chip-action:focus .mat-focus-indicator::before{content:\\\"\\\"}.mdc-evolution-chip__icon,.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{min-height:fit-content}\\n\"] }]\n        }], propDecorators: { selectable: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], selected: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], selectionChange: [{\n                type: Output\n            }] } });\n\n/**\n * A directive that makes a span editable and exposes functions to modify and retrieve the\n * element's contents.\n */\nclass MatChipEditInput {\n    _elementRef = inject(ElementRef);\n    _document = inject(DOCUMENT);\n    constructor() { }\n    initialize(initialValue) {\n        this.getNativeElement().focus();\n        this.setValue(initialValue);\n    }\n    getNativeElement() {\n        return this._elementRef.nativeElement;\n    }\n    setValue(value) {\n        this.getNativeElement().textContent = value;\n        this._moveCursorToEndOfInput();\n    }\n    getValue() {\n        return this.getNativeElement().textContent || '';\n    }\n    _moveCursorToEndOfInput() {\n        const range = this._document.createRange();\n        range.selectNodeContents(this.getNativeElement());\n        range.collapse(false);\n        const sel = window.getSelection();\n        sel.removeAllRanges();\n        sel.addRange(range);\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipEditInput, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", type: MatChipEditInput, isStandalone: true, selector: \"span[matChipEditInput]\", host: { attributes: { \"role\": \"textbox\", \"tabindex\": \"-1\", \"contenteditable\": \"true\" }, classAttribute: \"mat-chip-edit-input\" }, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipEditInput, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'span[matChipEditInput]',\n                    host: {\n                        'class': 'mat-chip-edit-input',\n                        'role': 'textbox',\n                        'tabindex': '-1',\n                        'contenteditable': 'true',\n                    },\n                }]\n        }], ctorParameters: () => [] });\n\n/**\n * An extension of the MatChip component used with MatChipGrid and\n * the matChipInputFor directive.\n */\nclass MatChipRow extends MatChip {\n    basicChipAttrName = 'mat-basic-chip-row';\n    /**\n     * The editing action has to be triggered in a timeout. While we're waiting on it, a blur\n     * event might occur which will interrupt the editing. This flag is used to avoid interruptions\n     * while the editing action is being initialized.\n     */\n    _editStartPending = false;\n    editable = false;\n    /** Emitted when the chip is edited. */\n    edited = new EventEmitter();\n    /** The default chip edit input that is used if none is projected into this chip row. */\n    defaultEditInput;\n    /** The projected chip edit input. */\n    contentEditInput;\n    /**\n     * Set on a mousedown when the chip is already focused via mouse or keyboard.\n     *\n     * This allows us to ensure chip is already focused when deciding whether to enter the\n     * edit mode on a subsequent click. Otherwise, the chip appears focused when handling the\n     * first click event.\n     */\n    _alreadyFocused = false;\n    _isEditing = false;\n    constructor() {\n        super();\n        this.role = 'row';\n        this._onBlur.pipe(takeUntil(this.destroyed)).subscribe(() => {\n            if (this._isEditing && !this._editStartPending) {\n                this._onEditFinish();\n            }\n            this._alreadyFocused = false;\n        });\n    }\n    ngAfterViewInit() {\n        super.ngAfterViewInit();\n        // Sets _alreadyFocused (ahead of click) when chip already has focus.\n        this._ngZone.runOutsideAngular(() => {\n            this._elementRef.nativeElement.addEventListener('mousedown', () => (this._alreadyFocused = this._hasFocus()));\n        });\n    }\n    _hasLeadingActionIcon() {\n        // The leading action (edit) icon is hidden while editing.\n        return !this._isEditing && !!this.editIcon;\n    }\n    _hasTrailingIcon() {\n        // The trailing icon is hidden while editing.\n        return !this._isEditing && super._hasTrailingIcon();\n    }\n    /** Sends focus to the first gridcell when the user clicks anywhere inside the chip. */\n    _handleFocus() {\n        if (!this._isEditing && !this.disabled) {\n            this.focus();\n        }\n    }\n    _handleKeydown(event) {\n        if (event.keyCode === ENTER && !this.disabled) {\n            if (this._isEditing) {\n                event.preventDefault();\n                this._onEditFinish();\n            }\n            else if (this.editable) {\n                this._startEditing(event);\n            }\n        }\n        else if (this._isEditing) {\n            // Stop the event from reaching the chip set in order to avoid navigating.\n            event.stopPropagation();\n        }\n        else {\n            super._handleKeydown(event);\n        }\n    }\n    _handleClick(event) {\n        if (!this.disabled && this.editable && !this._isEditing && this._alreadyFocused) {\n            // Ensure click event not picked up unintentionally by other listeners, as\n            // once editing starts, the source element is detached from DOM.\n            event.preventDefault();\n            event.stopPropagation();\n            this._startEditing(event);\n        }\n    }\n    _handleDoubleclick(event) {\n        if (!this.disabled && this.editable) {\n            this._startEditing(event);\n        }\n    }\n    _edit() {\n        // markForCheck necessary for edit input to be rendered\n        this._changeDetectorRef.markForCheck();\n        this._startEditing();\n    }\n    _startEditing(event) {\n        if (!this.primaryAction ||\n            (this.removeIcon &&\n                !!event &&\n                this._getSourceAction(event.target) === this.removeIcon)) {\n            return;\n        }\n        // The value depends on the DOM so we need to extract it before we flip the flag.\n        const value = this.value;\n        this._isEditing = this._editStartPending = true;\n        // Defer initializing the input until after it has been added to the DOM.\n        afterNextRender(() => {\n            this._getEditInput().initialize(value);\n            // Necessary when using edit icon to prevent edit from aborting\n            setTimeout(() => this._ngZone.run(() => (this._editStartPending = false)));\n        }, { injector: this._injector });\n    }\n    _onEditFinish() {\n        this._isEditing = this._editStartPending = false;\n        this.edited.emit({ chip: this, value: this._getEditInput().getValue() });\n        // If the edit input is still focused or focus was returned to the body after it was destroyed,\n        // return focus to the chip contents.\n        if (this._document.activeElement === this._getEditInput().getNativeElement() ||\n            this._document.activeElement === this._document.body) {\n            this.primaryAction.focus();\n        }\n    }\n    _isRippleDisabled() {\n        return super._isRippleDisabled() || this._isEditing;\n    }\n    /**\n     * Gets the projected chip edit input, or the default input if none is projected in. One of these\n     * two values is guaranteed to be defined.\n     */\n    _getEditInput() {\n        return this.contentEditInput || this.defaultEditInput;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipRow, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"17.0.0\", version: \"20.2.0-rc.1\", type: MatChipRow, isStandalone: true, selector: \"mat-chip-row, [mat-chip-row], mat-basic-chip-row, [mat-basic-chip-row]\", inputs: { editable: \"editable\" }, outputs: { edited: \"edited\" }, host: { listeners: { \"focus\": \"_handleFocus()\", \"click\": \"_handleClick($event)\", \"dblclick\": \"_handleDoubleclick($event)\" }, properties: { \"class.mat-mdc-chip-with-avatar\": \"leadingIcon\", \"class.mat-mdc-chip-disabled\": \"disabled\", \"class.mat-mdc-chip-editing\": \"_isEditing\", \"class.mat-mdc-chip-editable\": \"editable\", \"class.mdc-evolution-chip--disabled\": \"disabled\", \"class.mdc-evolution-chip--with-leading-action\": \"_hasLeadingActionIcon()\", \"class.mdc-evolution-chip--with-trailing-action\": \"_hasTrailingIcon()\", \"class.mdc-evolution-chip--with-primary-graphic\": \"leadingIcon\", \"class.mdc-evolution-chip--with-primary-icon\": \"leadingIcon\", \"class.mdc-evolution-chip--with-avatar\": \"leadingIcon\", \"class.mat-mdc-chip-highlighted\": \"highlighted\", \"class.mat-mdc-chip-with-trailing-icon\": \"_hasTrailingIcon()\", \"id\": \"id\", \"attr.tabindex\": \"disabled ? null : -1\", \"attr.aria-label\": \"null\", \"attr.aria-description\": \"null\", \"attr.role\": \"role\" }, classAttribute: \"mat-mdc-chip mat-mdc-chip-row mdc-evolution-chip\" }, providers: [\n            { provide: MatChip, useExisting: MatChipRow },\n            { provide: MAT_CHIP, useExisting: MatChipRow },\n        ], queries: [{ propertyName: \"contentEditInput\", first: true, predicate: MatChipEditInput, descendants: true }], viewQueries: [{ propertyName: \"defaultEditInput\", first: true, predicate: MatChipEditInput, descendants: true }], usesInheritance: true, ngImport: i0, template: \"@if (!_isEditing) {\\n  <span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n}\\n\\n@if (_hasLeadingActionIcon()) {\\n  <span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--leading\\\" role=\\\"gridcell\\\">\\n    <ng-content select=\\\"[matChipEdit]\\\"></ng-content>\\n  </span>\\n}\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\" role=\\\"gridcell\\\"\\n    matChipAction\\n    [disabled]=\\\"disabled\\\"\\n    [attr.aria-description]=\\\"ariaDescription\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\">\\n  @if (leadingIcon) {\\n    <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n      <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n    </span>\\n  }\\n\\n  <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n    @if (_isEditing) {\\n      @if (contentEditInput) {\\n        <ng-content select=\\\"[matChipEditInput]\\\"></ng-content>\\n      } @else {\\n        <span matChipEditInput></span>\\n      }\\n    } @else {\\n      <ng-content></ng-content>\\n    }\\n\\n    <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-focus-indicator\\\" aria-hidden=\\\"true\\\"></span>\\n  </span>\\n</span>\\n\\n@if (_hasTrailingIcon()) {\\n  <span\\n    class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\"\\n    role=\\\"gridcell\\\">\\n    <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n  </span>\\n}\\n\", styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}@media(forced-colors: active){.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{forced-color-adjust:none}}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-outline-width, 1px);border-radius:var(--mat-chip-container-shape-radius, 8px);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-outline-color, var(--mat-sys-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mat-chip-focus-outline-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--secondary{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mat-chip-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-chip-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-chip-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mat-chip-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-chip-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-label-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mat-chip-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mat-chip-with-avatar-avatar-size, 24px);height:var(--mat-chip-with-avatar-avatar-size, 24px);font-size:var(--mat-chip-with-avatar-avatar-size, 24px)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__graphic{padding-left:0}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@media(forced-colors: active){.mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mat-mdc-standard-chip{border-radius:var(--mat-chip-container-shape-radius, 8px);height:var(--mat-chip-container-height, 32px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mat-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mat-chip-flat-disabled-selected-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}@media(forced-colors: active){.mat-mdc-standard-chip{outline:solid 1px}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mat-chip-with-avatar-avatar-shape-radius, 24px);width:var(--mat-chip-with-icon-icon-size, 18px);height:var(--mat-chip-with-icon-icon-size, 18px);font-size:var(--mat-chip-with-icon-icon-size, 18px)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-highlighted{--mat-chip-with-icon-icon-color: var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container));--mat-chip-elevated-container-color: var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container));--mat-chip-label-text-color: var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container));--mat-chip-outline-width: var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-hover-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-hover-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mat-chip-with-avatar-disabled-avatar-opacity, 0.38)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mat-chip-with-icon-disabled-icon-opacity, 0.38)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity, 1)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-edit,.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity, 1)}.mat-mdc-chip-edit:focus,.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity, 1)}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-edit:hover::after,.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-edit:focus::after,.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mat-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-edit::before,.mat-mdc-chip-remove::before{margin:calc(var(--mat-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}@media(forced-colors: active){.mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}}.mat-mdc-chip-action:focus .mat-focus-indicator::before{content:\\\"\\\"}.mdc-evolution-chip__icon,.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{min-height:fit-content}\\n\"], dependencies: [{ kind: \"directive\", type: MatChipAction, selector: \"[matChipAction]\", inputs: [\"isInteractive\", \"disabled\", \"tabIndex\", \"_allowFocusWhenDisabled\"] }, { kind: \"directive\", type: MatChipEditInput, selector: \"span[matChipEditInput]\" }], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipRow, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-chip-row, [mat-chip-row], mat-basic-chip-row, [mat-basic-chip-row]', host: {\n                        'class': 'mat-mdc-chip mat-mdc-chip-row mdc-evolution-chip',\n                        '[class.mat-mdc-chip-with-avatar]': 'leadingIcon',\n                        '[class.mat-mdc-chip-disabled]': 'disabled',\n                        '[class.mat-mdc-chip-editing]': '_isEditing',\n                        '[class.mat-mdc-chip-editable]': 'editable',\n                        '[class.mdc-evolution-chip--disabled]': 'disabled',\n                        '[class.mdc-evolution-chip--with-leading-action]': '_hasLeadingActionIcon()',\n                        '[class.mdc-evolution-chip--with-trailing-action]': '_hasTrailingIcon()',\n                        '[class.mdc-evolution-chip--with-primary-graphic]': 'leadingIcon',\n                        '[class.mdc-evolution-chip--with-primary-icon]': 'leadingIcon',\n                        '[class.mdc-evolution-chip--with-avatar]': 'leadingIcon',\n                        '[class.mat-mdc-chip-highlighted]': 'highlighted',\n                        '[class.mat-mdc-chip-with-trailing-icon]': '_hasTrailingIcon()',\n                        '[id]': 'id',\n                        // Has to have a negative tabindex in order to capture\n                        // focus and redirect it to the primary action.\n                        '[attr.tabindex]': 'disabled ? null : -1',\n                        '[attr.aria-label]': 'null',\n                        '[attr.aria-description]': 'null',\n                        '[attr.role]': 'role',\n                        '(focus)': '_handleFocus()',\n                        '(click)': '_handleClick($event)',\n                        '(dblclick)': '_handleDoubleclick($event)',\n                    }, providers: [\n                        { provide: MatChip, useExisting: MatChipRow },\n                        { provide: MAT_CHIP, useExisting: MatChipRow },\n                    ], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, imports: [MatChipAction, MatChipEditInput], template: \"@if (!_isEditing) {\\n  <span class=\\\"mat-mdc-chip-focus-overlay\\\"></span>\\n}\\n\\n@if (_hasLeadingActionIcon()) {\\n  <span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--leading\\\" role=\\\"gridcell\\\">\\n    <ng-content select=\\\"[matChipEdit]\\\"></ng-content>\\n  </span>\\n}\\n<span class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--primary\\\" role=\\\"gridcell\\\"\\n    matChipAction\\n    [disabled]=\\\"disabled\\\"\\n    [attr.aria-description]=\\\"ariaDescription\\\"\\n    [attr.aria-label]=\\\"ariaLabel\\\">\\n  @if (leadingIcon) {\\n    <span class=\\\"mdc-evolution-chip__graphic mat-mdc-chip-graphic\\\">\\n      <ng-content select=\\\"mat-chip-avatar, [matChipAvatar]\\\"></ng-content>\\n    </span>\\n  }\\n\\n  <span class=\\\"mdc-evolution-chip__text-label mat-mdc-chip-action-label\\\">\\n    @if (_isEditing) {\\n      @if (contentEditInput) {\\n        <ng-content select=\\\"[matChipEditInput]\\\"></ng-content>\\n      } @else {\\n        <span matChipEditInput></span>\\n      }\\n    } @else {\\n      <ng-content></ng-content>\\n    }\\n\\n    <span class=\\\"mat-mdc-chip-primary-focus-indicator mat-focus-indicator\\\" aria-hidden=\\\"true\\\"></span>\\n  </span>\\n</span>\\n\\n@if (_hasTrailingIcon()) {\\n  <span\\n    class=\\\"mdc-evolution-chip__cell mdc-evolution-chip__cell--trailing\\\"\\n    role=\\\"gridcell\\\">\\n    <ng-content select=\\\"mat-chip-trailing-icon,[matChipRemove],[matChipTrailingIcon]\\\"></ng-content>\\n  </span>\\n}\\n\", styles: [\".mdc-evolution-chip,.mdc-evolution-chip__cell,.mdc-evolution-chip__action{display:inline-flex;align-items:center}.mdc-evolution-chip{position:relative;max-width:100%}.mdc-evolution-chip__cell,.mdc-evolution-chip__action{height:100%}.mdc-evolution-chip__cell--primary{flex-basis:100%;overflow-x:hidden}.mdc-evolution-chip__cell--trailing{flex:1 0 auto}.mdc-evolution-chip__action{align-items:center;background:none;border:none;box-sizing:content-box;cursor:pointer;display:inline-flex;justify-content:center;outline:none;padding:0;text-decoration:none;color:inherit}.mdc-evolution-chip__action--presentational{cursor:auto}.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{pointer-events:none}@media(forced-colors: active){.mdc-evolution-chip--disabled,.mdc-evolution-chip__action:disabled{forced-color-adjust:none}}.mdc-evolution-chip__action--primary{font:inherit;letter-spacing:inherit;white-space:inherit;overflow-x:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-outline-width, 1px);border-radius:var(--mat-chip-container-shape-radius, 8px);box-sizing:border-box;content:\\\"\\\";height:100%;left:0;position:absolute;pointer-events:none;top:0;width:100%;z-index:1;border-style:solid}.mat-mdc-standard-chip .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-outline-color, var(--mat-sys-outline))}.mdc-evolution-chip__action--primary:not(.mdc-evolution-chip__action--presentational):not(.mdc-ripple-upgraded):focus::before{border-color:var(--mat-chip-focus-outline-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--primary::before{border-color:var(--mat-chip-disabled-outline-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__action--primary::before{border-width:var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-basic-chip .mdc-evolution-chip__action--primary{font:inherit}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}.mat-mdc-standard-chip.mdc-evolution-chip--with-leading-action.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:0;padding-right:12px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__action--primary{padding-left:12px;padding-right:0}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--primary{padding-left:0;padding-right:0}.mdc-evolution-chip__action--secondary{position:relative;overflow:visible}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-trailing-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__action--secondary{color:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-standard-chip.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__action--secondary{padding-left:8px;padding-right:8px}.mdc-evolution-chip__text-label{-webkit-user-select:none;user-select:none;white-space:nowrap;text-overflow:ellipsis;overflow:hidden}.mat-mdc-standard-chip .mdc-evolution-chip__text-label{font-family:var(--mat-chip-label-text-font, var(--mat-sys-label-large-font));line-height:var(--mat-chip-label-text-line-height, var(--mat-sys-label-large-line-height));font-size:var(--mat-chip-label-text-size, var(--mat-sys-label-large-size));font-weight:var(--mat-chip-label-text-weight, var(--mat-sys-label-large-weight));letter-spacing:var(--mat-chip-label-text-tracking, var(--mat-sys-label-large-tracking))}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-label-text-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__text-label{color:var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label,.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__text-label{color:var(--mat-chip-disabled-label-text-color, color-mix(in srgb, var(--mat-sys-on-surface) 38%, transparent))}.mdc-evolution-chip__graphic{align-items:center;display:inline-flex;justify-content:center;overflow:hidden;pointer-events:none;position:relative;flex:1 0 auto}.mat-mdc-standard-chip .mdc-evolution-chip__graphic{width:var(--mat-chip-with-avatar-avatar-size, 24px);height:var(--mat-chip-with-avatar-avatar-size, 24px);font-size:var(--mat-chip-with-avatar-avatar-size, 24px)}.mdc-evolution-chip--selecting .mdc-evolution-chip__graphic{transition:width 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selectable:not(.mdc-evolution-chip--selected):not(.mdc-evolution-chip--with-primary-icon) .mdc-evolution-chip__graphic{width:0}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mat-mdc-standard-chip.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:6px;padding-right:6px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:4px;padding-right:8px}[dir=rtl] .mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-trailing-action .mdc-evolution-chip__graphic{padding-left:8px;padding-right:4px}.mdc-evolution-chip--with-avatar.mdc-evolution-chip--with-primary-graphic.mdc-evolution-chip--with-leading-action .mdc-evolution-chip__graphic{padding-left:0}.mdc-evolution-chip__checkmark{position:absolute;opacity:0;top:50%;left:50%;height:20px;width:20px}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__checkmark{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark{transition:transform 150ms 0ms cubic-bezier(0.4, 0, 0.2, 1);transform:translate(-75%, -50%)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{transform:translate(-50%, -50%);opacity:1}.mdc-evolution-chip__checkmark-svg{display:block}.mdc-evolution-chip__checkmark-path{stroke-width:2px;stroke-dasharray:29.7833385;stroke-dashoffset:29.7833385;stroke:currentColor}.mdc-evolution-chip--selecting .mdc-evolution-chip__checkmark-path{transition:stroke-dashoffset 150ms 45ms cubic-bezier(0.4, 0, 0.2, 1)}.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark-path{stroke-dashoffset:0}@media(forced-colors: active){.mdc-evolution-chip__checkmark-path{stroke:CanvasText !important}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--trailing{height:18px;width:18px;font-size:18px}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove{opacity:calc(var(--mat-chip-trailing-action-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing.mat-mdc-chip-remove:focus{opacity:calc(var(--mat-chip-trailing-action-focus-opacity, 1)*var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38))}.mat-mdc-standard-chip{border-radius:var(--mat-chip-container-shape-radius, 8px);height:var(--mat-chip-container-height, 32px)}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-container-color, transparent)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{background-color:var(--mat-chip-elevated-disabled-container-color)}.mat-mdc-standard-chip.mdc-evolution-chip--selected:not(.mdc-evolution-chip--disabled){background-color:var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled{background-color:var(--mat-chip-flat-disabled-selected-container-color, color-mix(in srgb, var(--mat-sys-on-surface) 12%, transparent))}@media(forced-colors: active){.mat-mdc-standard-chip{outline:solid 1px}}.mat-mdc-standard-chip .mdc-evolution-chip__icon--primary{border-radius:var(--mat-chip-with-avatar-avatar-shape-radius, 24px);width:var(--mat-chip-with-icon-icon-size, 18px);height:var(--mat-chip-with-icon-icon-size, 18px);font-size:var(--mat-chip-with-icon-icon-size, 18px)}.mdc-evolution-chip--selected .mdc-evolution-chip__icon--primary{opacity:0}.mat-mdc-standard-chip:not(.mdc-evolution-chip--disabled) .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-icon-color, var(--mat-sys-on-surface-variant))}.mat-mdc-standard-chip.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--primary{color:var(--mat-chip-with-icon-disabled-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-highlighted{--mat-chip-with-icon-icon-color: var(--mat-chip-with-icon-selected-icon-color, var(--mat-sys-on-secondary-container));--mat-chip-elevated-container-color: var(--mat-chip-elevated-selected-container-color, var(--mat-sys-secondary-container));--mat-chip-label-text-color: var(--mat-chip-selected-label-text-color, var(--mat-sys-on-secondary-container));--mat-chip-outline-width: var(--mat-chip-flat-selected-outline-width, 0)}.mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-selected .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-chip:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-hover-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-focus-overlay .mat-mdc-chip-selected:hover,.mat-mdc-chip-highlighted:hover .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-hover-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-focus-state-layer-color, var(--mat-sys-on-surface-variant));opacity:var(--mat-chip-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected.cdk-focused .mat-mdc-chip-focus-overlay,.mat-mdc-chip-highlighted.cdk-focused .mat-mdc-chip-focus-overlay{background:var(--mat-chip-selected-focus-state-layer-color, var(--mat-sys-on-secondary-container));opacity:var(--mat-chip-selected-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mdc-evolution-chip--disabled:not(.mdc-evolution-chip--selected) .mat-mdc-chip-avatar{opacity:var(--mat-chip-with-avatar-disabled-avatar-opacity, 0.38)}.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{opacity:var(--mat-chip-with-trailing-icon-disabled-trailing-icon-opacity, 0.38)}.mdc-evolution-chip--disabled.mdc-evolution-chip--selected .mdc-evolution-chip__checkmark{opacity:var(--mat-chip-with-icon-disabled-icon-opacity, 0.38)}.mat-mdc-standard-chip.mdc-evolution-chip--disabled{opacity:var(--mat-chip-disabled-container-opacity, 1)}.mat-mdc-standard-chip.mdc-evolution-chip--selected .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-trailing-icon-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip.mdc-evolution-chip--selected.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing,.mat-mdc-standard-chip.mat-mdc-chip-highlighted.mdc-evolution-chip--disabled .mdc-evolution-chip__icon--trailing{color:var(--mat-chip-selected-disabled-trailing-icon-color, var(--mat-sys-on-surface))}.mat-mdc-chip-edit,.mat-mdc-chip-remove{opacity:var(--mat-chip-trailing-action-opacity, 1)}.mat-mdc-chip-edit:focus,.mat-mdc-chip-remove:focus{opacity:var(--mat-chip-trailing-action-focus-opacity, 1)}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{background-color:var(--mat-chip-trailing-action-state-layer-color, var(--mat-sys-on-surface-variant))}.mat-mdc-chip-edit:hover::after,.mat-mdc-chip-remove:hover::after{opacity:var(--mat-chip-trailing-action-hover-state-layer-opacity, var(--mat-sys-hover-state-layer-opacity))}.mat-mdc-chip-edit:focus::after,.mat-mdc-chip-remove:focus::after{opacity:var(--mat-chip-trailing-action-focus-state-layer-opacity, var(--mat-sys-focus-state-layer-opacity))}.mat-mdc-chip-selected .mat-mdc-chip-remove::after,.mat-mdc-chip-highlighted .mat-mdc-chip-remove::after{background-color:var(--mat-chip-selected-trailing-action-state-layer-color, var(--mat-sys-on-secondary-container))}.mat-mdc-standard-chip{-webkit-tap-highlight-color:rgba(0,0,0,0)}.mat-mdc-standard-chip .mdc-evolution-chip__cell--primary,.mat-mdc-standard-chip .mdc-evolution-chip__action--primary,.mat-mdc-standard-chip .mat-mdc-chip-action-label{overflow:visible}.mat-mdc-standard-chip .mat-mdc-chip-graphic,.mat-mdc-standard-chip .mat-mdc-chip-trailing-icon{box-sizing:content-box}.mat-mdc-standard-chip._mat-animation-noopable,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__graphic,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark,.mat-mdc-standard-chip._mat-animation-noopable .mdc-evolution-chip__checkmark-path{transition-duration:1ms;animation-duration:1ms}.mat-mdc-chip-focus-overlay{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;opacity:0;border-radius:inherit;transition:opacity 150ms linear}._mat-animation-noopable .mat-mdc-chip-focus-overlay{transition:none}.mat-mdc-basic-chip .mat-mdc-chip-focus-overlay{display:none}.mat-mdc-chip .mat-ripple.mat-mdc-chip-ripple{top:0;left:0;right:0;bottom:0;position:absolute;pointer-events:none;border-radius:inherit}.mat-mdc-chip-avatar{text-align:center;line-height:1;color:var(--mat-chip-with-icon-icon-color, currentColor)}.mat-mdc-chip{position:relative;z-index:0}.mat-mdc-chip-action-label{text-align:left;z-index:1}[dir=rtl] .mat-mdc-chip-action-label{text-align:right}.mat-mdc-chip.mdc-evolution-chip--with-trailing-action .mat-mdc-chip-action-label{position:relative}.mat-mdc-chip-action-label .mat-mdc-chip-primary-focus-indicator{position:absolute;top:0;right:0;bottom:0;left:0;pointer-events:none}.mat-mdc-chip-action-label .mat-focus-indicator::before{margin:calc(calc(var(--mat-focus-indicator-border-width, 3px) + 2px)*-1)}.mat-mdc-chip-edit::before,.mat-mdc-chip-remove::before{margin:calc(var(--mat-focus-indicator-border-width, 3px)*-1);left:8px;right:8px}.mat-mdc-chip-edit::after,.mat-mdc-chip-remove::after{content:\\\"\\\";display:block;opacity:0;position:absolute;top:-3px;bottom:-3px;left:5px;right:5px;border-radius:50%;box-sizing:border-box;padding:12px;margin:-12px;background-clip:content-box}.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{width:18px;height:18px;font-size:18px;box-sizing:content-box}.mat-chip-edit-input{cursor:text;display:inline-block;color:inherit;outline:0}@media(forced-colors: active){.mat-mdc-chip-selected:not(.mat-mdc-chip-multiple){outline-width:3px}}.mat-mdc-chip-action:focus .mat-focus-indicator::before{content:\\\"\\\"}.mdc-evolution-chip__icon,.mat-mdc-chip-edit .mat-icon,.mat-mdc-chip-remove .mat-icon{min-height:fit-content}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { editable: [{\n                type: Input\n            }], edited: [{\n                type: Output\n            }], defaultEditInput: [{\n                type: ViewChild,\n                args: [MatChipEditInput]\n            }], contentEditInput: [{\n                type: ContentChild,\n                args: [MatChipEditInput]\n            }] } });\n\n/**\n * Basic container component for the MatChip component.\n *\n * Extended by MatChipListbox and MatChipGrid for different interaction patterns.\n */\nclass MatChipSet {\n    _elementRef = inject(ElementRef);\n    _changeDetectorRef = inject(ChangeDetectorRef);\n    _dir = inject(Directionality, { optional: true });\n    /** Index of the last destroyed chip that had focus. */\n    _lastDestroyedFocusedChipIndex = null;\n    /** Used to manage focus within the chip list. */\n    _keyManager;\n    /** Subject that emits when the component has been destroyed. */\n    _destroyed = new Subject();\n    /** Role to use if it hasn't been overwritten by the user. */\n    _defaultRole = 'presentation';\n    /** Combined stream of all of the child chips' focus events. */\n    get chipFocusChanges() {\n        return this._getChipStream(chip => chip._onFocus);\n    }\n    /** Combined stream of all of the child chips' destroy events. */\n    get chipDestroyedChanges() {\n        return this._getChipStream(chip => chip.destroyed);\n    }\n    /** Combined stream of all of the child chips' remove events. */\n    get chipRemovedChanges() {\n        return this._getChipStream(chip => chip.removed);\n    }\n    /** Whether the chip set is disabled. */\n    get disabled() {\n        return this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        this._syncChipsState();\n    }\n    _disabled = false;\n    /** Whether the chip list contains chips or not. */\n    get empty() {\n        return !this._chips || this._chips.length === 0;\n    }\n    /** The ARIA role applied to the chip set. */\n    get role() {\n        if (this._explicitRole) {\n            return this._explicitRole;\n        }\n        return this.empty ? null : this._defaultRole;\n    }\n    /** Tabindex of the chip set. */\n    tabIndex = 0;\n    set role(value) {\n        this._explicitRole = value;\n    }\n    _explicitRole = null;\n    /** Whether any of the chips inside of this chip-set has focus. */\n    get focused() {\n        return this._hasFocusedChip();\n    }\n    /** The chips that are part of this chip set. */\n    _chips;\n    /** Flat list of all the actions contained within the chips. */\n    _chipActions = new QueryList();\n    constructor() { }\n    ngAfterViewInit() {\n        this._setUpFocusManagement();\n        this._trackChipSetChanges();\n        this._trackDestroyedFocusedChip();\n    }\n    ngOnDestroy() {\n        this._keyManager?.destroy();\n        this._chipActions.destroy();\n        this._destroyed.next();\n        this._destroyed.complete();\n    }\n    /** Checks whether any of the chips is focused. */\n    _hasFocusedChip() {\n        return this._chips && this._chips.some(chip => chip._hasFocus());\n    }\n    /** Syncs the chip-set's state with the individual chips. */\n    _syncChipsState() {\n        this._chips?.forEach(chip => {\n            chip._chipListDisabled = this._disabled;\n            chip._changeDetectorRef.markForCheck();\n        });\n    }\n    /** Dummy method for subclasses to override. Base chip set cannot be focused. */\n    focus() { }\n    /** Handles keyboard events on the chip set. */\n    _handleKeydown(event) {\n        if (this._originatesFromChip(event)) {\n            this._keyManager.onKeydown(event);\n        }\n    }\n    /**\n     * Utility to ensure all indexes are valid.\n     *\n     * @param index The index to be checked.\n     * @returns True if the index is valid for our list of chips.\n     */\n    _isValidIndex(index) {\n        return index >= 0 && index < this._chips.length;\n    }\n    /**\n     * Removes the `tabindex` from the chip set and resets it back afterwards, allowing the\n     * user to tab out of it. This prevents the set from capturing focus and redirecting\n     * it back to the first chip, creating a focus trap, if it user tries to tab away.\n     */\n    _allowFocusEscape() {\n        const previous = this._elementRef.nativeElement.tabIndex;\n        if (previous !== -1) {\n            // Set the tabindex directly on the element, instead of going through\n            // the data binding, because we aren't guaranteed that change detection\n            // will run quickly enough to allow focus to escape.\n            this._elementRef.nativeElement.tabIndex = -1;\n            // Note that this needs to be a `setTimeout`, because a `Promise.resolve`\n            // doesn't allow enough time for the focus to escape.\n            setTimeout(() => (this._elementRef.nativeElement.tabIndex = previous));\n        }\n    }\n    /**\n     * Gets a stream of events from all the chips within the set.\n     * The stream will automatically incorporate any newly-added chips.\n     */\n    _getChipStream(mappingFunction) {\n        return this._chips.changes.pipe(startWith(null), switchMap(() => merge(...this._chips.map(mappingFunction))));\n    }\n    /** Checks whether an event comes from inside a chip element. */\n    _originatesFromChip(event) {\n        let currentElement = event.target;\n        while (currentElement && currentElement !== this._elementRef.nativeElement) {\n            if (currentElement.classList.contains('mat-mdc-chip')) {\n                return true;\n            }\n            currentElement = currentElement.parentElement;\n        }\n        return false;\n    }\n    /** Sets up the chip set's focus management logic. */\n    _setUpFocusManagement() {\n        // Create a flat `QueryList` containing the actions of all of the chips.\n        // This allows us to navigate both within the chip and move to the next/previous\n        // one using the existing `ListKeyManager`.\n        this._chips.changes.pipe(startWith(this._chips)).subscribe((chips) => {\n            const actions = [];\n            chips.forEach(chip => chip._getActions().forEach(action => actions.push(action)));\n            this._chipActions.reset(actions);\n            this._chipActions.notifyOnChanges();\n        });\n        this._keyManager = new FocusKeyManager(this._chipActions)\n            .withVerticalOrientation()\n            .withHorizontalOrientation(this._dir ? this._dir.value : 'ltr')\n            .withHomeAndEnd()\n            .skipPredicate(action => this._skipPredicate(action));\n        // Keep the manager active index in sync so that navigation picks\n        // up from the current chip if the user clicks into the list directly.\n        this.chipFocusChanges.pipe(takeUntil(this._destroyed)).subscribe(({ chip }) => {\n            const action = chip._getSourceAction(document.activeElement);\n            if (action) {\n                this._keyManager.updateActiveItem(action);\n            }\n        });\n        this._dir?.change\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(direction => this._keyManager.withHorizontalOrientation(direction));\n    }\n    /**\n     * Determines if key manager should avoid putting a given chip action in the tab index. Skip\n     * non-interactive and disabled actions since the user can't do anything with them.\n     */\n    _skipPredicate(action) {\n        // Skip chips that the user cannot interact with. `mat-chip-set` does not permit focusing disabled\n        // chips.\n        return !action.isInteractive || action.disabled;\n    }\n    /** Listens to changes in the chip set and syncs up the state of the individual chips. */\n    _trackChipSetChanges() {\n        this._chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            if (this.disabled) {\n                // Since this happens after the content has been\n                // checked, we need to defer it to the next tick.\n                Promise.resolve().then(() => this._syncChipsState());\n            }\n            this._redirectDestroyedChipFocus();\n        });\n    }\n    /** Starts tracking the destroyed chips in order to capture the focused one. */\n    _trackDestroyedFocusedChip() {\n        this.chipDestroyedChanges.pipe(takeUntil(this._destroyed)).subscribe((event) => {\n            // If the focused chip is destroyed, save its index so that we can move focus to the next\n            // chip. We only save the index here, rather than move the focus immediately, because we want\n            // to wait until the chip is removed from the chip list before focusing the next one. This\n            // allows us to keep focus on the same index if the chip gets swapped out.\n            const chipArray = this._chips.toArray();\n            const chipIndex = chipArray.indexOf(event.chip);\n            const hasFocus = event.chip._hasFocus();\n            const wasLastFocused = event.chip._hadFocusOnRemove &&\n                this._keyManager.activeItem &&\n                event.chip._getActions().includes(this._keyManager.activeItem);\n            // Note that depending on the timing, the chip might've already lost focus by the\n            // time we check this. We need the `wasLastFocused` as a fallback to detect such cases.\n            // In `wasLastFocused` we also need to ensure that the chip actually had focus when it was\n            // deleted so that we don't steal away the user's focus after they've moved on from the chip.\n            const shouldMoveFocus = hasFocus || wasLastFocused;\n            if (this._isValidIndex(chipIndex) && shouldMoveFocus) {\n                this._lastDestroyedFocusedChipIndex = chipIndex;\n            }\n        });\n    }\n    /**\n     * Finds the next appropriate chip to move focus to,\n     * if the currently-focused chip is destroyed.\n     */\n    _redirectDestroyedChipFocus() {\n        if (this._lastDestroyedFocusedChipIndex == null) {\n            return;\n        }\n        if (this._chips.length) {\n            const newIndex = Math.min(this._lastDestroyedFocusedChipIndex, this._chips.length - 1);\n            const chipToFocus = this._chips.toArray()[newIndex];\n            if (chipToFocus.disabled) {\n                // If we're down to one disabled chip, move focus back to the set.\n                if (this._chips.length === 1) {\n                    this.focus();\n                }\n                else {\n                    this._keyManager.setPreviousItemActive();\n                }\n            }\n            else {\n                chipToFocus.focus();\n            }\n        }\n        else {\n            this.focus();\n        }\n        this._lastDestroyedFocusedChipIndex = null;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipSet, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"20.2.0-rc.1\", type: MatChipSet, isStandalone: true, selector: \"mat-chip-set\", inputs: { disabled: [\"disabled\", \"disabled\", booleanAttribute], role: \"role\", tabIndex: [\"tabIndex\", \"tabIndex\", (value) => (value == null ? 0 : numberAttribute(value))] }, host: { listeners: { \"keydown\": \"_handleKeydown($event)\" }, properties: { \"attr.role\": \"role\" }, classAttribute: \"mat-mdc-chip-set mdc-evolution-chip-set\" }, queries: [{ propertyName: \"_chips\", predicate: MatChip, descendants: true }], ngImport: i0, template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `, isInline: true, styles: [\".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-moz-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-webkit-input-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input:-ms-input-placeholder{opacity:1}.mat-mdc-chip-set+input.mat-mdc-chip-input{margin-left:0;margin-right:0}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipSet, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-chip-set', template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `, host: {\n                        'class': 'mat-mdc-chip-set mdc-evolution-chip-set',\n                        '(keydown)': '_handleKeydown($event)',\n                        '[attr.role]': 'role',\n                    }, encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-moz-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-webkit-input-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input:-ms-input-placeholder{opacity:1}.mat-mdc-chip-set+input.mat-mdc-chip-input{margin-left:0;margin-right:0}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], role: [{\n                type: Input\n            }], tabIndex: [{\n                type: Input,\n                args: [{\n                        transform: (value) => (value == null ? 0 : numberAttribute(value)),\n                    }]\n            }], _chips: [{\n                type: ContentChildren,\n                args: [MatChip, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }] } });\n\n/** Change event object that is emitted when the chip listbox value has changed. */\nclass MatChipListboxChange {\n    source;\n    value;\n    constructor(\n    /** Chip listbox that emitted the event. */\n    source, \n    /** Value of the chip listbox when the event was emitted. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n/**\n * Provider Expression that allows mat-chip-listbox to register as a ControlValueAccessor.\n * This allows it to support [(ngModel)].\n * @docs-private\n */\nconst MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR = {\n    provide: NG_VALUE_ACCESSOR,\n    useExisting: forwardRef(() => MatChipListbox),\n    multi: true,\n};\n/**\n * An extension of the MatChipSet component that supports chip selection.\n * Used with MatChipOption chips.\n */\nclass MatChipListbox extends MatChipSet {\n    /**\n     * Function when touched. Set as part of ControlValueAccessor implementation.\n     * @docs-private\n     */\n    _onTouched = () => { };\n    /**\n     * Function when changed. Set as part of ControlValueAccessor implementation.\n     * @docs-private\n     */\n    _onChange = () => { };\n    // TODO: MDC uses `grid` here\n    _defaultRole = 'listbox';\n    /** Default chip options. */\n    _defaultOptions = inject(MAT_CHIPS_DEFAULT_OPTIONS, { optional: true });\n    /** Whether the user should be allowed to select multiple chips. */\n    get multiple() {\n        return this._multiple;\n    }\n    set multiple(value) {\n        this._multiple = value;\n        this._syncListboxProperties();\n    }\n    _multiple = false;\n    /** The array of selected chips inside the chip listbox. */\n    get selected() {\n        const selectedChips = this._chips.toArray().filter(chip => chip.selected);\n        return this.multiple ? selectedChips : selectedChips[0];\n    }\n    /** Orientation of the chip list. */\n    ariaOrientation = 'horizontal';\n    /**\n     * Whether or not this chip listbox is selectable.\n     *\n     * When a chip listbox is not selectable, the selected states for all\n     * the chips inside the chip listbox are always ignored.\n     */\n    get selectable() {\n        return this._selectable;\n    }\n    set selectable(value) {\n        this._selectable = value;\n        this._syncListboxProperties();\n    }\n    _selectable = true;\n    /**\n     * A function to compare the option values with the selected values. The first argument\n     * is a value from an option. The second is a value from the selection. A boolean\n     * should be returned.\n     */\n    compareWith = (o1, o2) => o1 === o2;\n    /** Whether this chip listbox is required. */\n    required = false;\n    /** Whether checkmark indicator for single-selection options is hidden. */\n    get hideSingleSelectionIndicator() {\n        return this._hideSingleSelectionIndicator;\n    }\n    set hideSingleSelectionIndicator(value) {\n        this._hideSingleSelectionIndicator = value;\n        this._syncListboxProperties();\n    }\n    _hideSingleSelectionIndicator = this._defaultOptions?.hideSingleSelectionIndicator ?? false;\n    /** Combined stream of all of the child chips' selection change events. */\n    get chipSelectionChanges() {\n        return this._getChipStream(chip => chip.selectionChange);\n    }\n    /** Combined stream of all of the child chips' blur events. */\n    get chipBlurChanges() {\n        return this._getChipStream(chip => chip._onBlur);\n    }\n    /** The value of the listbox, which is the combined value of the selected chips. */\n    get value() {\n        return this._value;\n    }\n    set value(value) {\n        if (this._chips && this._chips.length) {\n            this._setSelectionByValue(value, false);\n        }\n        this._value = value;\n    }\n    _value;\n    /** Event emitted when the selected chip listbox value has been changed by the user. */\n    change = new EventEmitter();\n    _chips = undefined;\n    ngAfterContentInit() {\n        this._chips.changes.pipe(startWith(null), takeUntil(this._destroyed)).subscribe(() => {\n            if (this.value !== undefined) {\n                Promise.resolve().then(() => {\n                    this._setSelectionByValue(this.value, false);\n                });\n            }\n            // Update listbox selectable/multiple properties on chips\n            this._syncListboxProperties();\n        });\n        this.chipBlurChanges.pipe(takeUntil(this._destroyed)).subscribe(() => this._blur());\n        this.chipSelectionChanges.pipe(takeUntil(this._destroyed)).subscribe(event => {\n            if (!this.multiple) {\n                this._chips.forEach(chip => {\n                    if (chip !== event.source) {\n                        chip._setSelectedState(false, false, false);\n                    }\n                });\n            }\n            if (event.isUserInput) {\n                this._propagateChanges();\n            }\n        });\n    }\n    /**\n     * Focuses the first selected chip in this chip listbox, or the first non-disabled chip when there\n     * are no selected chips.\n     */\n    focus() {\n        if (this.disabled) {\n            return;\n        }\n        const firstSelectedChip = this._getFirstSelectedChip();\n        if (firstSelectedChip && !firstSelectedChip.disabled) {\n            firstSelectedChip.focus();\n        }\n        else if (this._chips.length > 0) {\n            this._keyManager.setFirstItemActive();\n        }\n        else {\n            this._elementRef.nativeElement.focus();\n        }\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    writeValue(value) {\n        if (value != null) {\n            this.value = value;\n        }\n        else {\n            this.value = undefined;\n        }\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n    }\n    /** Selects all chips with value. */\n    _setSelectionByValue(value, isUserInput = true) {\n        this._clearSelection();\n        if (Array.isArray(value)) {\n            value.forEach(currentValue => this._selectValue(currentValue, isUserInput));\n        }\n        else {\n            this._selectValue(value, isUserInput);\n        }\n    }\n    /** When blurred, marks the field as touched when focus moved outside the chip listbox. */\n    _blur() {\n        if (!this.disabled) {\n            // Wait to see if focus moves to an individual chip.\n            setTimeout(() => {\n                if (!this.focused) {\n                    this._markAsTouched();\n                }\n            });\n        }\n    }\n    _keydown(event) {\n        if (event.keyCode === TAB) {\n            super._allowFocusEscape();\n        }\n    }\n    /** Marks the field as touched */\n    _markAsTouched() {\n        this._onTouched();\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Emits change event to set the model value. */\n    _propagateChanges() {\n        let valueToEmit = null;\n        if (Array.isArray(this.selected)) {\n            valueToEmit = this.selected.map(chip => chip.value);\n        }\n        else {\n            valueToEmit = this.selected ? this.selected.value : undefined;\n        }\n        this._value = valueToEmit;\n        this.change.emit(new MatChipListboxChange(this, valueToEmit));\n        this._onChange(valueToEmit);\n        this._changeDetectorRef.markForCheck();\n    }\n    /**\n     * Deselects every chip in the listbox.\n     * @param skip Chip that should not be deselected.\n     */\n    _clearSelection(skip) {\n        this._chips.forEach(chip => {\n            if (chip !== skip) {\n                chip.deselect();\n            }\n        });\n    }\n    /**\n     * Finds and selects the chip based on its value.\n     * @returns Chip that has the corresponding value.\n     */\n    _selectValue(value, isUserInput) {\n        const correspondingChip = this._chips.find(chip => {\n            return chip.value != null && this.compareWith(chip.value, value);\n        });\n        if (correspondingChip) {\n            isUserInput ? correspondingChip.selectViaInteraction() : correspondingChip.select();\n        }\n        return correspondingChip;\n    }\n    /** Syncs the chip-listbox selection state with the individual chips. */\n    _syncListboxProperties() {\n        if (this._chips) {\n            // Defer setting the value in order to avoid the \"Expression\n            // has changed after it was checked\" errors from Angular.\n            Promise.resolve().then(() => {\n                this._chips.forEach(chip => {\n                    chip._chipListMultiple = this.multiple;\n                    chip.chipListSelectable = this._selectable;\n                    chip._chipListHideSingleSelectionIndicator = this.hideSingleSelectionIndicator;\n                    chip._changeDetectorRef.markForCheck();\n                });\n            });\n        }\n    }\n    /** Returns the first selected chip in this listbox, or undefined if no chips are selected. */\n    _getFirstSelectedChip() {\n        if (Array.isArray(this.selected)) {\n            return this.selected.length ? this.selected[0] : undefined;\n        }\n        else {\n            return this.selected;\n        }\n    }\n    /**\n     * Determines if key manager should avoid putting a given chip action in the tab index. Skip\n     * non-interactive actions since the user can't do anything with them.\n     */\n    _skipPredicate(action) {\n        // Override the skip predicate in the base class to avoid skipping disabled chips. Allow\n        // disabled chip options to receive focus to align with WAI ARIA recommendation. Normally WAI\n        // ARIA's instructions are to exclude disabled items from the tab order, but it makes a few\n        // exceptions for compound widgets.\n        //\n        // From [Developing a Keyboard Interface](\n        // https://www.w3.org/WAI/ARIA/apg/practices/keyboard-interface/):\n        //   \"For the following composite widget elements, keep them focusable when disabled: Options in a\n        //   Listbox...\"\n        return !action.isInteractive;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipListbox, deps: null, target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"20.2.0-rc.1\", type: MatChipListbox, isStandalone: true, selector: \"mat-chip-listbox\", inputs: { multiple: [\"multiple\", \"multiple\", booleanAttribute], ariaOrientation: [\"aria-orientation\", \"ariaOrientation\"], selectable: [\"selectable\", \"selectable\", booleanAttribute], compareWith: \"compareWith\", required: [\"required\", \"required\", booleanAttribute], hideSingleSelectionIndicator: [\"hideSingleSelectionIndicator\", \"hideSingleSelectionIndicator\", booleanAttribute], value: \"value\" }, outputs: { change: \"change\" }, host: { listeners: { \"focus\": \"focus()\", \"blur\": \"_blur()\", \"keydown\": \"_keydown($event)\" }, properties: { \"attr.role\": \"role\", \"tabIndex\": \"(disabled || empty) ? -1 : tabIndex\", \"attr.aria-required\": \"role ? required : null\", \"attr.aria-disabled\": \"disabled.toString()\", \"attr.aria-multiselectable\": \"multiple\", \"attr.aria-orientation\": \"ariaOrientation\", \"class.mat-mdc-chip-list-disabled\": \"disabled\", \"class.mat-mdc-chip-list-required\": \"required\" }, classAttribute: \"mdc-evolution-chip-set mat-mdc-chip-listbox\" }, providers: [MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR], queries: [{ propertyName: \"_chips\", predicate: MatChipOption, descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `, isInline: true, styles: [\".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-moz-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-webkit-input-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input:-ms-input-placeholder{opacity:1}.mat-mdc-chip-set+input.mat-mdc-chip-input{margin-left:0;margin-right:0}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipListbox, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-chip-listbox', template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `, host: {\n                        'class': 'mdc-evolution-chip-set mat-mdc-chip-listbox',\n                        '[attr.role]': 'role',\n                        '[tabIndex]': '(disabled || empty) ? -1 : tabIndex',\n                        '[attr.aria-required]': 'role ? required : null',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[attr.aria-multiselectable]': 'multiple',\n                        '[attr.aria-orientation]': 'ariaOrientation',\n                        '[class.mat-mdc-chip-list-disabled]': 'disabled',\n                        '[class.mat-mdc-chip-list-required]': 'required',\n                        '(focus)': 'focus()',\n                        '(blur)': '_blur()',\n                        '(keydown)': '_keydown($event)',\n                    }, providers: [MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-moz-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-webkit-input-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input:-ms-input-placeholder{opacity:1}.mat-mdc-chip-set+input.mat-mdc-chip-input{margin-left:0;margin-right:0}\\n\"] }]\n        }], propDecorators: { multiple: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], ariaOrientation: [{\n                type: Input,\n                args: ['aria-orientation']\n            }], selectable: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], compareWith: [{\n                type: Input\n            }], required: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], hideSingleSelectionIndicator: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], value: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }], _chips: [{\n                type: ContentChildren,\n                args: [MatChipOption, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }] } });\n\n/** Change event object that is emitted when the chip grid value has changed. */\nclass MatChipGridChange {\n    source;\n    value;\n    constructor(\n    /** Chip grid that emitted the event. */\n    source, \n    /** Value of the chip grid when the event was emitted. */\n    value) {\n        this.source = source;\n        this.value = value;\n    }\n}\n/**\n * An extension of the MatChipSet component used with MatChipRow chips and\n * the matChipInputFor directive.\n */\nclass MatChipGrid extends MatChipSet {\n    ngControl = inject(NgControl, { optional: true, self: true });\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    controlType = 'mat-chip-grid';\n    /** The chip input to add more chips */\n    _chipInput;\n    _defaultRole = 'grid';\n    _errorStateTracker;\n    /**\n     * List of element ids to propagate to the chipInput's aria-describedby attribute.\n     */\n    _ariaDescribedbyIds = [];\n    /**\n     * Function when touched. Set as part of ControlValueAccessor implementation.\n     * @docs-private\n     */\n    _onTouched = () => { };\n    /**\n     * Function when changed. Set as part of ControlValueAccessor implementation.\n     * @docs-private\n     */\n    _onChange = () => { };\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get disabled() {\n        return this.ngControl ? !!this.ngControl.disabled : this._disabled;\n    }\n    set disabled(value) {\n        this._disabled = value;\n        this._syncChipsState();\n        this.stateChanges.next();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get id() {\n        return this._chipInput.id;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get empty() {\n        return ((!this._chipInput || this._chipInput.empty) && (!this._chips || this._chips.length === 0));\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get placeholder() {\n        return this._chipInput ? this._chipInput.placeholder : this._placeholder;\n    }\n    set placeholder(value) {\n        this._placeholder = value;\n        this.stateChanges.next();\n    }\n    _placeholder;\n    /** Whether any chips or the matChipInput inside of this chip-grid has focus. */\n    get focused() {\n        return this._chipInput.focused || this._hasFocusedChip();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get required() {\n        return this._required ?? this.ngControl?.control?.hasValidator(Validators.required) ?? false;\n    }\n    set required(value) {\n        this._required = value;\n        this.stateChanges.next();\n    }\n    _required;\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get shouldLabelFloat() {\n        return !this.empty || this.focused;\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get value() {\n        return this._value;\n    }\n    set value(value) {\n        this._value = value;\n    }\n    _value = [];\n    /** An object used to control when error messages are shown. */\n    get errorStateMatcher() {\n        return this._errorStateTracker.matcher;\n    }\n    set errorStateMatcher(value) {\n        this._errorStateTracker.matcher = value;\n    }\n    /** Combined stream of all of the child chips' blur events. */\n    get chipBlurChanges() {\n        return this._getChipStream(chip => chip._onBlur);\n    }\n    /** Emits when the chip grid value has been changed by the user. */\n    change = new EventEmitter();\n    /**\n     * Emits whenever the raw value of the chip-grid changes. This is here primarily\n     * to facilitate the two-way binding for the `value` input.\n     * @docs-private\n     */\n    valueChange = new EventEmitter();\n    _chips = undefined;\n    /**\n     * Emits whenever the component state changes and should cause the parent\n     * form-field to update. Implemented as part of `MatFormFieldControl`.\n     * @docs-private\n     */\n    stateChanges = new Subject();\n    /** Whether the chip grid is in an error state. */\n    get errorState() {\n        return this._errorStateTracker.errorState;\n    }\n    set errorState(value) {\n        this._errorStateTracker.errorState = value;\n    }\n    constructor() {\n        super();\n        const parentForm = inject(NgForm, { optional: true });\n        const parentFormGroup = inject(FormGroupDirective, { optional: true });\n        const defaultErrorStateMatcher = inject(ErrorStateMatcher);\n        if (this.ngControl) {\n            this.ngControl.valueAccessor = this;\n        }\n        this._errorStateTracker = new _ErrorStateTracker(defaultErrorStateMatcher, this.ngControl, parentFormGroup, parentForm, this.stateChanges);\n    }\n    ngAfterContentInit() {\n        this.chipBlurChanges.pipe(takeUntil(this._destroyed)).subscribe(() => {\n            this._blur();\n            this.stateChanges.next();\n        });\n        merge(this.chipFocusChanges, this._chips.changes)\n            .pipe(takeUntil(this._destroyed))\n            .subscribe(() => this.stateChanges.next());\n    }\n    ngAfterViewInit() {\n        super.ngAfterViewInit();\n        if (!this._chipInput && (typeof ngDevMode === 'undefined' || ngDevMode)) {\n            throw Error('mat-chip-grid must be used in combination with matChipInputFor.');\n        }\n    }\n    ngDoCheck() {\n        if (this.ngControl) {\n            // We need to re-evaluate this on every change detection cycle, because there are some\n            // error triggers that we can't subscribe to (e.g. parent form submissions). This means\n            // that whatever logic is in here has to be super lean or we risk destroying the performance.\n            this.updateErrorState();\n        }\n    }\n    ngOnDestroy() {\n        super.ngOnDestroy();\n        this.stateChanges.complete();\n    }\n    /** Associates an HTML input element with this chip grid. */\n    registerInput(inputElement) {\n        this._chipInput = inputElement;\n        this._chipInput.setDescribedByIds(this._ariaDescribedbyIds);\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    onContainerClick(event) {\n        if (!this.disabled && !this._originatesFromChip(event)) {\n            this.focus();\n        }\n    }\n    /**\n     * Focuses the first chip in this chip grid, or the associated input when there\n     * are no eligible chips.\n     */\n    focus() {\n        if (this.disabled || this._chipInput.focused) {\n            return;\n        }\n        if (!this._chips.length || this._chips.first.disabled) {\n            // Delay until the next tick, because this can cause a \"changed after checked\"\n            // error if the input does something on focus (e.g. opens an autocomplete).\n            Promise.resolve().then(() => this._chipInput.focus());\n        }\n        else {\n            const activeItem = this._keyManager.activeItem;\n            if (activeItem) {\n                activeItem.focus();\n            }\n            else {\n                this._keyManager.setFirstItemActive();\n            }\n        }\n        this.stateChanges.next();\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    get describedByIds() {\n        return this._chipInput?.describedByIds || [];\n    }\n    /**\n     * Implemented as part of MatFormFieldControl.\n     * @docs-private\n     */\n    setDescribedByIds(ids) {\n        // We must keep this up to date to handle the case where ids are set\n        // before the chip input is registered.\n        this._ariaDescribedbyIds = ids;\n        this._chipInput?.setDescribedByIds(ids);\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    writeValue(value) {\n        // The user is responsible for creating the child chips, so we just store the value.\n        this._value = value;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    registerOnChange(fn) {\n        this._onChange = fn;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    registerOnTouched(fn) {\n        this._onTouched = fn;\n    }\n    /**\n     * Implemented as part of ControlValueAccessor.\n     * @docs-private\n     */\n    setDisabledState(isDisabled) {\n        this.disabled = isDisabled;\n        this.stateChanges.next();\n    }\n    /** Refreshes the error state of the chip grid. */\n    updateErrorState() {\n        this._errorStateTracker.updateErrorState();\n    }\n    /** When blurred, mark the field as touched when focus moved outside the chip grid. */\n    _blur() {\n        if (!this.disabled) {\n            // Check whether the focus moved to chip input.\n            // If the focus is not moved to chip input, mark the field as touched. If the focus moved\n            // to chip input, do nothing.\n            // Timeout is needed to wait for the focus() event trigger on chip input.\n            setTimeout(() => {\n                if (!this.focused) {\n                    this._propagateChanges();\n                    this._markAsTouched();\n                }\n            });\n        }\n    }\n    /**\n     * Removes the `tabindex` from the chip grid and resets it back afterwards, allowing the\n     * user to tab out of it. This prevents the grid from capturing focus and redirecting\n     * it back to the first chip, creating a focus trap, if it user tries to tab away.\n     */\n    _allowFocusEscape() {\n        if (!this._chipInput.focused) {\n            super._allowFocusEscape();\n        }\n    }\n    /** Handles custom keyboard events. */\n    _handleKeydown(event) {\n        const keyCode = event.keyCode;\n        const activeItem = this._keyManager.activeItem;\n        if (keyCode === TAB) {\n            if (this._chipInput.focused &&\n                hasModifierKey(event, 'shiftKey') &&\n                this._chips.length &&\n                !this._chips.last.disabled) {\n                event.preventDefault();\n                if (activeItem) {\n                    this._keyManager.setActiveItem(activeItem);\n                }\n                else {\n                    this._focusLastChip();\n                }\n            }\n            else {\n                // Use the super method here since it doesn't check for the input\n                // focused state. This allows focus to escape if there's only one\n                // disabled chip left in the list.\n                super._allowFocusEscape();\n            }\n        }\n        else if (!this._chipInput.focused) {\n            // The up and down arrows are supposed to navigate between the individual rows in the grid.\n            // We do this by filtering the actions down to the ones that have the same `_isPrimary`\n            // flag as the active action and moving focus between them ourseles instead of delegating\n            // to the key manager. For more information, see #29359 and:\n            // https://www.w3.org/WAI/ARIA/apg/patterns/grid/examples/layout-grids/#ex2_label\n            if ((keyCode === UP_ARROW || keyCode === DOWN_ARROW) && activeItem) {\n                const eligibleActions = this._chipActions.filter(action => action._isPrimary === activeItem._isPrimary && !this._skipPredicate(action));\n                const currentIndex = eligibleActions.indexOf(activeItem);\n                const delta = event.keyCode === UP_ARROW ? -1 : 1;\n                event.preventDefault();\n                if (currentIndex > -1 && this._isValidIndex(currentIndex + delta)) {\n                    this._keyManager.setActiveItem(eligibleActions[currentIndex + delta]);\n                }\n            }\n            else {\n                super._handleKeydown(event);\n            }\n        }\n        this.stateChanges.next();\n    }\n    _focusLastChip() {\n        if (this._chips.length) {\n            this._chips.last.focus();\n        }\n    }\n    /** Emits change event to set the model value. */\n    _propagateChanges() {\n        const valueToEmit = this._chips.length ? this._chips.toArray().map(chip => chip.value) : [];\n        this._value = valueToEmit;\n        this.change.emit(new MatChipGridChange(this, valueToEmit));\n        this.valueChange.emit(valueToEmit);\n        this._onChange(valueToEmit);\n        this._changeDetectorRef.markForCheck();\n    }\n    /** Mark the field as touched */\n    _markAsTouched() {\n        this._onTouched();\n        this._changeDetectorRef.markForCheck();\n        this.stateChanges.next();\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipGrid, deps: [], target: i0.ɵɵFactoryTarget.Component });\n    static ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"16.1.0\", version: \"20.2.0-rc.1\", type: MatChipGrid, isStandalone: true, selector: \"mat-chip-grid\", inputs: { disabled: [\"disabled\", \"disabled\", booleanAttribute], placeholder: \"placeholder\", required: [\"required\", \"required\", booleanAttribute], value: \"value\", errorStateMatcher: \"errorStateMatcher\" }, outputs: { change: \"change\", valueChange: \"valueChange\" }, host: { listeners: { \"focus\": \"focus()\", \"blur\": \"_blur()\" }, properties: { \"attr.role\": \"role\", \"attr.tabindex\": \"(disabled || (_chips && _chips.length === 0)) ? -1 : tabIndex\", \"attr.aria-disabled\": \"disabled.toString()\", \"attr.aria-invalid\": \"errorState\", \"class.mat-mdc-chip-list-disabled\": \"disabled\", \"class.mat-mdc-chip-list-invalid\": \"errorState\", \"class.mat-mdc-chip-list-required\": \"required\" }, classAttribute: \"mat-mdc-chip-set mat-mdc-chip-grid mdc-evolution-chip-set\" }, providers: [{ provide: MatFormFieldControl, useExisting: MatChipGrid }], queries: [{ propertyName: \"_chips\", predicate: MatChipRow, descendants: true }], usesInheritance: true, ngImport: i0, template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `, isInline: true, styles: [\".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-moz-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-webkit-input-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input:-ms-input-placeholder{opacity:1}.mat-mdc-chip-set+input.mat-mdc-chip-input{margin-left:0;margin-right:0}\\n\"], changeDetection: i0.ChangeDetectionStrategy.OnPush, encapsulation: i0.ViewEncapsulation.None });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipGrid, decorators: [{\n            type: Component,\n            args: [{ selector: 'mat-chip-grid', template: `\n    <div class=\"mdc-evolution-chip-set__chips\" role=\"presentation\">\n      <ng-content></ng-content>\n    </div>\n  `, host: {\n                        'class': 'mat-mdc-chip-set mat-mdc-chip-grid mdc-evolution-chip-set',\n                        '[attr.role]': 'role',\n                        '[attr.tabindex]': '(disabled || (_chips && _chips.length === 0)) ? -1 : tabIndex',\n                        '[attr.aria-disabled]': 'disabled.toString()',\n                        '[attr.aria-invalid]': 'errorState',\n                        '[class.mat-mdc-chip-list-disabled]': 'disabled',\n                        '[class.mat-mdc-chip-list-invalid]': 'errorState',\n                        '[class.mat-mdc-chip-list-required]': 'required',\n                        '(focus)': 'focus()',\n                        '(blur)': '_blur()',\n                    }, providers: [{ provide: MatFormFieldControl, useExisting: MatChipGrid }], encapsulation: ViewEncapsulation.None, changeDetection: ChangeDetectionStrategy.OnPush, styles: [\".mat-mdc-chip-set{display:flex}.mat-mdc-chip-set:focus{outline:none}.mat-mdc-chip-set .mdc-evolution-chip-set__chips{min-width:100%;margin-left:-8px;margin-right:0}.mat-mdc-chip-set .mdc-evolution-chip{margin:4px 0 4px 8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip-set__chips{margin-left:0;margin-right:-8px}[dir=rtl] .mat-mdc-chip-set .mdc-evolution-chip{margin-left:0;margin-right:8px}.mdc-evolution-chip-set__chips{display:flex;flex-flow:wrap;min-width:0}.mat-mdc-chip-set-stacked{flex-direction:column;align-items:flex-start}.mat-mdc-chip-set-stacked .mat-mdc-chip{width:100%}.mat-mdc-chip-set-stacked .mdc-evolution-chip__graphic{flex-grow:0}.mat-mdc-chip-set-stacked .mdc-evolution-chip__action--primary{flex-basis:100%;justify-content:start}input.mat-mdc-chip-input{flex:1 0 150px;margin-left:8px}[dir=rtl] input.mat-mdc-chip-input{margin-left:0;margin-right:8px}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-moz-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input::-webkit-input-placeholder{opacity:1}.mat-mdc-form-field:not(.mat-form-field-hide-placeholder) input.mat-mdc-chip-input:-ms-input-placeholder{opacity:1}.mat-mdc-chip-set+input.mat-mdc-chip-input{margin-left:0;margin-right:0}\\n\"] }]\n        }], ctorParameters: () => [], propDecorators: { disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], placeholder: [{\n                type: Input\n            }], required: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], value: [{\n                type: Input\n            }], errorStateMatcher: [{\n                type: Input\n            }], change: [{\n                type: Output\n            }], valueChange: [{\n                type: Output\n            }], _chips: [{\n                type: ContentChildren,\n                args: [MatChipRow, {\n                        // We need to use `descendants: true`, because Ivy will no longer match\n                        // indirect descendants if it's left as false.\n                        descendants: true,\n                    }]\n            }] } });\n\n/**\n * Directive that adds chip-specific behaviors to an input element inside `<mat-form-field>`.\n * May be placed inside or outside of a `<mat-chip-grid>`.\n */\nclass MatChipInput {\n    _elementRef = inject(ElementRef);\n    /** Whether the control is focused. */\n    focused = false;\n    /** Register input for chip list */\n    get chipGrid() {\n        return this._chipGrid;\n    }\n    set chipGrid(value) {\n        if (value) {\n            this._chipGrid = value;\n            this._chipGrid.registerInput(this);\n        }\n    }\n    _chipGrid;\n    /**\n     * Whether or not the chipEnd event will be emitted when the input is blurred.\n     */\n    addOnBlur = false;\n    /**\n     * The list of key codes that will trigger a chipEnd event.\n     *\n     * Defaults to `[ENTER]`.\n     */\n    separatorKeyCodes;\n    /** Emitted when a chip is to be added. */\n    chipEnd = new EventEmitter();\n    /** The input's placeholder text. */\n    placeholder = '';\n    /** Unique id for the input. */\n    id = inject(_IdGenerator).getId('mat-mdc-chip-list-input-');\n    /** Whether the input is disabled. */\n    get disabled() {\n        return this._disabled || (this._chipGrid && this._chipGrid.disabled);\n    }\n    set disabled(value) {\n        this._disabled = value;\n    }\n    _disabled = false;\n    /** Whether the input is readonly. */\n    readonly = false;\n    /** Whether the input should remain interactive when it is disabled. */\n    disabledInteractive;\n    /** Whether the input is empty. */\n    get empty() {\n        return !this.inputElement.value;\n    }\n    /** The native input element to which this directive is attached. */\n    inputElement;\n    constructor() {\n        const defaultOptions = inject(MAT_CHIPS_DEFAULT_OPTIONS);\n        const formField = inject(MAT_FORM_FIELD, { optional: true });\n        this.inputElement = this._elementRef.nativeElement;\n        this.separatorKeyCodes = defaultOptions.separatorKeyCodes;\n        this.disabledInteractive = defaultOptions.inputDisabledInteractive ?? false;\n        if (formField) {\n            this.inputElement.classList.add('mat-mdc-form-field-input-control');\n        }\n    }\n    ngOnChanges() {\n        this._chipGrid.stateChanges.next();\n    }\n    ngOnDestroy() {\n        this.chipEnd.complete();\n    }\n    /** Utility method to make host definition/tests more clear. */\n    _keydown(event) {\n        if (this.empty && event.keyCode === BACKSPACE) {\n            // Ignore events where the user is holding down backspace\n            // so that we don't accidentally remove too many chips.\n            if (!event.repeat) {\n                this._chipGrid._focusLastChip();\n            }\n            event.preventDefault();\n        }\n        else {\n            this._emitChipEnd(event);\n        }\n    }\n    /** Checks to see if the blur should emit the (chipEnd) event. */\n    _blur() {\n        if (this.addOnBlur) {\n            this._emitChipEnd();\n        }\n        this.focused = false;\n        // Blur the chip list if it is not focused\n        if (!this._chipGrid.focused) {\n            this._chipGrid._blur();\n        }\n        this._chipGrid.stateChanges.next();\n    }\n    _focus() {\n        this.focused = true;\n        this._chipGrid.stateChanges.next();\n    }\n    /** Checks to see if the (chipEnd) event needs to be emitted. */\n    _emitChipEnd(event) {\n        if (!event || (this._isSeparatorKey(event) && !event.repeat)) {\n            this.chipEnd.emit({\n                input: this.inputElement,\n                value: this.inputElement.value,\n                chipInput: this,\n            });\n            event?.preventDefault();\n        }\n    }\n    _onInput() {\n        // Let chip list know whenever the value changes.\n        this._chipGrid.stateChanges.next();\n    }\n    /** Focuses the input. */\n    focus() {\n        this.inputElement.focus();\n    }\n    /** Clears the input */\n    clear() {\n        this.inputElement.value = '';\n    }\n    /**\n     * Implemented as part of MatChipTextControl.\n     * @docs-private\n     */\n    get describedByIds() {\n        const element = this._elementRef.nativeElement;\n        const existingDescribedBy = element.getAttribute('aria-describedby');\n        return existingDescribedBy?.split(' ') || [];\n    }\n    setDescribedByIds(ids) {\n        const element = this._elementRef.nativeElement;\n        // Set the value directly in the DOM since this binding\n        // is prone to \"changed after checked\" errors.\n        if (ids.length) {\n            element.setAttribute('aria-describedby', ids.join(' '));\n        }\n        else {\n            element.removeAttribute('aria-describedby');\n        }\n    }\n    /** Checks whether a keycode is one of the configured separators. */\n    _isSeparatorKey(event) {\n        return !hasModifierKey(event) && new Set(this.separatorKeyCodes).has(event.keyCode);\n    }\n    /** Gets the value to set on the `readonly` attribute. */\n    _getReadonlyAttribute() {\n        return this.readonly || (this.disabled && this.disabledInteractive) ? 'true' : null;\n    }\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipInput, deps: [], target: i0.ɵɵFactoryTarget.Directive });\n    static ɵdir = i0.ɵɵngDeclareDirective({ minVersion: \"16.1.0\", version: \"20.2.0-rc.1\", type: MatChipInput, isStandalone: true, selector: \"input[matChipInputFor]\", inputs: { chipGrid: [\"matChipInputFor\", \"chipGrid\"], addOnBlur: [\"matChipInputAddOnBlur\", \"addOnBlur\", booleanAttribute], separatorKeyCodes: [\"matChipInputSeparatorKeyCodes\", \"separatorKeyCodes\"], placeholder: \"placeholder\", id: \"id\", disabled: [\"disabled\", \"disabled\", booleanAttribute], readonly: [\"readonly\", \"readonly\", booleanAttribute], disabledInteractive: [\"matChipInputDisabledInteractive\", \"disabledInteractive\", booleanAttribute] }, outputs: { chipEnd: \"matChipInputTokenEnd\" }, host: { listeners: { \"keydown\": \"_keydown($event)\", \"blur\": \"_blur()\", \"focus\": \"_focus()\", \"input\": \"_onInput()\" }, properties: { \"id\": \"id\", \"attr.disabled\": \"disabled && !disabledInteractive ? \\\"\\\" : null\", \"attr.placeholder\": \"placeholder || null\", \"attr.aria-invalid\": \"_chipGrid && _chipGrid.ngControl ? _chipGrid.ngControl.invalid : null\", \"attr.aria-required\": \"_chipGrid && _chipGrid.required || null\", \"attr.aria-disabled\": \"disabled && disabledInteractive ? \\\"true\\\" : null\", \"attr.readonly\": \"_getReadonlyAttribute()\", \"attr.required\": \"_chipGrid && _chipGrid.required || null\" }, classAttribute: \"mat-mdc-chip-input mat-mdc-input-element mdc-text-field__input mat-input-element\" }, exportAs: [\"matChipInput\", \"matChipInputFor\"], usesOnChanges: true, ngImport: i0 });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipInput, decorators: [{\n            type: Directive,\n            args: [{\n                    selector: 'input[matChipInputFor]',\n                    exportAs: 'matChipInput, matChipInputFor',\n                    host: {\n                        // TODO: eventually we should remove `mat-input-element` from here since it comes from the\n                        // non-MDC version of the input. It's currently being kept for backwards compatibility, because\n                        // the MDC chips were landed initially with it.\n                        'class': 'mat-mdc-chip-input mat-mdc-input-element mdc-text-field__input mat-input-element',\n                        '(keydown)': '_keydown($event)',\n                        '(blur)': '_blur()',\n                        '(focus)': '_focus()',\n                        '(input)': '_onInput()',\n                        '[id]': 'id',\n                        '[attr.disabled]': 'disabled && !disabledInteractive ? \"\" : null',\n                        '[attr.placeholder]': 'placeholder || null',\n                        '[attr.aria-invalid]': '_chipGrid && _chipGrid.ngControl ? _chipGrid.ngControl.invalid : null',\n                        '[attr.aria-required]': '_chipGrid && _chipGrid.required || null',\n                        '[attr.aria-disabled]': 'disabled && disabledInteractive ? \"true\" : null',\n                        '[attr.readonly]': '_getReadonlyAttribute()',\n                        '[attr.required]': '_chipGrid && _chipGrid.required || null',\n                    },\n                }]\n        }], ctorParameters: () => [], propDecorators: { chipGrid: [{\n                type: Input,\n                args: ['matChipInputFor']\n            }], addOnBlur: [{\n                type: Input,\n                args: [{ alias: 'matChipInputAddOnBlur', transform: booleanAttribute }]\n            }], separatorKeyCodes: [{\n                type: Input,\n                args: ['matChipInputSeparatorKeyCodes']\n            }], chipEnd: [{\n                type: Output,\n                args: ['matChipInputTokenEnd']\n            }], placeholder: [{\n                type: Input\n            }], id: [{\n                type: Input\n            }], disabled: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], readonly: [{\n                type: Input,\n                args: [{ transform: booleanAttribute }]\n            }], disabledInteractive: [{\n                type: Input,\n                args: [{ alias: 'matChipInputDisabledInteractive', transform: booleanAttribute }]\n            }] } });\n\nconst CHIP_DECLARATIONS = [\n    MatChip,\n    MatChipAvatar,\n    MatChipEdit,\n    MatChipEditInput,\n    MatChipGrid,\n    MatChipInput,\n    MatChipListbox,\n    MatChipOption,\n    MatChipRemove,\n    MatChipRow,\n    MatChipSet,\n    MatChipTrailingIcon,\n];\nclass MatChipsModule {\n    static ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\n    static ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"14.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipsModule, imports: [MatCommonModule, MatRippleModule, MatChipAction, MatChip,\n            MatChipAvatar,\n            MatChipEdit,\n            MatChipEditInput,\n            MatChipGrid,\n            MatChipInput,\n            MatChipListbox,\n            MatChipOption,\n            MatChipRemove,\n            MatChipRow,\n            MatChipSet,\n            MatChipTrailingIcon], exports: [MatCommonModule, MatChip,\n            MatChipAvatar,\n            MatChipEdit,\n            MatChipEditInput,\n            MatChipGrid,\n            MatChipInput,\n            MatChipListbox,\n            MatChipOption,\n            MatChipRemove,\n            MatChipRow,\n            MatChipSet,\n            MatChipTrailingIcon] });\n    static ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipsModule, providers: [\n            ErrorStateMatcher,\n            {\n                provide: MAT_CHIPS_DEFAULT_OPTIONS,\n                useValue: {\n                    separatorKeyCodes: [ENTER],\n                },\n            },\n        ], imports: [MatCommonModule, MatRippleModule, MatCommonModule] });\n}\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"20.2.0-rc.1\", ngImport: i0, type: MatChipsModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    imports: [MatCommonModule, MatRippleModule, MatChipAction, CHIP_DECLARATIONS],\n                    exports: [MatCommonModule, CHIP_DECLARATIONS],\n                    providers: [\n                        ErrorStateMatcher,\n                        {\n                            provide: MAT_CHIPS_DEFAULT_OPTIONS,\n                            useValue: {\n                                separatorKeyCodes: [ENTER],\n                            },\n                        },\n                    ],\n                }]\n        }] });\n\nexport { MAT_CHIP, MAT_CHIPS_DEFAULT_OPTIONS, MAT_CHIP_AVATAR, MAT_CHIP_EDIT, MAT_CHIP_LISTBOX_CONTROL_VALUE_ACCESSOR, MAT_CHIP_REMOVE, MAT_CHIP_TRAILING_ICON, MatChip, MatChipAvatar, MatChipEdit, MatChipEditInput, MatChipGrid, MatChipGridChange, MatChipInput, MatChipListbox, MatChipListboxChange, MatChipOption, MatChipRemove, MatChipRow, MatChipSelectionChange, MatChipSet, MatChipTrailingIcon, MatChipsModule };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}