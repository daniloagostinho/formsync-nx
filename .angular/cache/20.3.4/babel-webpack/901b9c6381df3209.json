{"ast":null,"code":"import { Router, RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule, FormBuilder, Validators } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { ErrorHandlerService } from '../../services/error-handler.service';\nimport { environment } from '../../../environments/environment';\nimport { FooterComponent } from '../footer/footer.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../../services/error-handler.service\";\nimport * as i5 from \"@angular/common\";\nfunction TrelloLoginComponent_div_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.…µ…µelementStart(0, \"div\", 23)(1, \"div\", 24);\n    i0.…µ…µnamespaceSVG();\n    i0.…µ…µelementStart(2, \"svg\", 25);\n    i0.…µ…µelement(3, \"path\", 26);\n    i0.…µ…µelementEnd();\n    i0.…µ…µnamespaceHTML();\n    i0.…µ…µelementStart(4, \"span\", 27);\n    i0.…µ…µtext(5);\n    i0.…µ…µelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.…µ…µnextContext();\n    i0.…µ…µadvance(5);\n    i0.…µ…µtextInterpolate(ctx_r0.mensagemErro);\n  }\n}\nfunction TrelloLoginComponent_div_33_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.…µ…µelementStart(0, \"span\");\n    i0.…µ…µtext(1, \"E-mail \\u00E9 obrigat\\u00F3rio\");\n    i0.…µ…µelementEnd();\n  }\n}\nfunction TrelloLoginComponent_div_33_span_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.…µ…µelementStart(0, \"span\");\n    i0.…µ…µtext(1, \"Formato de e-mail inv\\u00E1lido\");\n    i0.…µ…µelementEnd();\n  }\n}\nfunction TrelloLoginComponent_div_33_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.…µ…µelementStart(0, \"span\");\n    i0.…µ…µtext(1, \"Dom\\u00EDnio de e-mail inv\\u00E1lido\");\n    i0.…µ…µelementEnd();\n  }\n}\nfunction TrelloLoginComponent_div_33_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.…µ…µelementStart(0, \"span\");\n    i0.…µ…µtext(1, \"N\\u00E3o \\u00E9 permitido m\\u00FAltiplos e-mails\");\n    i0.…µ…µelementEnd();\n  }\n}\nfunction TrelloLoginComponent_div_33_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.…µ…µelementStart(0, \"span\");\n    i0.…µ…µtext(1, \"E-mail internacional n\\u00E3o suportado\");\n    i0.…µ…µelementEnd();\n  }\n}\nfunction TrelloLoginComponent_div_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.…µ…µelementStart(0, \"div\", 28);\n    i0.…µ…µtemplate(1, TrelloLoginComponent_div_33_span_1_Template, 2, 0, \"span\", 29)(2, TrelloLoginComponent_div_33_span_2_Template, 2, 0, \"span\", 29)(3, TrelloLoginComponent_div_33_span_3_Template, 2, 0, \"span\", 29)(4, TrelloLoginComponent_div_33_span_4_Template, 2, 0, \"span\", 29)(5, TrelloLoginComponent_div_33_span_5_Template, 2, 0, \"span\", 29);\n    i0.…µ…µelementEnd();\n  }\n  if (rf & 2) {\n    let tmp_1_0;\n    let tmp_2_0;\n    let tmp_3_0;\n    let tmp_4_0;\n    let tmp_5_0;\n    const ctx_r0 = i0.…µ…µnextContext();\n    i0.…µ…µadvance();\n    i0.…µ…µproperty(\"ngIf\", (tmp_1_0 = ctx_r0.loginForm.get(\"email\")) == null ? null : tmp_1_0.errors == null ? null : tmp_1_0.errors[\"required\"]);\n    i0.…µ…µadvance();\n    i0.…µ…µproperty(\"ngIf\", (tmp_2_0 = ctx_r0.loginForm.get(\"email\")) == null ? null : tmp_2_0.errors == null ? null : tmp_2_0.errors[\"invalidFormat\"]);\n    i0.…µ…µadvance();\n    i0.…µ…µproperty(\"ngIf\", (tmp_3_0 = ctx_r0.loginForm.get(\"email\")) == null ? null : tmp_3_0.errors == null ? null : tmp_3_0.errors[\"invalidDomain\"]);\n    i0.…µ…µadvance();\n    i0.…µ…µproperty(\"ngIf\", (tmp_4_0 = ctx_r0.loginForm.get(\"email\")) == null ? null : tmp_4_0.errors == null ? null : tmp_4_0.errors[\"multipleEmails\"]);\n    i0.…µ…µadvance();\n    i0.…µ…µproperty(\"ngIf\", (tmp_5_0 = ctx_r0.loginForm.get(\"email\")) == null ? null : tmp_5_0.errors == null ? null : tmp_5_0.errors[\"internationalEmail\"]);\n  }\n}\nfunction TrelloLoginComponent_div_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.…µ…µelement(0, \"div\", 30);\n  }\n}\nfunction TrelloLoginComponent__svg_svg_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.…µ…µnamespaceSVG();\n    i0.…µ…µelementStart(0, \"svg\", 31);\n    i0.…µ…µelement(1, \"path\", 32);\n    i0.…µ…µelementEnd();\n  }\n}\nexport class TrelloLoginComponent {\n  fb;\n  authService;\n  router;\n  errorHandler;\n  loginForm;\n  mensagemErro = '';\n  carregando = false;\n  environment = environment;\n  constructor(fb, authService, router, errorHandler) {\n    this.fb = fb;\n    this.authService = authService;\n    this.router = router;\n    this.errorHandler = errorHandler;\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, this.emailValidator]]\n    });\n  }\n  ngOnInit() {\n    console.log('üîß [TRELLO_LOGIN] Environment config:');\n    console.log('   - API URL:', environment.apiUrl);\n    console.log('   - Skip Email Verification:', environment.skipEmailVerification);\n    console.log('   - Production:', environment.production);\n  }\n  // Validador customizado para o campo email\n  emailValidator(control) {\n    if (!control.value) return null;\n    const email = control.value;\n    // Verifica se h√° espa√ßos no in√≠cio ou fim\n    if (email.trim() !== email) {\n      return {\n        invalidFormat: true\n      };\n    }\n    // Verifica se cont√©m m√∫ltiplos emails (separados por v√≠rgula, ponto e v√≠rgula, etc.)\n    if (email.includes(',') || email.includes(';') || email.includes('|')) {\n      return {\n        multipleEmails: true\n      };\n    }\n    // Regex b√°sico para formato de email\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    if (!emailRegex.test(email)) {\n      return {\n        invalidFormat: true\n      };\n    }\n    // Verifica se o dom√≠nio √© v√°lido (pelo menos 2 caracteres ap√≥s o ponto)\n    const domainPart = email.split('@')[1];\n    if (!domainPart || domainPart.split('.')[1]?.length < 2) {\n      return {\n        invalidDomain: true\n      };\n    }\n    // Verifica se √© um email internacional (dom√≠nios de pa√≠s com mais de 2 caracteres)\n    const countryDomains = ['com', 'org', 'net', 'edu', 'gov', 'mil', 'int'];\n    const domainParts = domainPart.split('.');\n    const topLevelDomain = domainParts[domainParts.length - 1];\n    if (topLevelDomain.length > 3 && !countryDomains.includes(topLevelDomain)) {\n      return {\n        internationalEmail: true\n      };\n    }\n    return null;\n  }\n  // Getter para facilitar o acesso ao campo email\n  get email() {\n    return this.loginForm.get('email')?.value;\n  }\n  // Marca todos os campos como tocados para exibir as valida√ß√µes\n  marcarCamposComoTocados() {\n    Object.keys(this.loginForm.controls).forEach(key => {\n      const control = this.loginForm.get(key);\n      control?.markAsTouched();\n    });\n  }\n  enviarCodigo() {\n    console.log('üîê [TRELLO_LOGIN] Iniciando processo de login...');\n    console.log('   - Email:', this.email);\n    console.log('   - Skip Email Verification:', environment.skipEmailVerification);\n    if (this.loginForm.invalid) {\n      this.marcarCamposComoTocados();\n      this.mensagemErro = 'Por favor, corrija os erros no formul√°rio.';\n      return;\n    }\n    this.carregando = true;\n    this.mensagemErro = '';\n    // Verificar feature flag para pular verifica√ß√£o de email\n    if (environment.skipEmailVerification) {\n      console.log('üöÄ [FEATURE_FLAG] Verifica√ß√£o de email desabilitada - fazendo login direto (Trello)');\n      this.fazerLoginDireto();\n      return;\n    }\n    console.log('üìß [TRELLO_LOGIN] Feature flag desabilitada - enviando c√≥digo por email...');\n    this.authService.enviarCodigo(this.email).subscribe({\n      next: () => {\n        this.carregando = false;\n        this.router.navigate(['/verificar-codigo'], {\n          queryParams: {\n            email: this.email\n          }\n        });\n      },\n      error: error => {\n        this.carregando = false;\n        this.mensagemErro = this.errorHandler.getErrorMessage(error);\n      }\n    });\n  }\n  fazerLoginDireto() {\n    console.log('üîê [LOGIN_DIRETO_TRELLO] Iniciando login direto para:', this.email);\n    // Simular um c√≥digo v√°lido para o login direto\n    const codigoSimulado = '123456';\n    this.authService.verificarCodigo(this.email, codigoSimulado).subscribe({\n      next: res => {\n        console.log('‚úÖ [LOGIN_DIRETO_TRELLO] Login realizado com sucesso:', res);\n        this.authService.salvarToken(res.token);\n        this.authService.salvarNomeUsuario(res.nome);\n        localStorage.setItem('plano', res.plano);\n        this.carregando = false;\n        this.router.navigate(['/dashboard']);\n      },\n      error: error => {\n        console.error('‚ùå [LOGIN_DIRETO_TRELLO] Erro no login direto:', error);\n        this.carregando = false;\n        this.mensagemErro = this.errorHandler.getErrorMessage(error);\n      }\n    });\n  }\n  static …µfac = function TrelloLoginComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || TrelloLoginComponent)(i0.…µ…µdirectiveInject(i1.FormBuilder), i0.…µ…µdirectiveInject(i2.AuthService), i0.…µ…µdirectiveInject(i3.Router), i0.…µ…µdirectiveInject(i4.ErrorHandlerService));\n  };\n  static …µcmp = /*@__PURE__*/i0.…µ…µdefineComponent({\n    type: TrelloLoginComponent,\n    selectors: [[\"app-trello-login\"]],\n    decls: 42,\n    vars: 9,\n    consts: [[1, \"min-h-screen\", \"bg-white\", \"text-gray-900\", \"flex\", \"items-center\", \"justify-center\", \"px-6\"], [1, \"w-full\", \"max-w-6xl\"], [1, \"grid\", \"grid-cols-1\", \"lg:grid-cols-2\", \"gap-12\", \"items-center\"], [1, \"text-center\", \"lg:text-left\", \"lg:pl-4\"], [1, \"text-5xl\", \"lg:text-5xl\", \"font-black\", \"text-gray-900\", \"mb-6\", \"leading-tight\", \"mt-[100px]\"], [1, \"text-xl\", \"mb-8\", \"text-gray-600\", \"leading-relaxed\"], [1, \"space-y-4\", \"mb-8\"], [1, \"flex\", \"items-center\", \"gap-3\", \"justify-center\", \"lg:justify-start\"], [1, \"w-2\", \"h-2\", \"bg-green-500\", \"rounded-full\"], [1, \"text-gray-600\"], [1, \"bg-gray-50\", \"rounded-lg\", \"p-8\", \"border\", \"border-gray-200\", \"lg:pr-4\"], [1, \"text-center\", \"mb-8\"], [1, \"text-2xl\", \"font-bold\", \"text-gray-900\", \"mb-2\"], [\"class\", \"bg-red-50 border border-red-200 rounded-lg p-4 mb-6\", 4, \"ngIf\"], [1, \"space-y-6\", 3, \"ngSubmit\", \"formGroup\"], [1, \"block\", \"text-sm\", \"font-medium\", \"text-gray-700\", \"mb-2\"], [\"type\", \"email\", \"formControlName\", \"email\", \"placeholder\", \"Digite seu e-mail\", \"autocomplete\", \"email\", \"data-cy\", \"email\"], [\"class\", \"mt-2 text-sm text-red-600\", 4, \"ngIf\"], [\"type\", \"submit\", \"data-cy\", \"login-button\", 1, \"w-full\", \"py-4\", \"px-6\", \"bg-blue-600\", \"text-white\", \"font-semibold\", \"text-lg\", \"rounded-lg\", \"hover:bg-blue-700\", \"transition-colors\", \"duration-200\", \"disabled:bg-gray-400\", \"disabled:cursor-not-allowed\", \"flex\", \"items-center\", \"justify-center\", \"gap-3\", 3, \"disabled\"], [\"class\", \"w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin\", 4, \"ngIf\"], [\"class\", \"w-5 h-5\", \"fill\", \"none\", \"stroke\", \"currentColor\", \"viewBox\", \"0 0 24 24\", 4, \"ngIf\"], [1, \"text-center\"], [\"routerLink\", \"/trello-register\", 1, \"text-gray-600\", \"font-medium\", \"hover:text-gray-900\", \"transition-colors\", \"duration-200\"], [1, \"bg-red-50\", \"border\", \"border-red-200\", \"rounded-lg\", \"p-4\", \"mb-6\"], [1, \"flex\", \"items-center\", \"gap-3\"], [\"fill\", \"none\", \"stroke\", \"currentColor\", \"viewBox\", \"0 0 24 24\", 1, \"w-5\", \"h-5\", \"text-red-600\", \"flex-shrink-0\"], [\"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\", \"stroke-width\", \"2\", \"d\", \"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.34 16.5c-.77.833.192 2.5 1.732 2.5z\"], [1, \"text-red-800\", \"text-sm\", \"font-medium\"], [1, \"mt-2\", \"text-sm\", \"text-red-600\"], [4, \"ngIf\"], [1, \"w-5\", \"h-5\", \"border-2\", \"border-white\", \"border-t-transparent\", \"rounded-full\", \"animate-spin\"], [\"fill\", \"none\", \"stroke\", \"currentColor\", \"viewBox\", \"0 0 24 24\", 1, \"w-5\", \"h-5\"], [\"stroke-linecap\", \"round\", \"stroke-linejoin\", \"round\", \"stroke-width\", \"2\", \"d\", \"M11 16l-4-4m0 0l4-4m-4 4h14m-5 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h7a3 3 0 013 3v1\"]],\n    template: function TrelloLoginComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.…µ…µelementStart(0, \"section\", 0)(1, \"div\", 1)(2, \"div\", 2)(3, \"div\", 3)(4, \"h1\", 4);\n        i0.…µ…µtext(5, \" Bem-vindo de volta \");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(6, \"p\", 5);\n        i0.…µ…µtext(7, \" Acesse sua conta e continue automatizando formul\\u00E1rios em qualquer site \");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(8, \"div\", 6)(9, \"div\", 7);\n        i0.…µ…µelement(10, \"div\", 8);\n        i0.…µ…µelementStart(11, \"span\", 9);\n        i0.…µ…µtext(12, \"Seus Formul\\u00E1rios salvos\");\n        i0.…µ…µelementEnd()();\n        i0.…µ…µelementStart(13, \"div\", 7);\n        i0.…µ…µelement(14, \"div\", 8);\n        i0.…µ…µelementStart(15, \"span\", 9);\n        i0.…µ…µtext(16, \"Sincroniza\\u00E7\\u00E3o autom\\u00E1tica\");\n        i0.…µ…µelementEnd()();\n        i0.…µ…µelementStart(17, \"div\", 7);\n        i0.…µ…µelement(18, \"div\", 8);\n        i0.…µ…µelementStart(19, \"span\", 9);\n        i0.…µ…µtext(20, \"100% seguro\");\n        i0.…µ…µelementEnd()()()();\n        i0.…µ…µelementStart(21, \"div\", 10)(22, \"div\", 11)(23, \"h2\", 12);\n        i0.…µ…µtext(24, \"Entrar\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(25, \"p\", 9);\n        i0.…µ…µtext(26, \"Entre com seu email para continuar\");\n        i0.…µ…µelementEnd()();\n        i0.…µ…µtemplate(27, TrelloLoginComponent_div_27_Template, 6, 1, \"div\", 13);\n        i0.…µ…µelementStart(28, \"form\", 14);\n        i0.…µ…µlistener(\"ngSubmit\", function TrelloLoginComponent_Template_form_ngSubmit_28_listener() {\n          return ctx.enviarCodigo();\n        });\n        i0.…µ…µelementStart(29, \"div\")(30, \"label\", 15);\n        i0.…µ…µtext(31, \"E-mail\");\n        i0.…µ…µelementEnd();\n        i0.…µ…µelement(32, \"input\", 16);\n        i0.…µ…µtemplate(33, TrelloLoginComponent_div_33_Template, 6, 5, \"div\", 17);\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(34, \"button\", 18);\n        i0.…µ…µtemplate(35, TrelloLoginComponent_div_35_Template, 1, 0, \"div\", 19)(36, TrelloLoginComponent__svg_svg_36_Template, 2, 0, \"svg\", 20);\n        i0.…µ…µtext(37);\n        i0.…µ…µelementEnd();\n        i0.…µ…µelementStart(38, \"div\", 21)(39, \"a\", 22);\n        i0.…µ…µtext(40, \" N\\u00E3o tem conta? Criar conta gratuita \\u2192 \");\n        i0.…µ…µelementEnd()()()()()()();\n        i0.…µ…µelement(41, \"app-footer\");\n      }\n      if (rf & 2) {\n        let tmp_2_0;\n        let tmp_3_0;\n        i0.…µ…µadvance(27);\n        i0.…µ…µproperty(\"ngIf\", ctx.mensagemErro);\n        i0.…µ…µadvance();\n        i0.…µ…µproperty(\"formGroup\", ctx.loginForm);\n        i0.…µ…µadvance(4);\n        i0.…µ…µclassMap(\"w-full px-4 py-3 border rounded-lg bg-white focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-colors duration-200 text-gray-900 placeholder-gray-400 \" + (((tmp_2_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_2_0.touched) ? \"border-red-500\" : \"border-gray-300\"));\n        i0.…µ…µadvance();\n        i0.…µ…µproperty(\"ngIf\", ((tmp_3_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx.loginForm.get(\"email\")) == null ? null : tmp_3_0.touched));\n        i0.…µ…µadvance();\n        i0.…µ…µproperty(\"disabled\", ctx.loginForm.invalid || ctx.carregando);\n        i0.…µ…µadvance();\n        i0.…µ…µproperty(\"ngIf\", ctx.carregando);\n        i0.…µ…µadvance();\n        i0.…µ…µproperty(\"ngIf\", !ctx.carregando);\n        i0.…µ…µadvance();\n        i0.…µ…µtextInterpolate1(\" \", ctx.carregando ? ctx.environment.skipEmailVerification ? \"Entrando...\" : \"Enviando c\\u00F3digo...\" : \"Entrar\", \" \");\n      }\n    },\n    dependencies: [CommonModule, i5.NgIf, FormsModule, i1.…µNgNoValidate, i1.DefaultValueAccessor, i1.NgControlStatus, i1.NgControlStatusGroup, RouterModule, i3.RouterLink, ReactiveFormsModule, i1.FormGroupDirective, i1.FormControlName, FooterComponent],\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["Router","RouterModule","CommonModule","FormsModule","ReactiveFormsModule","FormBuilder","Validators","AuthService","ErrorHandlerService","environment","FooterComponent","i0","…µ…µelementStart","…µ…µelement","…µ…µelementEnd","…µ…µtext","…µ…µadvance","…µ…µtextInterpolate","ctx_r0","mensagemErro","…µ…µtemplate","TrelloLoginComponent_div_33_span_1_Template","TrelloLoginComponent_div_33_span_2_Template","TrelloLoginComponent_div_33_span_3_Template","TrelloLoginComponent_div_33_span_4_Template","TrelloLoginComponent_div_33_span_5_Template","…µ…µproperty","tmp_1_0","loginForm","get","errors","tmp_2_0","tmp_3_0","tmp_4_0","tmp_5_0","TrelloLoginComponent","fb","authService","router","errorHandler","carregando","constructor","group","email","required","emailValidator","ngOnInit","console","log","apiUrl","skipEmailVerification","production","control","value","trim","invalidFormat","includes","multipleEmails","emailRegex","test","domainPart","split","length","invalidDomain","countryDomains","domainParts","topLevelDomain","internationalEmail","marcarCamposComoTocados","Object","keys","controls","forEach","key","markAsTouched","enviarCodigo","invalid","fazerLoginDireto","subscribe","next","navigate","queryParams","error","getErrorMessage","codigoSimulado","verificarCodigo","res","salvarToken","token","salvarNomeUsuario","nome","localStorage","setItem","plano","…µ…µdirectiveInject","i1","i2","i3","i4","selectors","decls","vars","consts","template","TrelloLoginComponent_Template","rf","ctx","TrelloLoginComponent_div_27_Template","…µ…µlistener","TrelloLoginComponent_Template_form_ngSubmit_28_listener","TrelloLoginComponent_div_33_Template","TrelloLoginComponent_div_35_Template","TrelloLoginComponent__svg_svg_36_Template","…µ…µclassMap","touched","…µ…µtextInterpolate1","i5","NgIf","…µNgNoValidate","DefaultValueAccessor","NgControlStatus","NgControlStatusGroup","RouterLink","FormGroupDirective","FormControlName","encapsulation"],"sources":["/home/danilo/√Årea de trabalho/formsync-nx/apps/front/src/app/components/trello-login/trello-login.component.ts"],"sourcesContent":["import { Component } from '@angular/core';\nimport { Router, RouterModule } from '@angular/router';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule, FormBuilder, FormGroup, Validators, AbstractControl, ValidationErrors } from '@angular/forms';\nimport { AuthService } from '../../services/auth.service';\nimport { ErrorHandlerService } from '../../services/error-handler.service';\nimport { environment } from '../../../environments/environment';\nimport { FooterComponent } from '../footer/footer.component';\n\n@Component({\n  selector: 'app-trello-login',\n  standalone: true,\n  imports: [\n    CommonModule,\n    FormsModule,\n    RouterModule,\n    ReactiveFormsModule,\n    FooterComponent\n  ],\n  template: `\n    \n    <!-- Hero Section com Formul√°rio de Login - Estilo Trello -->\n    <section class=\"min-h-screen bg-white text-gray-900 flex items-center justify-center px-6\">\n      <div class=\"w-full max-w-6xl\">\n        <!-- Layout Principal -->\n        <div class=\"grid grid-cols-1 lg:grid-cols-2 gap-12 items-center\">\n          \n          <!-- Conte√∫do da Esquerda - Alinhado com a logo -->\n          <div class=\"text-center lg:text-left lg:pl-4\">\n            <!-- Header Principal -->\n            <h1 class=\"text-5xl lg:text-5xl font-black text-gray-900 mb-6 leading-tight mt-[100px]\">\n              Bem-vindo de volta\n            </h1>\n            \n            <!-- Subheading -->\n            <p class=\"text-xl mb-8 text-gray-600 leading-relaxed\">\n              Acesse sua conta e continue automatizando formul√°rios em qualquer site\n            </p>\n            \n            <!-- Benef√≠cios -->\n            <div class=\"space-y-4 mb-8\">\n              <div class=\"flex items-center gap-3 justify-center lg:justify-start\">\n                <div class=\"w-2 h-2 bg-green-500 rounded-full\"></div>\n                <span class=\"text-gray-600\">Seus Formul√°rios salvos</span>\n              </div>\n              <div class=\"flex items-center gap-3 justify-center lg:justify-start\">\n                <div class=\"w-2 h-2 bg-green-500 rounded-full\"></div>\n                <span class=\"text-gray-600\">Sincroniza√ß√£o autom√°tica</span>\n              </div>\n              <div class=\"flex items-center gap-3 justify-center lg:justify-start\">\n                <div class=\"w-2 h-2 bg-green-500 rounded-full\"></div>\n                <span class=\"text-gray-600\">100% seguro</span>\n              </div>\n            </div>\n          </div>\n\n          <!-- Card de Login - Alinhado com o bot√£o \"Come√ßar por R$ 14,90/m√™s\" -->\n          <div class=\"bg-gray-50 rounded-lg p-8 border border-gray-200 lg:pr-4\">\n            <div class=\"text-center mb-8\">\n              <h2 class=\"text-2xl font-bold text-gray-900 mb-2\">Entrar</h2>\n              <p class=\"text-gray-600\">Entre com seu email para continuar</p>\n            </div>\n\n            <!-- Mensagem de erro -->\n            <div *ngIf=\"mensagemErro\" class=\"bg-red-50 border border-red-200 rounded-lg p-4 mb-6\">\n              <div class=\"flex items-center gap-3\">\n                <svg class=\"w-5 h-5 text-red-600 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M12 9v2m0 4h.01m-6.938 4h13.856c1.54 0 2.502-1.667 1.732-2.5L13.732 4c-.77-.833-1.964-.833-2.732 0L3.34 16.5c-.77.833.192 2.5 1.732 2.5z\"></path>\n                </svg>\n                <span class=\"text-red-800 text-sm font-medium\">{{ mensagemErro }}</span>\n              </div>\n            </div>\n\n            <!-- Formul√°rio de login -->\n            <form [formGroup]=\"loginForm\" (ngSubmit)=\"enviarCodigo()\" class=\"space-y-6\">\n              <!-- Campo Email -->\n              <div>\n                <label class=\"block text-sm font-medium text-gray-700 mb-2\">E-mail</label>\n                <input \n                  type=\"email\" \n                  formControlName=\"email\"\n                  placeholder=\"Digite seu e-mail\" \n                  autocomplete=\"email\"\n                  data-cy=\"email\"\n                  [class]=\"'w-full px-4 py-3 border rounded-lg bg-white focus:outline-none focus:ring-2 focus:ring-indigo-500 focus:border-indigo-500 transition-colors duration-200 text-gray-900 placeholder-gray-400 ' + (loginForm.get('email')?.invalid && loginForm.get('email')?.touched ? 'border-red-500' : 'border-gray-300')\"\n                />\n                <!-- Mensagem de erro para email -->\n                <div *ngIf=\"loginForm.get('email')?.invalid && loginForm.get('email')?.touched\" class=\"mt-2 text-sm text-red-600\">\n                  <span *ngIf=\"loginForm.get('email')?.errors?.['required']\">E-mail √© obrigat√≥rio</span>\n                  <span *ngIf=\"loginForm.get('email')?.errors?.['invalidFormat']\">Formato de e-mail inv√°lido</span>\n                  <span *ngIf=\"loginForm.get('email')?.errors?.['invalidDomain']\">Dom√≠nio de e-mail inv√°lido</span>\n                  <span *ngIf=\"loginForm.get('email')?.errors?.['multipleEmails']\">N√£o √© permitido m√∫ltiplos e-mails</span>\n                  <span *ngIf=\"loginForm.get('email')?.errors?.['internationalEmail']\">E-mail internacional n√£o suportado</span>\n                </div>\n              </div>\n\n              <!-- CTA Principal -->\n              <button\n                type=\"submit\"\n                [disabled]=\"loginForm.invalid || carregando\"\n                data-cy=\"login-button\"\n                class=\"w-full py-4 px-6 bg-blue-600 text-white font-semibold text-lg rounded-lg hover:bg-blue-700 transition-colors duration-200 disabled:bg-gray-400 disabled:cursor-not-allowed flex items-center justify-center gap-3\"\n              >\n                <div *ngIf=\"carregando\" class=\"w-5 h-5 border-2 border-white border-t-transparent rounded-full animate-spin\"></div>\n                <svg *ngIf=\"!carregando\" class=\"w-5 h-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M11 16l-4-4m0 0l4-4m-4 4h14m-5 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h7a3 3 0 013 3v1\"></path>\n                </svg>\n                {{ carregando ? (environment.skipEmailVerification ? 'Entrando...' : 'Enviando c√≥digo...') : 'Entrar' }}\n              </button>\n\n              <!-- Link secund√°rio -->\n              <div class=\"text-center\">\n                <a routerLink=\"/trello-register\" class=\"text-gray-600 font-medium hover:text-gray-900 transition-colors duration-200\">\n                  N√£o tem conta? Criar conta gratuita ‚Üí\n                </a>\n              </div>\n            </form>\n          </div>\n        </div>\n      </div>\n    </section>\n    \n    <!-- Footer -->\n    <app-footer></app-footer>\n  `,\n  styles: []\n})\nexport class TrelloLoginComponent {\n  loginForm: FormGroup;\n  mensagemErro = '';\n  carregando = false;\n  environment = environment;\n\n  constructor(\n    private fb: FormBuilder,\n    private authService: AuthService,\n    private router: Router,\n    private errorHandler: ErrorHandlerService\n  ) {\n    this.loginForm = this.fb.group({\n      email: ['', [Validators.required, this.emailValidator]]\n    });\n  }\n\n  ngOnInit() {\n    console.log('üîß [TRELLO_LOGIN] Environment config:');\n    console.log('   - API URL:', environment.apiUrl);\n    console.log('   - Skip Email Verification:', environment.skipEmailVerification);\n    console.log('   - Production:', environment.production);\n  }\n\n  // Validador customizado para o campo email\n  emailValidator(control: AbstractControl): ValidationErrors | null {\n    if (!control.value) return null;\n\n    const email = control.value as string;\n\n    // Verifica se h√° espa√ßos no in√≠cio ou fim\n    if (email.trim() !== email) {\n      return { invalidFormat: true };\n    }\n\n    // Verifica se cont√©m m√∫ltiplos emails (separados por v√≠rgula, ponto e v√≠rgula, etc.)\n    if (email.includes(',') || email.includes(';') || email.includes('|')) {\n      return { multipleEmails: true };\n    }\n\n    // Regex b√°sico para formato de email\n    const emailRegex = /^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\\.[a-zA-Z]{2,}$/;\n    if (!emailRegex.test(email)) {\n      return { invalidFormat: true };\n    }\n\n    // Verifica se o dom√≠nio √© v√°lido (pelo menos 2 caracteres ap√≥s o ponto)\n    const domainPart = email.split('@')[1];\n    if (!domainPart || domainPart.split('.')[1]?.length < 2) {\n      return { invalidDomain: true };\n    }\n\n    // Verifica se √© um email internacional (dom√≠nios de pa√≠s com mais de 2 caracteres)\n    const countryDomains = ['com', 'org', 'net', 'edu', 'gov', 'mil', 'int'];\n    const domainParts = domainPart.split('.');\n    const topLevelDomain = domainParts[domainParts.length - 1];\n\n    if (topLevelDomain.length > 3 && !countryDomains.includes(topLevelDomain)) {\n      return { internationalEmail: true };\n    }\n\n    return null;\n  }\n\n  // Getter para facilitar o acesso ao campo email\n  get email() { return this.loginForm.get('email')?.value; }\n\n  // Marca todos os campos como tocados para exibir as valida√ß√µes\n  marcarCamposComoTocados() {\n    Object.keys(this.loginForm.controls).forEach(key => {\n      const control = this.loginForm.get(key);\n      control?.markAsTouched();\n    });\n  }\n\n  enviarCodigo() {\n    console.log('üîê [TRELLO_LOGIN] Iniciando processo de login...');\n    console.log('   - Email:', this.email);\n    console.log('   - Skip Email Verification:', environment.skipEmailVerification);\n\n    if (this.loginForm.invalid) {\n      this.marcarCamposComoTocados();\n      this.mensagemErro = 'Por favor, corrija os erros no formul√°rio.';\n      return;\n    }\n\n    this.carregando = true;\n    this.mensagemErro = '';\n\n    // Verificar feature flag para pular verifica√ß√£o de email\n    if (environment.skipEmailVerification) {\n      console.log('üöÄ [FEATURE_FLAG] Verifica√ß√£o de email desabilitada - fazendo login direto (Trello)');\n      this.fazerLoginDireto();\n      return;\n    }\n\n    console.log('üìß [TRELLO_LOGIN] Feature flag desabilitada - enviando c√≥digo por email...');\n    this.authService.enviarCodigo(this.email).subscribe({\n      next: () => {\n        this.carregando = false;\n        this.router.navigate(['/verificar-codigo'], { queryParams: { email: this.email } });\n      },\n      error: (error: any) => {\n        this.carregando = false;\n        this.mensagemErro = this.errorHandler.getErrorMessage(error);\n      }\n    });\n  }\n\n  private fazerLoginDireto() {\n    console.log('üîê [LOGIN_DIRETO_TRELLO] Iniciando login direto para:', this.email);\n\n    // Simular um c√≥digo v√°lido para o login direto\n    const codigoSimulado = '123456';\n\n    this.authService.verificarCodigo(this.email, codigoSimulado).subscribe({\n      next: (res: any) => {\n        console.log('‚úÖ [LOGIN_DIRETO_TRELLO] Login realizado com sucesso:', res);\n        this.authService.salvarToken(res.token);\n        this.authService.salvarNomeUsuario(res.nome);\n        localStorage.setItem('plano', res.plano);\n\n        this.carregando = false;\n        this.router.navigate(['/dashboard']);\n      },\n      error: (error: any) => {\n        console.error('‚ùå [LOGIN_DIRETO_TRELLO] Erro no login direto:', error);\n        this.carregando = false;\n        this.mensagemErro = this.errorHandler.getErrorMessage(error);\n      }\n    });\n  }\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}