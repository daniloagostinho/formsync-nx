{"ast":null,"code":"import { provideBrowserGlobalErrorListeners, provideZoneChangeDetection } from '@angular/core';\nimport { provideRouter, withPreloading } from '@angular/router';\nimport { provideAnimations } from '@angular/platform-browser/animations';\nimport { provideHttpClient, withInterceptors } from '@angular/common/http';\nimport { provideNativeDateAdapter } from '@angular/material/core';\nimport { provideNgxMask } from 'ngx-mask';\nimport { routes } from './app.routes';\nimport { AuthInterceptor } from './interceptors/auth.interceptor';\nimport { debugInterceptor } from './interceptors/debug.interceptor';\nimport { SecurityInterceptor } from './interceptors/security.interceptor';\nimport { CustomPreloadStrategy } from './config/preload.config';\nexport const appConfig = {\n  providers: [provideBrowserGlobalErrorListeners(), provideZoneChangeDetection({\n    eventCoalescing: true\n  }), provideRouter(routes, withPreloading(CustomPreloadStrategy)), provideAnimations(), provideHttpClient(withInterceptors([SecurityInterceptor, AuthInterceptor, debugInterceptor])), provideNativeDateAdapter(), provideNgxMask()]\n};","map":{"version":3,"names":["provideBrowserGlobalErrorListeners","provideZoneChangeDetection","provideRouter","withPreloading","provideAnimations","provideHttpClient","withInterceptors","provideNativeDateAdapter","provideNgxMask","routes","AuthInterceptor","debugInterceptor","SecurityInterceptor","CustomPreloadStrategy","appConfig","providers","eventCoalescing"],"sources":["/home/danilo/√Årea de trabalho/formsync-nx/apps/front/src/app/app.config.ts"],"sourcesContent":["import { ApplicationConfig, provideBrowserGlobalErrorListeners, provideZoneChangeDetection } from '@angular/core';\nimport { provideRouter, withPreloading } from '@angular/router';\nimport { provideAnimations } from '@angular/platform-browser/animations';\nimport { importProvidersFrom } from '@angular/core';\nimport { provideHttpClient, withInterceptors, withFetch } from '@angular/common/http';\nimport { provideNativeDateAdapter } from '@angular/material/core';\n\nimport { provideNgxMask } from 'ngx-mask';\n\nimport { routes } from './app.routes';\nimport { AuthInterceptor } from './interceptors/auth.interceptor';\nimport { debugInterceptor } from './interceptors/debug.interceptor';\nimport { SecurityInterceptor } from './interceptors/security.interceptor';\nimport { CustomPreloadStrategy } from './config/preload.config';\n\nexport const appConfig: ApplicationConfig = {\n  providers: [\n    provideBrowserGlobalErrorListeners(),\n    provideZoneChangeDetection({\n      eventCoalescing: true\n    }),\n    provideRouter(routes, withPreloading(CustomPreloadStrategy)),\n    provideAnimations(),\n    provideHttpClient(withInterceptors([SecurityInterceptor, AuthInterceptor, debugInterceptor])),\n    provideNativeDateAdapter(),\n    provideNgxMask(),\n  ]\n};\n"],"mappings":"AAAA,SAA4BA,kCAAkC,EAAEC,0BAA0B,QAAQ,eAAe;AACjH,SAASC,aAAa,EAAEC,cAAc,QAAQ,iBAAiB;AAC/D,SAASC,iBAAiB,QAAQ,sCAAsC;AAExE,SAASC,iBAAiB,EAAEC,gBAAgB,QAAmB,sBAAsB;AACrF,SAASC,wBAAwB,QAAQ,wBAAwB;AAEjE,SAASC,cAAc,QAAQ,UAAU;AAEzC,SAASC,MAAM,QAAQ,cAAc;AACrC,SAASC,eAAe,QAAQ,iCAAiC;AACjE,SAASC,gBAAgB,QAAQ,kCAAkC;AACnE,SAASC,mBAAmB,QAAQ,qCAAqC;AACzE,SAASC,qBAAqB,QAAQ,yBAAyB;AAE/D,OAAO,MAAMC,SAAS,GAAsB;EAC1CC,SAAS,EAAE,CACTf,kCAAkC,EAAE,EACpCC,0BAA0B,CAAC;IACzBe,eAAe,EAAE;GAClB,CAAC,EACFd,aAAa,CAACO,MAAM,EAAEN,cAAc,CAACU,qBAAqB,CAAC,CAAC,EAC5DT,iBAAiB,EAAE,EACnBC,iBAAiB,CAACC,gBAAgB,CAAC,CAACM,mBAAmB,EAAEF,eAAe,EAAEC,gBAAgB,CAAC,CAAC,CAAC,EAC7FJ,wBAAwB,EAAE,EAC1BC,cAAc,EAAE;CAEnB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}