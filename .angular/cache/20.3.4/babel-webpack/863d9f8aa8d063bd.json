{"ast":null,"code":"import { NgFor, NgIf, CommonModule } from '@angular/common';\nimport { Router } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { NotificationService } from '../../services/notification.service';\nimport { MatDialog, MatDialogModule } from '@angular/material/dialog';\nimport { TemplateCsvService } from '../../services/template-csv.service';\nimport { ExtensionSyncService } from '../../services/extension-sync.service';\nimport { LoadingButtonComponent } from '../loading-button/loading-button.component';\nimport { SidebarComponent } from '../sidebar/sidebar.component';\nimport { FooterComponent } from '../footer/footer.component';\nimport { ConfirmDeleteDialogComponent } from '../template-manager/confirm-delete-dialog.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../services/template-csv.service\";\nimport * as i2 from \"../../services/extension-sync.service\";\nimport * as i3 from \"../../services/notification.service\";\nimport * as i4 from \"@angular/material/dialog\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"@angular/forms\";\nimport * as i7 from \"@angular/material/icon\";\nimport * as i8 from \"@angular/material/tooltip\";\nfunction UploadCsvComponent_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 8);\n    i0.ɵɵelement(2, \"div\", 9);\n    i0.ɵɵelementStart(3, \"h3\", 10);\n    i0.ɵɵtext(4, \" Carregando Formul\\u00E1rios \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\", 11);\n    i0.ɵɵtext(6, \" Aguarde enquanto preparamos suas informa\\u00E7\\u00F5es... \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction UploadCsvComponent_ng_template_5_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r2 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 20)(1, \"div\", 21)(2, \"div\", 22)(3, \"input\", 23);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function UploadCsvComponent_ng_template_5_div_6_Template_input_ngModelChange_3_listener($event) {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      i0.ɵɵtwoWayBindingSet(ctx_r2.searchTerm, $event) || (ctx_r2.searchTerm = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵlistener(\"input\", function UploadCsvComponent_ng_template_5_div_6_Template_input_input_3_listener() {\n      i0.ɵɵrestoreView(_r2);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.onSearchChange());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-icon\", 24);\n    i0.ɵɵtext(5, \"search\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r2.searchTerm);\n  }\n}\nfunction UploadCsvComponent_ng_template_5_div_12_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26)(1, \"div\", 40)(2, \"mat-icon\", 41);\n    i0.ɵɵtext(3, \"cloud_upload\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"h3\", 42);\n    i0.ɵɵtext(5, \" Clique ou arraste um arquivo CSV ou Excel \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\", 43);\n    i0.ɵɵtext(7, \" Formatos aceitos: .csv, .xlsx, .xls \");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction UploadCsvComponent_ng_template_5_div_12_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26)(1, \"div\", 44)(2, \"mat-icon\", 45);\n    i0.ɵɵtext(3, \"cloud_done\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"h3\", 42);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\", 43);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.selectedFile.name, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", (ctx_r2.selectedFile.size / 1024).toFixed(1), \" KB \");\n  }\n}\nfunction UploadCsvComponent_ng_template_5_div_12_button_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 46);\n    i0.ɵɵlistener(\"click\", function UploadCsvComponent_ng_template_5_div_12_button_11_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r2 = i0.ɵɵnextContext(3);\n      return i0.ɵɵresetView(ctx_r2.limparArquivo());\n    });\n    i0.ɵɵelementStart(1, \"mat-icon\");\n    i0.ɵɵtext(2, \"clear\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \" Limpar \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction UploadCsvComponent_ng_template_5_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 25)(1, \"div\", 26)(2, \"div\", 27);\n    i0.ɵɵlistener(\"click\", function UploadCsvComponent_ng_template_5_div_12_Template_div_click_2_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const fileInput_r5 = i0.ɵɵreference(4);\n      return i0.ɵɵresetView(fileInput_r5.click());\n    })(\"dragover\", function UploadCsvComponent_ng_template_5_div_12_Template_div_dragover_2_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.onDragOver($event));\n    })(\"dragleave\", function UploadCsvComponent_ng_template_5_div_12_Template_div_dragleave_2_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.onDragLeave($event));\n    })(\"drop\", function UploadCsvComponent_ng_template_5_div_12_Template_div_drop_2_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.onDrop($event));\n    })(\"keydown.enter\", function UploadCsvComponent_ng_template_5_div_12_Template_div_keydown_enter_2_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const fileInput_r5 = i0.ɵɵreference(4);\n      return i0.ɵɵresetView(fileInput_r5.click());\n    })(\"keydown.space\", function UploadCsvComponent_ng_template_5_div_12_Template_div_keydown_space_2_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const fileInput_r5 = i0.ɵɵreference(4);\n      return i0.ɵɵresetView(fileInput_r5.click());\n    });\n    i0.ɵɵelementStart(3, \"input\", 28, 1);\n    i0.ɵɵlistener(\"change\", function UploadCsvComponent_ng_template_5_div_12_Template_input_change_3_listener($event) {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.onFileSelected($event));\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, UploadCsvComponent_ng_template_5_div_12_div_5_Template, 8, 0, \"div\", 29)(6, UploadCsvComponent_ng_template_5_div_12_div_6_Template, 8, 2, \"div\", 29);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 30);\n    i0.ɵɵtext(8, \" Clique na \\u00E1rea acima ou arraste um arquivo CSV para criar formul\\u00E1rios \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 31)(10, \"app-loading-button\", 32);\n    i0.ɵɵlistener(\"onClick\", function UploadCsvComponent_ng_template_5_div_12_Template_app_loading_button_onClick_10_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.uploadArquivo());\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(11, UploadCsvComponent_ng_template_5_div_12_button_11_Template, 4, 0, \"button\", 33);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 34);\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"div\", 35)(15, \"button\", 36);\n    i0.ɵɵlistener(\"click\", function UploadCsvComponent_ng_template_5_div_12_Template_button_click_15_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r2 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r2.downloadExemplo());\n    });\n    i0.ɵɵelementStart(16, \"mat-icon\");\n    i0.ɵɵtext(17, \"download\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(18, \" Baixar Exemplo CSV \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(19, \"div\", 37)(20, \"h6\", 38);\n    i0.ɵɵtext(21, \"Formato do CSV:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(22, \"div\", 39)(23, \"p\")(24, \"strong\");\n    i0.ɵɵtext(25, \"Colunas obrigat\\u00F3rias:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(26, \" NomeTemplate, DescricaoTemplate \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(27, \"p\")(28, \"strong\");\n    i0.ɵɵtext(29, \"Campos opcionais:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(30, \" Campo1, Valor1, Tipo1, Campo2, Valor2, Tipo2... \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(31, \"p\")(32, \"strong\");\n    i0.ɵɵtext(33, \"Tipos suportados:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(34, \" text, email, password, number, tel, url \");\n    i0.ɵɵelementEnd()()()()();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassMap(ctx_r2.selectedFile ? \"border-green-400 bg-green-50\" : \"border-gray-300\");\n    i0.ɵɵclassProp(\"bg-indigo-50\", ctx_r2.isDragOver);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r2.selectedFile);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.selectedFile);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"loading\", ctx_r2.carregando)(\"disabled\", !ctx_r2.selectedFile);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.selectedFile);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.selectedFile ? \"Clique para criar formul\\u00E1rios do arquivo\" : \"Selecione um arquivo CSV primeiro\", \" \");\n  }\n}\nfunction UploadCsvComponent_ng_template_5_div_13_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 47);\n    i0.ɵɵelement(2, \"div\", 48);\n    i0.ɵɵelementStart(3, \"p\", 14);\n    i0.ɵɵtext(4, \"Carregando forul\\u00E1rios...\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction UploadCsvComponent_ng_template_5_div_13_ng_template_2_ng_container_0_tr_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"tr\", 62)(1, \"td\", 63);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\", 64);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\", 65)(6, \"span\", 66);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(8, \"td\", 65)(9, \"button\", 67);\n    i0.ɵɵlistener(\"click\", function UploadCsvComponent_ng_template_5_div_13_ng_template_2_ng_container_0_tr_14_Template_button_click_9_listener() {\n      const template_r9 = i0.ɵɵrestoreView(_r8).$implicit;\n      const ctx_r2 = i0.ɵɵnextContext(5);\n      return i0.ɵɵresetView(ctx_r2.deletarTemplate(template_r9));\n    });\n    i0.ɵɵelementStart(10, \"mat-icon\");\n    i0.ɵɵtext(11, \"delete\");\n    i0.ɵɵelementEnd()()()();\n  }\n  if (rf & 2) {\n    const template_r9 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(template_r9.nome);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(template_r9.descricao || \"-\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", template_r9.campos.length || 0, \" \");\n  }\n}\nfunction UploadCsvComponent_ng_template_5_div_13_ng_template_2_ng_container_0_option_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"option\", 68);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const size_r10 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", size_r10);\n    i0.ɵɵadvance();\n    i0.ɵɵtextInterpolate(size_r10);\n  }\n}\nfunction UploadCsvComponent_ng_template_5_div_13_ng_template_2_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 49)(2, \"table\", 50)(3, \"thead\", 51)(4, \"tr\")(5, \"th\", 52);\n    i0.ɵɵtext(6, \"Nome do Formul\\u00E1rio\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"th\", 52);\n    i0.ɵɵtext(8, \"Descri\\u00E7\\u00E3o\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"th\", 52);\n    i0.ɵɵtext(10, \"Campos\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"th\", 52);\n    i0.ɵɵtext(12, \"A\\u00E7\\u00F5es\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(13, \"tbody\", 53);\n    i0.ɵɵtemplate(14, UploadCsvComponent_ng_template_5_div_13_ng_template_2_ng_container_0_tr_14_Template, 12, 3, \"tr\", 54);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(15, \"div\", 55)(16, \"div\", 56)(17, \"span\", 57);\n    i0.ɵɵtext(18, \"Mostrar\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"select\", 58);\n    i0.ɵɵtwoWayListener(\"ngModelChange\", function UploadCsvComponent_ng_template_5_div_13_ng_template_2_ng_container_0_Template_select_ngModelChange_19_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r2 = i0.ɵɵnextContext(4);\n      i0.ɵɵtwoWayBindingSet(ctx_r2.pageSize, $event) || (ctx_r2.pageSize = $event);\n      return i0.ɵɵresetView($event);\n    });\n    i0.ɵɵlistener(\"change\", function UploadCsvComponent_ng_template_5_div_13_ng_template_2_ng_container_0_Template_select_change_19_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r2 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r2.onPageSizeChange());\n    });\n    i0.ɵɵtemplate(20, UploadCsvComponent_ng_template_5_div_13_ng_template_2_ng_container_0_option_20_Template, 2, 2, \"option\", 59);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"span\", 57);\n    i0.ɵɵtext(22);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(23, \"div\", 56)(24, \"button\", 60);\n    i0.ɵɵlistener(\"click\", function UploadCsvComponent_ng_template_5_div_13_ng_template_2_ng_container_0_Template_button_click_24_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r2 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r2.previousPage());\n    });\n    i0.ɵɵelementStart(25, \"mat-icon\");\n    i0.ɵɵtext(26, \"chevron_left\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(27, \"span\", 61);\n    i0.ɵɵtext(28);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(29, \"button\", 60);\n    i0.ɵɵlistener(\"click\", function UploadCsvComponent_ng_template_5_div_13_ng_template_2_ng_container_0_Template_button_click_29_listener() {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r2 = i0.ɵɵnextContext(4);\n      return i0.ɵɵresetView(ctx_r2.nextPage());\n    });\n    i0.ɵɵelementStart(30, \"mat-icon\");\n    i0.ɵɵtext(31, \"chevron_right\");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(14);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.paginatedTemplates);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtwoWayProperty(\"ngModel\", ctx_r2.pageSize);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngForOf\", ctx_r2.pageSizeOptions);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"de \", ctx_r2.filteredTemplates.length, \" formul\\u00E1rios\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r2.currentPage === 1);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate2(\" P\\u00E1gina \", ctx_r2.currentPage, \" de \", ctx_r2.getTotalPages(), \" \");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"disabled\", ctx_r2.currentPage >= ctx_r2.getTotalPages());\n  }\n}\nfunction UploadCsvComponent_ng_template_5_div_13_ng_template_2_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 69)(1, \"div\", 70)(2, \"mat-icon\", 71);\n    i0.ɵɵtext(3, \"article\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"h4\", 72);\n    i0.ɵɵtext(5, \"Nenhum formul\\u00E1rio encontrado\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\", 43);\n    i0.ɵɵtext(7, \" Fa\\u00E7a upload de um arquivo CSV para criar seus primeiros formul\\u00E1rios \");\n    i0.ɵɵelementEnd()();\n  }\n}\nfunction UploadCsvComponent_ng_template_5_div_13_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, UploadCsvComponent_ng_template_5_div_13_ng_template_2_ng_container_0_Template, 32, 8, \"ng-container\", 7)(1, UploadCsvComponent_ng_template_5_div_13_ng_template_2_ng_template_1_Template, 8, 0, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n  }\n  if (rf & 2) {\n    const noTemplates_r11 = i0.ɵɵreference(2);\n    const ctx_r2 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.templates.length > 0)(\"ngIfElse\", noTemplates_r11);\n  }\n}\nfunction UploadCsvComponent_ng_template_5_div_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵtemplate(1, UploadCsvComponent_ng_template_5_div_13_ng_container_1_Template, 5, 0, \"ng-container\", 7)(2, UploadCsvComponent_ng_template_5_div_13_ng_template_2_Template, 3, 2, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const templatesContent_r12 = i0.ɵɵreference(3);\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.carregando)(\"ngIfElse\", templatesContent_r12);\n  }\n}\nfunction UploadCsvComponent_ng_template_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r1 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 12)(1, \"h1\", 13);\n    i0.ɵɵtext(2, \" Upload de Formul\\u00E1rios CSV \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\", 14);\n    i0.ɵɵtext(4, \" Fa\\u00E7a upload de um arquivo CSV para criar formul\\u00E1rios com campos estruturados \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(5, \"div\", 15);\n    i0.ɵɵtemplate(6, UploadCsvComponent_ng_template_5_div_6_Template, 6, 1, \"div\", 16);\n    i0.ɵɵelementStart(7, \"div\", 17)(8, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function UploadCsvComponent_ng_template_5_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.activeTab = \"upload\");\n    });\n    i0.ɵɵtext(9, \" Importar CSV \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"button\", 18);\n    i0.ɵɵlistener(\"click\", function UploadCsvComponent_ng_template_5_Template_button_click_10_listener() {\n      i0.ɵɵrestoreView(_r1);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r2.activeTab = \"list\");\n    });\n    i0.ɵɵtext(11, \" Meus Formul\\u00E1rios \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵtemplate(12, UploadCsvComponent_ng_template_5_div_12_Template, 35, 10, \"div\", 19)(13, UploadCsvComponent_ng_template_5_div_13_Template, 4, 2, \"div\", 19);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.activeTab === \"list\" && ctx_r2.templates.length > 0);\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassMap(ctx_r2.activeTab === \"upload\" ? \"px-6 py-4 text-indigo-600 border-b-2 border-indigo-500 font-semibold\" : \"px-6 py-4 text-gray-500 hover:text-gray-700 font-medium\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵclassMap(ctx_r2.activeTab === \"list\" ? \"px-6 py-4 text-indigo-600 border-b-2 border-indigo-500 font-semibold\" : \"px-6 py-4 text-gray-500 hover:text-gray-700 font-medium\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.activeTab === \"upload\");\n    i0.ɵɵadvance();\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.activeTab === \"list\");\n  }\n}\nexport class UploadCsvComponent {\n  csvService;\n  extensionSyncService;\n  notificationService;\n  dialog;\n  router;\n  activeTab = 'upload';\n  selectedFile = null;\n  isDragOver = false;\n  templates = [];\n  carregando = false;\n  carregandoPagina = true;\n  // Paginação\n  pageSize = 10;\n  currentPage = 1;\n  pageSizeOptions = [5, 10, 25, 50];\n  // Colunas da tabela\n  displayedColumns = ['nome', 'descricao', 'quantidadeCampos', 'acoes'];\n  // Busca\n  searchTerm = '';\n  filteredTemplates = [];\n  constructor(csvService, extensionSyncService, notificationService, dialog, router) {\n    this.csvService = csvService;\n    this.extensionSyncService = extensionSyncService;\n    this.notificationService = notificationService;\n    this.dialog = dialog;\n    this.router = router;\n  }\n  ngOnInit() {\n    this.carregarDadosCompleto();\n  }\n  carregarDadosCompleto() {\n    this.carregandoPagina = true;\n    // Verificar permissão primeiro\n    this.verificarPermissao();\n    // Simular carregamento inicial\n    setTimeout(() => {\n      this.carregar();\n      this.carregandoPagina = false;\n    }, 1500);\n  }\n  verificarPermissao() {\n    const planoUsuario = localStorage.getItem('plano') || 'PESSOAL';\n    const planoUpper = planoUsuario.toUpperCase();\n    const podeAcessar = planoUpper === 'EMPRESARIAL' || planoUpper.includes('EMPRESARIAL') || planoUpper === 'PROFISSIONAL_VITALICIO' || planoUpper.includes('VITALICIO') || planoUpper === 'PROFISSIONAL_MENSAL' || planoUpper.includes('MENSAL');\n    if (!podeAcessar) {\n      this.notificationService.showError('Upload CSV disponível apenas nos planos Profissional e Empresarial. Faça upgrade para continuar.');\n      this.router.navigate(['/upgrade']);\n      return;\n    }\n  }\n  carregar() {\n    this.carregando = true;\n    // Obter ID do usuário autenticado\n    const userId = this.getUserId();\n    if (userId) {\n      // Buscar Formulários do usuário específico\n      this.csvService.listarTemplates().subscribe({\n        next: templates => {\n          this.templates = templates;\n          this.filtrarTemplates();\n          this.carregando = false;\n          console.log('✅ Templates carregados para usuário', userId, ':', templates.length);\n        },\n        error: error => {\n          console.error('❌ Erro ao carregar templates:', error);\n          this.notificationService.showError('Erro ao carregar templates. Tente novamente.');\n          this.carregando = false;\n        }\n      });\n    } else {\n      // Fallback: Buscar Formulários gerais (sem usuário específico)\n      this.csvService.listarTemplates().subscribe({\n        next: templates => {\n          this.templates = templates;\n          this.filtrarTemplates();\n          this.carregando = false;\n          console.log('✅ Templates carregados (geral):', templates.length);\n        },\n        error: error => {\n          console.error('❌ Erro ao carregar templates:', error);\n          this.notificationService.showError('Erro ao carregar templates. Tente novamente.');\n          this.carregando = false;\n        }\n      });\n    }\n  }\n  /**\n   * Obtém o ID do usuário autenticado\n   */\n  getUserId() {\n    try {\n      // 1. Tenta pegar do localStorage (userId)\n      const userId = localStorage.getItem('userId');\n      if (userId && !isNaN(Number(userId))) {\n        return Number(userId);\n      }\n      // 2. Tenta pegar do token JWT\n      const token = localStorage.getItem('token');\n      if (token) {\n        const payload = JSON.parse(atob(token.split('.')[1]));\n        if (payload.id && !isNaN(Number(payload.id))) {\n          return Number(payload.id);\n        }\n      }\n      // 3. Fallback para userData\n      const userData = localStorage.getItem('userData');\n      if (userData) {\n        const user = JSON.parse(userData);\n        if (user.id && !isNaN(Number(user.id))) {\n          return Number(user.id);\n        }\n      }\n      return null;\n    } catch (error) {\n      console.error('Erro ao decodificar token:', error);\n      return null;\n    }\n  }\n  /**\n   * Notifica a extensão sobre novos templates criados\n   */\n  notificarExtensaoNovosTemplates(response) {\n    if (response.templates && Array.isArray(response.templates)) {\n      console.log('🔔 Notificando extensão sobre novos templates...');\n      // Notificar cada template individualmente\n      response.templates.forEach(template => {\n        this.extensionSyncService.notificarNovoTemplate(template.id, template.nome).subscribe({\n          next: success => {\n            if (success) {\n              console.log(`✅ Extensão notificada sobre template: ${template.nome}`);\n            } else {\n              console.log(`⚠️ Falha ao notificar extensão sobre template: ${template.nome}`);\n            }\n          },\n          error: error => {\n            console.error(`❌ Erro ao notificar extensão sobre template ${template.nome}:`, error);\n          }\n        });\n      });\n      // Forçar sincronização geral\n      this.extensionSyncService.forcarSincronizacao().subscribe({\n        next: success => {\n          if (success) {\n            console.log('🔄 Sincronização forçada com extensão realizada');\n          } else {\n            console.log('⚠️ Falha na sincronização forçada com extensão');\n          }\n        },\n        error: error => {\n          console.error('❌ Erro na sincronização forçada:', error);\n        }\n      });\n    }\n  }\n  onFileSelected(event) {\n    const file = event.target.files[0];\n    if (file && this.validarArquivo(file)) {\n      this.selectedFile = file;\n      console.log('📁 Arquivo selecionado:', file.name);\n    }\n  }\n  onDragOver(event) {\n    event.preventDefault();\n    this.isDragOver = true;\n  }\n  onDragLeave(event) {\n    event.preventDefault();\n    this.isDragOver = false;\n  }\n  onDrop(event) {\n    event.preventDefault();\n    this.isDragOver = false;\n    const files = event.dataTransfer?.files;\n    if (files && files.length > 0) {\n      const file = files[0];\n      if (this.validarArquivo(file)) {\n        this.selectedFile = file;\n        console.log('📁 Arquivo recebido via drag & drop:', file.name);\n      }\n    }\n  }\n  validarArquivo(file) {\n    // Verificar se arquivo está vazio\n    if (file.size === 0) {\n      this.notificationService.showError('Arquivo está vazio. Selecione um arquivo com conteúdo.');\n      return false;\n    }\n    // Verificar tamanho (5MB)\n    const maxSize = 5 * 1024 * 1024;\n    if (file.size > maxSize) {\n      this.notificationService.showError('Arquivo muito grande. Tamanho máximo: 5MB');\n      return false;\n    }\n    // Verificar tipo de arquivo (CSV e Excel)\n    const fileName = file.name.toLowerCase();\n    const isCSV = file.type.includes('csv') || fileName.endsWith('.csv');\n    const isExcel = file.type.includes('sheet') || fileName.endsWith('.xlsx') || fileName.endsWith('.xls');\n    if (!isCSV && !isExcel) {\n      this.notificationService.showError('Apenas arquivos CSV (.csv) e Excel (.xlsx, .xls) são aceitos.');\n      return false;\n    }\n    // Verificar se arquivo pode estar corrompido (extensão não bate com tipo MIME)\n    if (fileName.endsWith('.csv') && file.type && !file.type.includes('csv') && !file.type.includes('text')) {\n      this.notificationService.showWarning('Arquivo pode estar corrompido ou ter extensão incorreta.');\n    }\n    if ((fileName.endsWith('.xlsx') || fileName.endsWith('.xls')) && file.type && !file.type.includes('sheet') && !file.type.includes('excel')) {\n      this.notificationService.showWarning('Arquivo Excel pode estar corrompido ou ter extensão incorreta.');\n    }\n    return true;\n  }\n  uploadArquivo() {\n    if (!this.selectedFile) {\n      this.notificationService.showWarning('Selecione um arquivo CSV ou Excel para fazer upload.');\n      return;\n    }\n    // Validar tipo de arquivo\n    const fileName = this.selectedFile.name.toLowerCase();\n    const isCSV = fileName.endsWith('.csv');\n    const isExcel = fileName.endsWith('.xlsx') || fileName.endsWith('.xls');\n    if (!isCSV && !isExcel) {\n      this.notificationService.showError('Por favor, selecione um arquivo CSV (.csv) ou Excel (.xlsx, .xls) válido.');\n      return;\n    }\n    // Para arquivos Excel, processar normalmente (backend já suporta)\n    if (isExcel) {\n      this.validarEstruturaExcel();\n      return;\n    }\n    // Validar formato básico do CSV\n    if (isCSV) {\n      this.validarEstruturaCsv();\n    }\n  }\n  validarEstruturaCsv() {\n    if (!this.selectedFile) return;\n    const reader = new FileReader();\n    reader.onload = e => {\n      const content = e.target?.result;\n      // Verificar se arquivo está vazio\n      if (!content || content.trim().length === 0) {\n        this.notificationService.showError('Arquivo CSV está vazio.');\n        return;\n      }\n      const lines = content.split('\\n').filter(line => line.trim().length > 0);\n      if (lines.length < 2) {\n        this.notificationService.showError('Arquivo CSV deve ter pelo menos 2 linhas (cabeçalho + dados).');\n        return;\n      }\n      const firstLine = lines[0];\n      const columns = firstLine.split(',').map(col => col.trim());\n      // Validar estrutura básica\n      if (columns.length < 2) {\n        this.notificationService.showError('Formato CSV inválido: deve ter pelo menos 2 colunas (NomeTemplate, DescricaoTemplate)');\n        return;\n      }\n      // Verificar colunas obrigatórias\n      const firstCol = (columns[0] || '').toLowerCase().replace(/\"/g, '');\n      const secondCol = (columns[1] || '').toLowerCase().replace(/\"/g, '');\n      if (!firstCol.includes('nome') && !firstCol.includes('template')) {\n        this.notificationService.showError('Formato CSV inválido: primeira coluna deve conter \"nome\" ou \"template\" (ex: NomeTemplate)');\n        return;\n      }\n      if (!secondCol.includes('descricao') && !secondCol.includes('desc')) {\n        this.notificationService.showError('Formato CSV inválido: segunda coluna deve conter \"descricao\" ou \"desc\" (ex: DescricaoTemplate)');\n        return;\n      }\n      // Validar dados nas linhas\n      const dataLines = lines.slice(1);\n      const templateNames = new Set();\n      let hasErrors = false;\n      for (let i = 0; i < dataLines.length; i++) {\n        const line = dataLines[i];\n        const row = line.split(',').map(cell => cell.trim().replace(/\"/g, ''));\n        // Verificar se linha tem dados suficientes\n        if (row.length < 2) {\n          this.notificationService.showError(`Linha ${i + 2}: dados insuficientes. Deve ter pelo menos nome e descrição.`);\n          hasErrors = true;\n          break;\n        }\n        // Verificar se nome do template está vazio\n        if (!row[0] || row[0].trim().length === 0) {\n          this.notificationService.showError(`Linha ${i + 2}: nome do template não pode estar vazio.`);\n          hasErrors = true;\n          break;\n        }\n        // Verificar se descrição está vazia\n        if (!row[1] || row[1].trim().length === 0) {\n          this.notificationService.showError(`Linha ${i + 2}: descrição do template não pode estar vazia.`);\n          hasErrors = true;\n          break;\n        }\n        // Verificar dados duplicados\n        const templateName = row[0].toLowerCase();\n        if (templateNames.has(templateName)) {\n          this.notificationService.showError(`Linha ${i + 2}: template \"${row[0]}\" duplicado. Nomes de templates devem ser únicos.`);\n          hasErrors = true;\n          break;\n        }\n        templateNames.add(templateName);\n        // Validar tipos de dados nos campos (se houver campos extras)\n        if (row.length > 2) {\n          const fieldPairs = Math.floor((row.length - 2) / 3); // Nome, Valor, Tipo\n          for (let j = 0; j < fieldPairs; j++) {\n            const fieldIndex = 2 + j * 3;\n            const fieldName = row[fieldIndex];\n            const fieldValue = row[fieldIndex + 1];\n            const fieldType = row[fieldIndex + 2];\n            if (fieldName && fieldName.trim().length > 0) {\n              // Validar se tipo é válido\n              const validTypes = ['text', 'email', 'password', 'number', 'tel', 'url', 'date'];\n              if (fieldType && !validTypes.includes(fieldType.toLowerCase())) {\n                this.notificationService.showWarning(`Linha ${i + 2}: tipo \"${fieldType}\" pode não ser suportado. Tipos válidos: ${validTypes.join(', ')}`);\n              }\n              // Validar formato de email se tipo for email\n              if (fieldType && fieldType.toLowerCase() === 'email' && fieldValue) {\n                const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n                if (!emailRegex.test(fieldValue)) {\n                  this.notificationService.showWarning(`Linha ${i + 2}: valor \"${fieldValue}\" não parece ser um email válido.`);\n                }\n              }\n            }\n          }\n        }\n      }\n      if (!hasErrors) {\n        // Se chegou até aqui, o formato está correto, continuar com o upload\n        this.fazerUpload();\n      }\n    };\n    reader.onerror = () => {\n      this.notificationService.showError('Erro ao ler arquivo. O arquivo pode estar corrompido.');\n    };\n    reader.readAsText(this.selectedFile, 'UTF-8');\n  }\n  validarEstruturaExcel() {\n    if (!this.selectedFile) return;\n    // Para Excel, apenas fazer upload direto - o backend fará a validação\n    // O backend já suporta Excel completamente\n    this.fazerUpload();\n  }\n  fazerUpload() {\n    if (!this.selectedFile) {\n      this.notificationService.showError('Nenhum arquivo selecionado.');\n      return;\n    }\n    // Log para debug\n    console.log('📁 Arquivo selecionado:', {\n      nome: this.selectedFile.name,\n      tamanho: this.selectedFile.size,\n      tipo: this.selectedFile.type\n    });\n    this.carregando = true;\n    this.csvService.uploadCsv(this.selectedFile).subscribe({\n      next: response => {\n        console.log('✅ Upload realizado com sucesso:', response);\n        // Usar mensagem da API ou construir mensagem com dados\n        const mensagem = response?.message || `CSV processado com sucesso! ${response.templatesCriados} templates criados.`;\n        this.notificationService.showSuccess(mensagem);\n        // Limpar arquivo selecionado\n        this.selectedFile = null;\n        // Notificar extensão sobre novos templates\n        this.notificarExtensaoNovosTemplates(response);\n        // Recarregar dados\n        this.carregar();\n        // Mudar para aba de listagem\n        this.activeTab = 'list';\n      },\n      error: error => {\n        console.error('❌ Erro no upload:', error);\n        let mensagem = 'Erro ao processar CSV. Tente novamente.';\n        if (error.error?.message) {\n          mensagem = error.error.message;\n        }\n        this.notificationService.showError(mensagem);\n        this.carregando = false;\n      }\n    });\n  }\n  filtrarTemplates() {\n    if (!this.searchTerm.trim()) {\n      this.filteredTemplates = this.templates;\n    } else {\n      const term = this.searchTerm.toLowerCase();\n      this.filteredTemplates = this.templates.filter(template => template.nome?.toLowerCase().includes(term) || template.descricao?.toLowerCase().includes(term));\n    }\n  }\n  onSearchChange() {\n    this.filtrarTemplates();\n    this.currentPage = 1;\n  }\n  onPageChange(event) {\n    this.currentPage = event.pageIndex + 1;\n    this.pageSize = event.pageSize;\n  }\n  onPageSizeChange() {\n    this.currentPage = 1;\n  }\n  previousPage() {\n    if (this.currentPage > 1) {\n      this.currentPage--;\n    }\n  }\n  nextPage() {\n    if (this.currentPage < this.getTotalPages()) {\n      this.currentPage++;\n    }\n  }\n  getTotalPages() {\n    return Math.ceil(this.filteredTemplates.length / this.pageSize);\n  }\n  get paginatedTemplates() {\n    const startIndex = (this.currentPage - 1) * this.pageSize;\n    const endIndex = startIndex + this.pageSize;\n    return this.filteredTemplates.slice(startIndex, endIndex);\n  }\n  deletarTemplate(template) {\n    const dialogRef = this.dialog.open(ConfirmDeleteDialogComponent, {\n      data: {\n        templateName: template.nome,\n        templateId: template.id\n      }\n    });\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.carregando = true;\n        this.csvService.deletarTemplate(template.id).subscribe({\n          next: () => {\n            console.log('✅ Template deletado:', template.nome);\n            this.notificationService.showSuccess('Template deletado com sucesso!');\n            // Recarregar dados\n            this.carregar();\n          },\n          error: error => {\n            console.error('❌ Erro ao deletar template:', error);\n            this.notificationService.showError('Erro ao deletar template. Tente novamente.');\n            this.carregando = false;\n          }\n        });\n      }\n    });\n  }\n  limparArquivo() {\n    this.selectedFile = null;\n  }\n  downloadExemplo() {\n    // Criar conteúdo do CSV de exemplo com formato EXATO esperado pelo backend\n    // O backend espera: primeira coluna deve conter 'nome' ou 'template'\n    //                   segunda coluna deve conter 'descricao' ou 'desc'\n    const csvContent = `NomeTemplate,DescricaoTemplate,Campo1,Valor1,Tipo1,Campo2,Valor2,Tipo2\nLogin Google,Template para login no Google,email,usuario@email.com,email,senha,123456,password\nLogin Facebook,Template para login no Facebook,email,usuario@email.com,email,senha,123456,password\nCadastro Site,Template para cadastro em site,usuario,usuario123,text,email,usuario@email.com,email\nFormulário Contato,Template para formulário de contato,nome,João Silva,text,email,joao@email.com,email`;\n    // Criar blob e download\n    const blob = new Blob([csvContent], {\n      type: 'text/csv;charset=utf-8'\n    });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'exemplo-templates.csv';\n    a.click();\n    window.URL.revokeObjectURL(url);\n    // Mostrar mensagem de sucesso com informações sobre o formato\n    this.notificationService.showSuccess('Arquivo de exemplo baixado! Formato: NomeTemplate,DescricaoTemplate,Campo1,Valor1,Tipo1...');\n  }\n  static ɵfac = function UploadCsvComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || UploadCsvComponent)(i0.ɵɵdirectiveInject(i1.TemplateCsvService), i0.ɵɵdirectiveInject(i2.ExtensionSyncService), i0.ɵɵdirectiveInject(i3.NotificationService), i0.ɵɵdirectiveInject(i4.MatDialog), i0.ɵɵdirectiveInject(i5.Router));\n  };\n  static ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UploadCsvComponent,\n    selectors: [[\"app-upload-csv\"]],\n    decls: 8,\n    vars: 2,\n    consts: [[\"uploadContent\", \"\"], [\"fileInput\", \"\"], [\"templatesContent\", \"\"], [\"noTemplates\", \"\"], [1, \"min-h-screen\", \"bg-gray-50\"], [1, \"flex\"], [1, \"flex-1\", \"p-4\"], [4, \"ngIf\", \"ngIfElse\"], [1, \"flex\", \"flex-col\", \"items-center\", \"justify-center\", \"py-16\"], [1, \"animate-spin\", \"rounded-full\", \"h-10\", \"w-10\", \"border-b-2\", \"border-indigo-600\"], [1, \"mt-6\", \"text-lg\", \"font-semibold\", \"text-gray-900\"], [1, \"text-gray-500\", \"mt-2\"], [1, \"mb-6\"], [1, \"text-xl\", \"font-bold\", \"text-gray-900\", \"mb-1\"], [1, \"text-gray-600\"], [1, \"bg-white\", \"rounded-xl\", \"border\", \"border-gray-200\", \"p-4\", \"hover:border-gray-300\", \"transition-colors\", \"duration-200\", \"mb-6\"], [\"class\", \"p-4 border-b border-gray-200 mb-4\", 4, \"ngIf\"], [1, \"flex\", \"border-b\", \"border-gray-200\"], [1, \"transition-colors\", \"duration-200\", 3, \"click\"], [\"class\", \"p-6\", 4, \"ngIf\"], [1, \"p-4\", \"border-b\", \"border-gray-200\", \"mb-4\"], [1, \"max-w-md\", \"mx-auto\"], [1, \"relative\"], [\"type\", \"text\", \"placeholder\", \"Buscar Formul\\u00E1rios...\", 1, \"w-full\", \"px-4\", \"py-3\", \"pl-12\", \"border\", \"border-gray-300\", \"rounded-xl\", \"bg-white\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-indigo-500/20\", \"focus:border-indigo-500\", \"transition-all\", \"duration-200\", \"text-gray-900\", \"placeholder-gray-500\", 3, \"ngModelChange\", \"input\", \"ngModel\"], [1, \"absolute\", \"left-3\", \"top-1/2\", \"transform\", \"-translate-y-1/2\", \"text-gray-400\"], [1, \"p-6\"], [1, \"text-center\"], [\"id\", \"csv-upload-area\", \"role\", \"button\", \"tabindex\", \"0\", \"aria-label\", \"\\u00C1rea para upload de arquivo CSV\", 1, \"w-full\", \"max-w-2xl\", \"mx-auto\", \"p-12\", \"border-2\", \"border-dashed\", \"rounded-2xl\", \"cursor-pointer\", \"transition-all\", \"duration-200\", \"hover:border-indigo-400\", \"hover:bg-indigo-50\", 3, \"click\", \"dragover\", \"dragleave\", \"drop\", \"keydown.enter\", \"keydown.space\"], [\"type\", \"file\", \"accept\", \".csv,.xlsx,.xls\", \"aria-describedby\", \"uploadHelp\", 1, \"hidden\", 3, \"change\"], [\"class\", \"text-center\", 4, \"ngIf\"], [\"id\", \"uploadHelp\", 1, \"text-sm\", \"text-gray-500\", \"mt-3\"], [1, \"mt-8\", \"flex\", \"gap-4\", \"justify-center\"], [\"id\", \"csv-upload-button\", \"text\", \"Enviar CSV\", \"loadingText\", \"Enviando...\", \"icon\", \"cloud_upload\", \"ariaLabel\", \"Enviar arquivo CSV\", \"ariaDescribedBy\", \"uploadButtonHelp\", 3, \"onClick\", \"loading\", \"disabled\"], [\"class\", \"px-6 py-3 text-red-600 border border-red-300 rounded-xl bg-white hover:bg-red-50 hover:border-red-400 transition-all duration-200 font-semibold flex items-center gap-2\", 3, \"click\", 4, \"ngIf\"], [\"id\", \"uploadButtonHelp\", 1, \"text-sm\", \"text-gray-500\", \"mt-2\"], [1, \"mt-6\"], [1, \"px-4\", \"py-2\", \"text-indigo-600\", \"border\", \"border-indigo-300\", \"rounded-lg\", \"bg-white\", \"hover:bg-indigo-50\", \"hover:border-indigo-400\", \"transition-all\", \"duration-200\", \"font-medium\", \"flex\", \"items-center\", \"gap-2\", \"mx-auto\", 3, \"click\"], [1, \"mt-6\", \"p-4\", \"bg-gray-50\", \"rounded-xl\", \"border\", \"border-gray-200\"], [1, \"text-sm\", \"font-semibold\", \"text-gray-800\", \"mb-3\"], [1, \"space-y-2\", \"text-sm\", \"text-gray-600\"], [1, \"w-20\", \"h-20\", \"bg-indigo-100\", \"rounded-xl\", \"flex\", \"items-center\", \"justify-center\", \"mx-auto\", \"mb-6\"], [1, \"text-indigo-600\", \"text-4xl\"], [1, \"text-xl\", \"font-semibold\", \"text-gray-800\", \"mb-2\"], [1, \"text-gray-500\"], [1, \"w-20\", \"h-20\", \"bg-green-100\", \"rounded-xl\", \"flex\", \"items-center\", \"justify-center\", \"mx-auto\", \"mb-6\"], [1, \"text-green-600\", \"text-4xl\"], [1, \"px-6\", \"py-3\", \"text-red-600\", \"border\", \"border-red-300\", \"rounded-xl\", \"bg-white\", \"hover:bg-red-50\", \"hover:border-red-400\", \"transition-all\", \"duration-200\", \"font-semibold\", \"flex\", \"items-center\", \"gap-2\", 3, \"click\"], [1, \"text-center\", \"py-8\"], [1, \"animate-spin\", \"rounded-full\", \"h-8\", \"w-8\", \"border-b-2\", \"border-indigo-600\", \"mx-auto\", \"mb-4\"], [1, \"overflow-hidden\", \"rounded-xl\", \"border\", \"border-gray-200\"], [1, \"w-full\"], [1, \"bg-gray-50\"], [1, \"px-6\", \"py-4\", \"text-left\", \"text-sm\", \"font-semibold\", \"text-gray-800\"], [1, \"bg-white\", \"divide-y\", \"divide-gray-200\"], [\"class\", \"hover:bg-gray-50 transition-colors duration-200\", 4, \"ngFor\", \"ngForOf\"], [1, \"mt-6\", \"flex\", \"items-center\", \"justify-between\"], [1, \"flex\", \"items-center\", \"gap-2\"], [1, \"text-sm\", \"text-gray-700\"], [1, \"px-3\", \"py-2\", \"border\", \"border-gray-300\", \"rounded-lg\", \"bg-white\", \"text-sm\", \"focus:outline-none\", \"focus:ring-2\", \"focus:ring-indigo-500/20\", \"focus:border-indigo-500\", 3, \"ngModelChange\", \"change\", \"ngModel\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"px-3\", \"py-2\", \"text-gray-500\", \"border\", \"border-gray-300\", \"rounded-lg\", \"bg-white\", \"hover:bg-gray-50\", \"disabled:opacity-50\", \"disabled:cursor-not-allowed\", \"transition-colors\", \"duration-200\", 3, \"click\", \"disabled\"], [1, \"px-3\", \"py-2\", \"text-sm\", \"text-gray-700\"], [1, \"hover:bg-gray-50\", \"transition-colors\", \"duration-200\"], [1, \"px-6\", \"py-4\", \"text-sm\", \"text-gray-900\"], [1, \"px-6\", \"py-4\", \"text-sm\", \"text-gray-600\"], [1, \"px-6\", \"py-4\"], [1, \"inline-flex\", \"items-center\", \"px-3\", \"py-1\", \"rounded-full\", \"text-xs\", \"font-medium\", \"bg-indigo-100\", \"text-indigo-800\"], [\"matTooltip\", \"Deletar template\", 1, \"p-2\", \"text-red-600\", \"hover:text-red-800\", \"hover:bg-red-50\", \"rounded-lg\", \"transition-colors\", \"duration-200\", 3, \"click\"], [3, \"value\"], [1, \"text-center\", \"py-12\"], [1, \"w-20\", \"h-20\", \"bg-gray-100\", \"rounded-xl\", \"flex\", \"items-center\", \"justify-center\", \"mx-auto\", \"mb-6\"], [1, \"text-gray-400\", \"text-4xl\"], [1, \"text-xl\", \"font-semibold\", \"text-gray-700\", \"mb-3\"]],\n    template: function UploadCsvComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 4)(1, \"div\", 5);\n        i0.ɵɵelement(2, \"app-sidebar\");\n        i0.ɵɵelementStart(3, \"main\", 6);\n        i0.ɵɵtemplate(4, UploadCsvComponent_ng_container_4_Template, 7, 0, \"ng-container\", 7)(5, UploadCsvComponent_ng_template_5_Template, 14, 7, \"ng-template\", null, 0, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelement(7, \"app-footer\");\n      }\n      if (rf & 2) {\n        const uploadContent_r13 = i0.ɵɵreference(6);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.carregandoPagina)(\"ngIfElse\", uploadContent_r13);\n      }\n    },\n    dependencies: [NgIf, NgFor, CommonModule, FormsModule, i6.NgSelectOption, i6.ɵNgSelectMultipleOption, i6.DefaultValueAccessor, i6.SelectControlValueAccessor, i6.NgControlStatus, i6.NgModel, LoadingButtonComponent, MatIconModule, i7.MatIcon, MatTooltipModule, i8.MatTooltip, MatDialogModule, SidebarComponent, FooterComponent],\n    styles: [\"\\n\\n\\n\\n\\n\\n\\n\\n\\n\\n[_ngcontent-%COMP%]::-webkit-scrollbar {\\n  width: 8px;\\n  height: 8px;\\n}\\n\\n[_ngcontent-%COMP%]::-webkit-scrollbar-track {\\n  background: #f1f5f9;\\n  border-radius: 4px;\\n}\\n\\n[_ngcontent-%COMP%]::-webkit-scrollbar-thumb {\\n  background: #cbd5e1;\\n  border-radius: 4px;\\n}\\n\\n[_ngcontent-%COMP%]::-webkit-scrollbar-thumb:hover {\\n  background: #94a3b8;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL2FwcHMvZnJvbnQvc3JjL2FwcC9jb21wb25lbnRzL3VwbG9hZC1jc3YvdXBsb2FkLWNzdi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztrRkFFa0Y7O0FBRWxGOztrRkFFa0Y7O0FBRWxGO0VBQ0UsVUFBVTtFQUNWLFdBQVc7QUFDYjs7QUFFQTtFQUNFLG1CQUFtQjtFQUNuQixrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxtQkFBbUI7RUFDbkIsa0JBQWtCO0FBQ3BCOztBQUVBO0VBQ0UsbUJBQW1CO0FBQ3JCIiwic291cmNlc0NvbnRlbnQiOlsiLyogPT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT1cbiAgIFVQTE9BRCBDU1YgQ09NUE9ORU5UIC0gRGVzaWduIFN5c3RlbSBDb25zaXN0ZW50ZSBjb20gRGFzaGJvYXJkXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG4vKiA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PVxuICAgQ1VTVE9NIFNDUk9MTEJBUiAobWFudGlkbyBwYXJhIGNvbnNpc3TDg8KqbmNpYSB2aXN1YWwpXG4gICA9PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PT09PSAqL1xuXG46Oi13ZWJraXQtc2Nyb2xsYmFyIHtcbiAgd2lkdGg6IDhweDtcbiAgaGVpZ2h0OiA4cHg7XG59XG5cbjo6LXdlYmtpdC1zY3JvbGxiYXItdHJhY2sge1xuICBiYWNrZ3JvdW5kOiAjZjFmNWY5O1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG59XG5cbjo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWIge1xuICBiYWNrZ3JvdW5kOiAjY2JkNWUxO1xuICBib3JkZXItcmFkaXVzOiA0cHg7XG59XG5cbjo6LXdlYmtpdC1zY3JvbGxiYXItdGh1bWI6aG92ZXIge1xuICBiYWNrZ3JvdW5kOiAjOTRhM2I4O1xufSJdLCJzb3VyY2VSb290IjoiIn0= */\"]\n  });\n}","map":{"version":3,"names":["NgFor","NgIf","CommonModule","Router","FormsModule","MatIconModule","MatTooltipModule","NotificationService","MatDialog","MatDialogModule","TemplateCsvService","ExtensionSyncService","LoadingButtonComponent","SidebarComponent","FooterComponent","ConfirmDeleteDialogComponent","i0","ɵɵelementContainerStart","ɵɵelementStart","ɵɵelement","ɵɵtext","ɵɵelementEnd","ɵɵtwoWayListener","UploadCsvComponent_ng_template_5_div_6_Template_input_ngModelChange_3_listener","$event","ɵɵrestoreView","_r2","ctx_r2","ɵɵnextContext","ɵɵtwoWayBindingSet","searchTerm","ɵɵresetView","ɵɵlistener","UploadCsvComponent_ng_template_5_div_6_Template_input_input_3_listener","onSearchChange","ɵɵadvance","ɵɵtwoWayProperty","ɵɵtextInterpolate1","selectedFile","name","size","toFixed","UploadCsvComponent_ng_template_5_div_12_button_11_Template_button_click_0_listener","_r6","limparArquivo","UploadCsvComponent_ng_template_5_div_12_Template_div_click_2_listener","_r4","fileInput_r5","ɵɵreference","click","UploadCsvComponent_ng_template_5_div_12_Template_div_dragover_2_listener","onDragOver","UploadCsvComponent_ng_template_5_div_12_Template_div_dragleave_2_listener","onDragLeave","UploadCsvComponent_ng_template_5_div_12_Template_div_drop_2_listener","onDrop","UploadCsvComponent_ng_template_5_div_12_Template_div_keydown_enter_2_listener","UploadCsvComponent_ng_template_5_div_12_Template_div_keydown_space_2_listener","UploadCsvComponent_ng_template_5_div_12_Template_input_change_3_listener","onFileSelected","ɵɵtemplate","UploadCsvComponent_ng_template_5_div_12_div_5_Template","UploadCsvComponent_ng_template_5_div_12_div_6_Template","UploadCsvComponent_ng_template_5_div_12_Template_app_loading_button_onClick_10_listener","uploadArquivo","UploadCsvComponent_ng_template_5_div_12_button_11_Template","UploadCsvComponent_ng_template_5_div_12_Template_button_click_15_listener","downloadExemplo","ɵɵclassMap","ɵɵclassProp","isDragOver","ɵɵproperty","carregando","UploadCsvComponent_ng_template_5_div_13_ng_template_2_ng_container_0_tr_14_Template_button_click_9_listener","template_r9","_r8","$implicit","deletarTemplate","ɵɵtextInterpolate","nome","descricao","campos","length","size_r10","UploadCsvComponent_ng_template_5_div_13_ng_template_2_ng_container_0_tr_14_Template","UploadCsvComponent_ng_template_5_div_13_ng_template_2_ng_container_0_Template_select_ngModelChange_19_listener","_r7","pageSize","UploadCsvComponent_ng_template_5_div_13_ng_template_2_ng_container_0_Template_select_change_19_listener","onPageSizeChange","UploadCsvComponent_ng_template_5_div_13_ng_template_2_ng_container_0_option_20_Template","UploadCsvComponent_ng_template_5_div_13_ng_template_2_ng_container_0_Template_button_click_24_listener","previousPage","UploadCsvComponent_ng_template_5_div_13_ng_template_2_ng_container_0_Template_button_click_29_listener","nextPage","paginatedTemplates","pageSizeOptions","filteredTemplates","currentPage","ɵɵtextInterpolate2","getTotalPages","UploadCsvComponent_ng_template_5_div_13_ng_template_2_ng_container_0_Template","UploadCsvComponent_ng_template_5_div_13_ng_template_2_ng_template_1_Template","ɵɵtemplateRefExtractor","templates","noTemplates_r11","UploadCsvComponent_ng_template_5_div_13_ng_container_1_Template","UploadCsvComponent_ng_template_5_div_13_ng_template_2_Template","templatesContent_r12","UploadCsvComponent_ng_template_5_div_6_Template","UploadCsvComponent_ng_template_5_Template_button_click_8_listener","_r1","activeTab","UploadCsvComponent_ng_template_5_Template_button_click_10_listener","UploadCsvComponent_ng_template_5_div_12_Template","UploadCsvComponent_ng_template_5_div_13_Template","UploadCsvComponent","csvService","extensionSyncService","notificationService","dialog","router","carregandoPagina","displayedColumns","constructor","ngOnInit","carregarDadosCompleto","verificarPermissao","setTimeout","carregar","planoUsuario","localStorage","getItem","planoUpper","toUpperCase","podeAcessar","includes","showError","navigate","userId","getUserId","listarTemplates","subscribe","next","filtrarTemplates","console","log","error","isNaN","Number","token","payload","JSON","parse","atob","split","id","userData","user","notificarExtensaoNovosTemplates","response","Array","isArray","forEach","template","notificarNovoTemplate","success","forcarSincronizacao","event","file","target","files","validarArquivo","preventDefault","dataTransfer","maxSize","fileName","toLowerCase","isCSV","type","endsWith","isExcel","showWarning","validarEstruturaExcel","validarEstruturaCsv","reader","FileReader","onload","e","content","result","trim","lines","filter","line","firstLine","columns","map","col","firstCol","replace","secondCol","dataLines","slice","templateNames","Set","hasErrors","i","row","cell","templateName","has","add","fieldPairs","Math","floor","j","fieldIndex","fieldName","fieldValue","fieldType","validTypes","join","emailRegex","test","fazerUpload","onerror","readAsText","tamanho","tipo","uploadCsv","mensagem","message","templatesCriados","showSuccess","term","onPageChange","pageIndex","ceil","startIndex","endIndex","dialogRef","open","data","templateId","afterClosed","csvContent","blob","Blob","url","window","URL","createObjectURL","a","document","createElement","href","download","revokeObjectURL","ɵɵdirectiveInject","i1","i2","i3","i4","i5","selectors","decls","vars","consts","UploadCsvComponent_Template","rf","ctx","UploadCsvComponent_ng_container_4_Template","UploadCsvComponent_ng_template_5_Template","uploadContent_r13","i6","NgSelectOption","ɵNgSelectMultipleOption","DefaultValueAccessor","SelectControlValueAccessor","NgControlStatus","NgModel","i7","MatIcon","i8","MatTooltip","styles"],"sources":["/home/danilo/Área de trabalho/formsync-nx/apps/front/src/app/components/upload-csv/upload-csv.component.ts","/home/danilo/Área de trabalho/formsync-nx/apps/front/src/app/components/upload-csv/upload-csv.component.html"],"sourcesContent":["import { NgFor, NgIf, CommonModule } from '@angular/common';\nimport { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormsModule } from '@angular/forms';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { NotificationService } from '../../services/notification.service';\nimport { MatDialog, MatDialogModule } from '@angular/material/dialog';\nimport { PageEvent } from '@angular/material/paginator';\nimport { TemplateCsvService, Template } from '../../services/template-csv.service';\nimport { ExtensionSyncService } from '../../services/extension-sync.service';\nimport { LoadingButtonComponent } from '../loading-button/loading-button.component';\nimport { SidebarComponent } from '../sidebar/sidebar.component';\nimport { FooterComponent } from '../footer/footer.component';\nimport { ConfirmDeleteDialogComponent, ConfirmDeleteData } from '../template-manager/confirm-delete-dialog.component';\n\n@Component({\n  standalone: true,\n  selector: 'app-upload-csv',\n  imports: [\n    NgIf,\n    NgFor,\n    CommonModule,\n    FormsModule,\n    LoadingButtonComponent,\n    MatIconModule,\n    MatTooltipModule,\n    MatDialogModule,\n    SidebarComponent,\n    FooterComponent\n  ],\n  templateUrl: './upload-csv.component.html',\n  styleUrl: './upload-csv.component.css',\n})\nexport class UploadCsvComponent implements OnInit {\n  activeTab: 'upload' | 'list' = 'upload';\n  selectedFile: File | null = null;\n  isDragOver = false;\n  templates: Template[] = [];\n  carregando: boolean = false;\n  carregandoPagina: boolean = true;\n\n  // Paginação\n  pageSize = 10;\n  currentPage = 1;\n  pageSizeOptions = [5, 10, 25, 50];\n\n  // Colunas da tabela\n  displayedColumns: string[] = ['nome', 'descricao', 'quantidadeCampos', 'acoes'];\n\n  // Busca\n  searchTerm: string = '';\n  filteredTemplates: Template[] = [];\n\n  constructor(\n    private csvService: TemplateCsvService,\n    private extensionSyncService: ExtensionSyncService,\n    private notificationService: NotificationService,\n    private dialog: MatDialog,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.carregarDadosCompleto();\n  }\n\n  carregarDadosCompleto() {\n    this.carregandoPagina = true;\n\n    // Verificar permissão primeiro\n    this.verificarPermissao();\n\n    // Simular carregamento inicial\n    setTimeout(() => {\n      this.carregar();\n      this.carregandoPagina = false;\n    }, 1500);\n  }\n\n  verificarPermissao() {\n    const planoUsuario = localStorage.getItem('plano') || 'PESSOAL';\n    const planoUpper = planoUsuario.toUpperCase();\n\n    const podeAcessar = planoUpper === 'EMPRESARIAL' ||\n      planoUpper.includes('EMPRESARIAL') ||\n      planoUpper === 'PROFISSIONAL_VITALICIO' ||\n      planoUpper.includes('VITALICIO') ||\n      planoUpper === 'PROFISSIONAL_MENSAL' ||\n      planoUpper.includes('MENSAL');\n\n    if (!podeAcessar) {\n      this.notificationService.showError('Upload CSV disponível apenas nos planos Profissional e Empresarial. Faça upgrade para continuar.');\n      this.router.navigate(['/upgrade']);\n      return;\n    }\n  }\n\n  carregar() {\n    this.carregando = true;\n\n    // Obter ID do usuário autenticado\n    const userId = this.getUserId();\n\n    if (userId) {\n      // Buscar Formulários do usuário específico\n      this.csvService.listarTemplates().subscribe({\n        next: (templates: Template[]) => {\n          this.templates = templates;\n          this.filtrarTemplates();\n          this.carregando = false;\n          console.log('✅ Templates carregados para usuário', userId, ':', templates.length);\n        },\n        error: (error: any) => {\n          console.error('❌ Erro ao carregar templates:', error);\n          this.notificationService.showError('Erro ao carregar templates. Tente novamente.');\n          this.carregando = false;\n        }\n      });\n    } else {\n      // Fallback: Buscar Formulários gerais (sem usuário específico)\n      this.csvService.listarTemplates().subscribe({\n        next: (templates) => {\n          this.templates = templates;\n          this.filtrarTemplates();\n          this.carregando = false;\n          console.log('✅ Templates carregados (geral):', templates.length);\n        },\n        error: (error: any) => {\n          console.error('❌ Erro ao carregar templates:', error);\n          this.notificationService.showError('Erro ao carregar templates. Tente novamente.');\n          this.carregando = false;\n        }\n      });\n    }\n  }\n\n  /**\n   * Obtém o ID do usuário autenticado\n   */\n  getUserId(): number | null {\n    try {\n      // 1. Tenta pegar do localStorage (userId)\n      const userId = localStorage.getItem('userId');\n      if (userId && !isNaN(Number(userId))) {\n        return Number(userId);\n      }\n\n      // 2. Tenta pegar do token JWT\n      const token = localStorage.getItem('token');\n      if (token) {\n        const payload = JSON.parse(atob(token.split('.')[1]));\n        if (payload.id && !isNaN(Number(payload.id))) {\n          return Number(payload.id);\n        }\n      }\n\n      // 3. Fallback para userData\n      const userData = localStorage.getItem('userData');\n      if (userData) {\n        const user = JSON.parse(userData);\n        if (user.id && !isNaN(Number(user.id))) {\n          return Number(user.id);\n        }\n      }\n\n      return null;\n    } catch (error) {\n      console.error('Erro ao decodificar token:', error);\n      return null;\n    }\n  }\n\n  /**\n   * Notifica a extensão sobre novos templates criados\n   */\n  private notificarExtensaoNovosTemplates(response: any): void {\n    if (response.templates && Array.isArray(response.templates)) {\n      console.log('🔔 Notificando extensão sobre novos templates...');\n\n      // Notificar cada template individualmente\n      response.templates.forEach((template: any) => {\n        this.extensionSyncService.notificarNovoTemplate(\n          template.id,\n          template.nome\n        ).subscribe({\n          next: (success) => {\n            if (success) {\n              console.log(`✅ Extensão notificada sobre template: ${template.nome}`);\n            } else {\n              console.log(`⚠️ Falha ao notificar extensão sobre template: ${template.nome}`);\n            }\n          },\n          error: (error) => {\n            console.error(`❌ Erro ao notificar extensão sobre template ${template.nome}:`, error);\n          }\n        });\n      });\n\n      // Forçar sincronização geral\n      this.extensionSyncService.forcarSincronizacao().subscribe({\n        next: (success) => {\n          if (success) {\n            console.log('🔄 Sincronização forçada com extensão realizada');\n          } else {\n            console.log('⚠️ Falha na sincronização forçada com extensão');\n          }\n        },\n        error: (error) => {\n          console.error('❌ Erro na sincronização forçada:', error);\n        }\n      });\n    }\n  }\n\n  onFileSelected(event: any) {\n    const file = event.target.files[0];\n    if (file && this.validarArquivo(file)) {\n      this.selectedFile = file;\n      console.log('📁 Arquivo selecionado:', file.name);\n    }\n  }\n\n  onDragOver(event: DragEvent) {\n    event.preventDefault();\n    this.isDragOver = true;\n  }\n\n  onDragLeave(event: DragEvent) {\n    event.preventDefault();\n    this.isDragOver = false;\n  }\n\n  onDrop(event: DragEvent) {\n    event.preventDefault();\n    this.isDragOver = false;\n\n    const files = event.dataTransfer?.files;\n    if (files && files.length > 0) {\n      const file = files[0];\n      if (this.validarArquivo(file)) {\n        this.selectedFile = file;\n        console.log('📁 Arquivo recebido via drag & drop:', file.name);\n      }\n    }\n  }\n\n  validarArquivo(file: File): boolean {\n    // Verificar se arquivo está vazio\n    if (file.size === 0) {\n      this.notificationService.showError('Arquivo está vazio. Selecione um arquivo com conteúdo.');\n      return false;\n    }\n\n    // Verificar tamanho (5MB)\n    const maxSize = 5 * 1024 * 1024;\n    if (file.size > maxSize) {\n      this.notificationService.showError('Arquivo muito grande. Tamanho máximo: 5MB');\n      return false;\n    }\n\n    // Verificar tipo de arquivo (CSV e Excel)\n    const fileName = file.name.toLowerCase();\n    const isCSV = file.type.includes('csv') || fileName.endsWith('.csv');\n    const isExcel = file.type.includes('sheet') || fileName.endsWith('.xlsx') || fileName.endsWith('.xls');\n\n    if (!isCSV && !isExcel) {\n      this.notificationService.showError('Apenas arquivos CSV (.csv) e Excel (.xlsx, .xls) são aceitos.');\n      return false;\n    }\n\n    // Verificar se arquivo pode estar corrompido (extensão não bate com tipo MIME)\n    if (fileName.endsWith('.csv') && file.type && !file.type.includes('csv') && !file.type.includes('text')) {\n      this.notificationService.showWarning('Arquivo pode estar corrompido ou ter extensão incorreta.');\n    }\n\n    if ((fileName.endsWith('.xlsx') || fileName.endsWith('.xls')) && file.type && !file.type.includes('sheet') && !file.type.includes('excel')) {\n      this.notificationService.showWarning('Arquivo Excel pode estar corrompido ou ter extensão incorreta.');\n    }\n\n    return true;\n  }\n\n  uploadArquivo() {\n    if (!this.selectedFile) {\n      this.notificationService.showWarning('Selecione um arquivo CSV ou Excel para fazer upload.');\n      return;\n    }\n\n    // Validar tipo de arquivo\n    const fileName = this.selectedFile.name.toLowerCase();\n    const isCSV = fileName.endsWith('.csv');\n    const isExcel = fileName.endsWith('.xlsx') || fileName.endsWith('.xls');\n\n    if (!isCSV && !isExcel) {\n      this.notificationService.showError('Por favor, selecione um arquivo CSV (.csv) ou Excel (.xlsx, .xls) válido.');\n      return;\n    }\n\n    // Para arquivos Excel, processar normalmente (backend já suporta)\n    if (isExcel) {\n      this.validarEstruturaExcel();\n      return;\n    }\n\n    // Validar formato básico do CSV\n    if (isCSV) {\n      this.validarEstruturaCsv();\n    }\n  }\n\n  private validarEstruturaCsv() {\n    if (!this.selectedFile) return;\n\n    const reader = new FileReader();\n    reader.onload = (e) => {\n      const content = e.target?.result as string;\n\n      // Verificar se arquivo está vazio\n      if (!content || content.trim().length === 0) {\n        this.notificationService.showError('Arquivo CSV está vazio.');\n        return;\n      }\n\n      const lines = content.split('\\n').filter(line => line.trim().length > 0);\n\n      if (lines.length < 2) {\n        this.notificationService.showError('Arquivo CSV deve ter pelo menos 2 linhas (cabeçalho + dados).');\n        return;\n      }\n\n      const firstLine = lines[0];\n      const columns = firstLine.split(',').map(col => col.trim());\n\n      // Validar estrutura básica\n      if (columns.length < 2) {\n        this.notificationService.showError('Formato CSV inválido: deve ter pelo menos 2 colunas (NomeTemplate, DescricaoTemplate)');\n        return;\n      }\n\n      // Verificar colunas obrigatórias\n      const firstCol = (columns[0] || '').toLowerCase().replace(/\"/g, '');\n      const secondCol = (columns[1] || '').toLowerCase().replace(/\"/g, '');\n\n      if (!firstCol.includes('nome') && !firstCol.includes('template')) {\n        this.notificationService.showError('Formato CSV inválido: primeira coluna deve conter \"nome\" ou \"template\" (ex: NomeTemplate)');\n        return;\n      }\n\n      if (!secondCol.includes('descricao') && !secondCol.includes('desc')) {\n        this.notificationService.showError('Formato CSV inválido: segunda coluna deve conter \"descricao\" ou \"desc\" (ex: DescricaoTemplate)');\n        return;\n      }\n\n      // Validar dados nas linhas\n      const dataLines = lines.slice(1);\n      const templateNames = new Set<string>();\n      let hasErrors = false;\n\n      for (let i = 0; i < dataLines.length; i++) {\n        const line = dataLines[i];\n        const row = line.split(',').map(cell => cell.trim().replace(/\"/g, ''));\n\n        // Verificar se linha tem dados suficientes\n        if (row.length < 2) {\n          this.notificationService.showError(`Linha ${i + 2}: dados insuficientes. Deve ter pelo menos nome e descrição.`);\n          hasErrors = true;\n          break;\n        }\n\n        // Verificar se nome do template está vazio\n        if (!row[0] || row[0].trim().length === 0) {\n          this.notificationService.showError(`Linha ${i + 2}: nome do template não pode estar vazio.`);\n          hasErrors = true;\n          break;\n        }\n\n        // Verificar se descrição está vazia\n        if (!row[1] || row[1].trim().length === 0) {\n          this.notificationService.showError(`Linha ${i + 2}: descrição do template não pode estar vazia.`);\n          hasErrors = true;\n          break;\n        }\n\n        // Verificar dados duplicados\n        const templateName = row[0].toLowerCase();\n        if (templateNames.has(templateName)) {\n          this.notificationService.showError(`Linha ${i + 2}: template \"${row[0]}\" duplicado. Nomes de templates devem ser únicos.`);\n          hasErrors = true;\n          break;\n        }\n        templateNames.add(templateName);\n\n        // Validar tipos de dados nos campos (se houver campos extras)\n        if (row.length > 2) {\n          const fieldPairs = Math.floor((row.length - 2) / 3); // Nome, Valor, Tipo\n          for (let j = 0; j < fieldPairs; j++) {\n            const fieldIndex = 2 + (j * 3);\n            const fieldName = row[fieldIndex];\n            const fieldValue = row[fieldIndex + 1];\n            const fieldType = row[fieldIndex + 2];\n\n            if (fieldName && fieldName.trim().length > 0) {\n              // Validar se tipo é válido\n              const validTypes = ['text', 'email', 'password', 'number', 'tel', 'url', 'date'];\n              if (fieldType && !validTypes.includes(fieldType.toLowerCase())) {\n                this.notificationService.showWarning(`Linha ${i + 2}: tipo \"${fieldType}\" pode não ser suportado. Tipos válidos: ${validTypes.join(', ')}`);\n              }\n\n              // Validar formato de email se tipo for email\n              if (fieldType && fieldType.toLowerCase() === 'email' && fieldValue) {\n                const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/;\n                if (!emailRegex.test(fieldValue)) {\n                  this.notificationService.showWarning(`Linha ${i + 2}: valor \"${fieldValue}\" não parece ser um email válido.`);\n                }\n              }\n            }\n          }\n        }\n      }\n\n      if (!hasErrors) {\n        // Se chegou até aqui, o formato está correto, continuar com o upload\n        this.fazerUpload();\n      }\n    };\n\n    reader.onerror = () => {\n      this.notificationService.showError('Erro ao ler arquivo. O arquivo pode estar corrompido.');\n    };\n\n    reader.readAsText(this.selectedFile, 'UTF-8');\n  }\n\n  private validarEstruturaExcel() {\n    if (!this.selectedFile) return;\n\n    // Para Excel, apenas fazer upload direto - o backend fará a validação\n    // O backend já suporta Excel completamente\n    this.fazerUpload();\n  }\n\n  private fazerUpload() {\n    if (!this.selectedFile) {\n      this.notificationService.showError('Nenhum arquivo selecionado.');\n      return;\n    }\n\n    // Log para debug\n    console.log('📁 Arquivo selecionado:', {\n      nome: this.selectedFile.name,\n      tamanho: this.selectedFile.size,\n      tipo: this.selectedFile.type\n    });\n\n    this.carregando = true;\n\n    this.csvService.uploadCsv(this.selectedFile).subscribe({\n      next: (response: any) => {\n        console.log('✅ Upload realizado com sucesso:', response);\n\n        // Usar mensagem da API ou construir mensagem com dados\n        const mensagem = response?.message || `CSV processado com sucesso! ${response.templatesCriados} templates criados.`;\n        this.notificationService.showSuccess(mensagem);\n\n        // Limpar arquivo selecionado\n        this.selectedFile = null;\n\n        // Notificar extensão sobre novos templates\n        this.notificarExtensaoNovosTemplates(response);\n\n        // Recarregar dados\n        this.carregar();\n\n        // Mudar para aba de listagem\n        this.activeTab = 'list';\n      },\n      error: (error) => {\n        console.error('❌ Erro no upload:', error);\n\n        let mensagem = 'Erro ao processar CSV. Tente novamente.';\n        if (error.error?.message) {\n          mensagem = error.error.message;\n        }\n\n        this.notificationService.showError(mensagem);\n\n        this.carregando = false;\n      }\n    });\n  }\n\n  filtrarTemplates() {\n    if (!this.searchTerm.trim()) {\n      this.filteredTemplates = this.templates;\n    } else {\n      const term = this.searchTerm.toLowerCase();\n      this.filteredTemplates = this.templates.filter(template =>\n        template.nome?.toLowerCase().includes(term) ||\n        template.descricao?.toLowerCase().includes(term)\n      );\n    }\n  }\n\n  onSearchChange() {\n    this.filtrarTemplates();\n    this.currentPage = 1;\n  }\n\n  onPageChange(event: PageEvent) {\n    this.currentPage = event.pageIndex + 1;\n    this.pageSize = event.pageSize;\n  }\n\n  onPageSizeChange() {\n    this.currentPage = 1;\n  }\n\n  previousPage() {\n    if (this.currentPage > 1) {\n      this.currentPage--;\n    }\n  }\n\n  nextPage() {\n    if (this.currentPage < this.getTotalPages()) {\n      this.currentPage++;\n    }\n  }\n\n  getTotalPages(): number {\n    return Math.ceil(this.filteredTemplates.length / this.pageSize);\n  }\n\n  get paginatedTemplates() {\n    const startIndex = (this.currentPage - 1) * this.pageSize;\n    const endIndex = startIndex + this.pageSize;\n    return this.filteredTemplates.slice(startIndex, endIndex);\n  }\n\n  deletarTemplate(template: Template) {\n    const dialogRef = this.dialog.open(ConfirmDeleteDialogComponent, {\n      data: {\n        templateName: template.nome,\n        templateId: template.id\n      } as ConfirmDeleteData\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      if (result) {\n        this.carregando = true;\n\n        this.csvService.deletarTemplate(template.id).subscribe({\n          next: () => {\n            console.log('✅ Template deletado:', template.nome);\n\n            this.notificationService.showSuccess('Template deletado com sucesso!');\n\n            // Recarregar dados\n            this.carregar();\n          },\n          error: (error) => {\n            console.error('❌ Erro ao deletar template:', error);\n\n            this.notificationService.showError('Erro ao deletar template. Tente novamente.');\n\n            this.carregando = false;\n          }\n        });\n      }\n    });\n  }\n\n  limparArquivo() {\n    this.selectedFile = null;\n  }\n\n  downloadExemplo() {\n    // Criar conteúdo do CSV de exemplo com formato EXATO esperado pelo backend\n    // O backend espera: primeira coluna deve conter 'nome' ou 'template'\n    //                   segunda coluna deve conter 'descricao' ou 'desc'\n    const csvContent = `NomeTemplate,DescricaoTemplate,Campo1,Valor1,Tipo1,Campo2,Valor2,Tipo2\nLogin Google,Template para login no Google,email,usuario@email.com,email,senha,123456,password\nLogin Facebook,Template para login no Facebook,email,usuario@email.com,email,senha,123456,password\nCadastro Site,Template para cadastro em site,usuario,usuario123,text,email,usuario@email.com,email\nFormulário Contato,Template para formulário de contato,nome,João Silva,text,email,joao@email.com,email`;\n\n    // Criar blob e download\n    const blob = new Blob([csvContent], { type: 'text/csv;charset=utf-8' });\n    const url = window.URL.createObjectURL(blob);\n    const a = document.createElement('a');\n    a.href = url;\n    a.download = 'exemplo-templates.csv';\n    a.click();\n    window.URL.revokeObjectURL(url);\n\n    // Mostrar mensagem de sucesso com informações sobre o formato\n    this.notificationService.showSuccess('Arquivo de exemplo baixado! Formato: NomeTemplate,DescricaoTemplate,Campo1,Valor1,Tipo1...');\n  }\n} ","<div class=\"min-h-screen bg-gray-50\">\n  <!-- Layout Principal -->\n  <div class=\"flex\">\n    <!-- Sidebar -->\n    <app-sidebar></app-sidebar>\n\n    <!-- Conteúdo Principal -->\n    <main class=\"flex-1 p-4\">\n      <!-- Loading State Moderno -->\n      <ng-container *ngIf=\"carregandoPagina; else uploadContent\">\n        <div class=\"flex flex-col items-center justify-center py-16\">\n          <div class=\"animate-spin rounded-full h-10 w-10 border-b-2 border-indigo-600\"></div>\n          <h3 class=\"mt-6 text-lg font-semibold text-gray-900\">\n            Carregando Formulários\n          </h3>\n          <p class=\"text-gray-500 mt-2\">\n            Aguarde enquanto preparamos suas informações...\n          </p>\n        </div>\n      </ng-container>\n\n      <ng-template #uploadContent>\n        <!-- Boas-vindas e Resumo -->\n        <div class=\"mb-6\">\n          <h1 class=\"text-xl font-bold text-gray-900 mb-1\">\n            Upload de Formulários CSV\n          </h1>\n          <p class=\"text-gray-600\">\n            Faça upload de um arquivo CSV para criar formulários com campos estruturados\n          </p>\n        </div>\n\n        <!-- Navegação por abas -->\n        <div\n          class=\"bg-white rounded-xl border border-gray-200 p-4 hover:border-gray-300 transition-colors duration-200 mb-6\">\n          <!-- Barra de busca - posicionada acima das abas -->\n          <div *ngIf=\"activeTab === 'list' && templates.length > 0\" class=\"p-4 border-b border-gray-200 mb-4\">\n            <div class=\"max-w-md mx-auto\">\n              <div class=\"relative\">\n                <input type=\"text\" [(ngModel)]=\"searchTerm\" (input)=\"onSearchChange()\"\n                  placeholder=\"Buscar Formulários...\"\n                  class=\"w-full px-4 py-3 pl-12 border border-gray-300 rounded-xl bg-white focus:outline-none focus:ring-2 focus:ring-indigo-500/20 focus:border-indigo-500 transition-all duration-200 text-gray-900 placeholder-gray-500\">\n                <mat-icon class=\"absolute left-3 top-1/2 transform -translate-y-1/2 text-gray-400\">search</mat-icon>\n              </div>\n            </div>\n          </div>\n\n          <!-- Abas -->\n          <div class=\"flex border-b border-gray-200\">\n            <button (click)=\"activeTab = 'upload'\"\n              [class]=\"activeTab === 'upload' ? 'px-6 py-4 text-indigo-600 border-b-2 border-indigo-500 font-semibold' : 'px-6 py-4 text-gray-500 hover:text-gray-700 font-medium'\"\n              class=\"transition-colors duration-200\">\n              Importar CSV\n            </button>\n            <button (click)=\"activeTab = 'list'\"\n              [class]=\"activeTab === 'list' ? 'px-6 py-4 text-indigo-600 border-b-2 border-indigo-500 font-semibold' : 'px-6 py-4 text-gray-500 hover:text-gray-700 font-medium'\"\n              class=\"transition-colors duration-200\">\n              Meus Formulários\n            </button>\n          </div>\n\n          <!-- Conteúdo da aba Upload -->\n          <div *ngIf=\"activeTab === 'upload'\" class=\"p-6\">\n            <div class=\"text-center\">\n              <!-- Área de upload -->\n              <div id=\"csv-upload-area\"\n                class=\"w-full max-w-2xl mx-auto p-12 border-2 border-dashed rounded-2xl cursor-pointer transition-all duration-200 hover:border-indigo-400 hover:bg-indigo-50\"\n                [class]=\"selectedFile ? 'border-green-400 bg-green-50' : 'border-gray-300'\"\n                [class.bg-indigo-50]=\"isDragOver\" (click)=\"fileInput.click()\" (dragover)=\"onDragOver($event)\"\n                (dragleave)=\"onDragLeave($event)\" (drop)=\"onDrop($event)\" role=\"button\" tabindex=\"0\"\n                (keydown.enter)=\"fileInput.click()\" (keydown.space)=\"fileInput.click()\"\n                aria-label=\"Área para upload de arquivo CSV\">\n                <input #fileInput type=\"file\" accept=\".csv,.xlsx,.xls\" (change)=\"onFileSelected($event)\" class=\"hidden\"\n                  aria-describedby=\"uploadHelp\" />\n\n                <div *ngIf=\"!selectedFile\" class=\"text-center\">\n                  <div class=\"w-20 h-20 bg-indigo-100 rounded-xl flex items-center justify-center mx-auto mb-6\">\n                    <mat-icon class=\"text-indigo-600 text-4xl\">cloud_upload</mat-icon>\n                  </div>\n                  <h3 class=\"text-xl font-semibold text-gray-800 mb-2\">\n                    Clique ou arraste um arquivo CSV ou Excel\n                  </h3>\n                  <p class=\"text-gray-500\">\n                    Formatos aceitos: .csv, .xlsx, .xls\n                  </p>\n                </div>\n\n                <div *ngIf=\"selectedFile\" class=\"text-center\">\n                  <div class=\"w-20 h-20 bg-green-100 rounded-xl flex items-center justify-center mx-auto mb-6\">\n                    <mat-icon class=\"text-green-600 text-4xl\">cloud_done</mat-icon>\n                  </div>\n                  <h3 class=\"text-xl font-semibold text-gray-800 mb-2\">\n                    {{ selectedFile.name }}\n                  </h3>\n                  <p class=\"text-gray-500\">\n                    {{ (selectedFile.size / 1024).toFixed(1) }} KB\n                  </p>\n                </div>\n              </div>\n\n              <div id=\"uploadHelp\" class=\"text-sm text-gray-500 mt-3\">\n                Clique na área acima ou arraste um arquivo CSV para criar formulários\n              </div>\n\n              <!-- Botões de ação -->\n              <div class=\"mt-8 flex gap-4 justify-center\">\n                <app-loading-button id=\"csv-upload-button\" [loading]=\"carregando\" [disabled]=\"!selectedFile\"\n                  text=\"Enviar CSV\" loadingText=\"Enviando...\" icon=\"cloud_upload\" ariaLabel=\"Enviar arquivo CSV\"\n                  ariaDescribedBy=\"uploadButtonHelp\" (onClick)=\"uploadArquivo()\"></app-loading-button>\n\n                <button *ngIf=\"selectedFile\" (click)=\"limparArquivo()\"\n                  class=\"px-6 py-3 text-red-600 border border-red-300 rounded-xl bg-white hover:bg-red-50 hover:border-red-400 transition-all duration-200 font-semibold flex items-center gap-2\">\n                  <mat-icon>clear</mat-icon>\n                  Limpar\n                </button>\n              </div>\n\n              <div id=\"uploadButtonHelp\" class=\"text-sm text-gray-500 mt-2\">\n                {{ selectedFile ? 'Clique para criar formulários do arquivo' :\n                'Selecione um arquivo CSV primeiro' }}\n              </div>\n\n              <!-- Download de exemplo -->\n              <div class=\"mt-6\">\n                <button (click)=\"downloadExemplo()\"\n                  class=\"px-4 py-2 text-indigo-600 border border-indigo-300 rounded-lg bg-white hover:bg-indigo-50 hover:border-indigo-400 transition-all duration-200 font-medium flex items-center gap-2 mx-auto\">\n                  <mat-icon>download</mat-icon>\n                  Baixar Exemplo CSV\n                </button>\n              </div>\n\n              <!-- Informações sobre o formato -->\n              <div class=\"mt-6 p-4 bg-gray-50 rounded-xl border border-gray-200\">\n                <h6 class=\"text-sm font-semibold text-gray-800 mb-3\">Formato do CSV:</h6>\n                <div class=\"space-y-2 text-sm text-gray-600\">\n                  <p>\n                    <strong>Colunas obrigatórias:</strong> NomeTemplate, DescricaoTemplate\n                  </p>\n                  <p>\n                    <strong>Campos opcionais:</strong> Campo1, Valor1, Tipo1, Campo2, Valor2, Tipo2...\n                  </p>\n                  <p>\n                    <strong>Tipos suportados:</strong> text, email, password, number, tel, url\n                  </p>\n                </div>\n              </div>\n            </div>\n          </div>\n\n          <!-- Conteúdo da aba Listagem -->\n          <div *ngIf=\"activeTab === 'list'\" class=\"p-6\">\n            <!-- Loading state -->\n            <ng-container *ngIf=\"carregando; else templatesContent\">\n              <div class=\"text-center py-8\">\n                <div class=\"animate-spin rounded-full h-8 w-8 border-b-2 border-indigo-600 mx-auto mb-4\"></div>\n                <p class=\"text-gray-600\">Carregando forulários...</p>\n              </div>\n            </ng-container>\n\n            <ng-template #templatesContent>\n              <!-- Lista de templates -->\n              <ng-container *ngIf=\"templates.length > 0; else noTemplates\">\n                <div class=\"overflow-hidden rounded-xl border border-gray-200\">\n                  <table class=\"w-full\">\n                    <thead class=\"bg-gray-50\">\n                      <tr>\n                        <th class=\"px-6 py-4 text-left text-sm font-semibold text-gray-800\">Nome do Formulário</th>\n                        <th class=\"px-6 py-4 text-left text-sm font-semibold text-gray-800\">Descrição</th>\n                        <th class=\"px-6 py-4 text-left text-sm font-semibold text-gray-800\">Campos</th>\n                        <th class=\"px-6 py-4 text-left text-sm font-semibold text-gray-800\">Ações</th>\n                      </tr>\n                    </thead>\n                    <tbody class=\"bg-white divide-y divide-gray-200\">\n                      <tr *ngFor=\"let template of paginatedTemplates\"\n                        class=\"hover:bg-gray-50 transition-colors duration-200\">\n                        <td class=\"px-6 py-4 text-sm text-gray-900\">{{ template.nome }}</td>\n                        <td class=\"px-6 py-4 text-sm text-gray-600\">{{ template.descricao || '-' }}</td>\n                        <td class=\"px-6 py-4\">\n                          <span\n                            class=\"inline-flex items-center px-3 py-1 rounded-full text-xs font-medium bg-indigo-100 text-indigo-800\">\n                            {{ template.campos.length || 0 }}\n                          </span>\n                        </td>\n                        <td class=\"px-6 py-4\">\n                          <button (click)=\"deletarTemplate(template)\"\n                            class=\"p-2 text-red-600 hover:text-red-800 hover:bg-red-50 rounded-lg transition-colors duration-200\"\n                            matTooltip=\"Deletar template\">\n                            <mat-icon>delete</mat-icon>\n                          </button>\n                        </td>\n                      </tr>\n                    </tbody>\n                  </table>\n                </div>\n\n                <!-- Paginação -->\n                <div class=\"mt-6 flex items-center justify-between\">\n                  <div class=\"flex items-center gap-2\">\n                    <span class=\"text-sm text-gray-700\">Mostrar</span>\n                    <select [(ngModel)]=\"pageSize\" (change)=\"onPageSizeChange()\"\n                      class=\"px-3 py-2 border border-gray-300 rounded-lg bg-white text-sm focus:outline-none focus:ring-2 focus:ring-indigo-500/20 focus:border-indigo-500\">\n                      <option *ngFor=\"let size of pageSizeOptions\" [value]=\"size\">{{ size }}</option>\n                    </select>\n                    <span class=\"text-sm text-gray-700\">de {{ filteredTemplates.length }} formulários</span>\n                  </div>\n\n                  <div class=\"flex items-center gap-2\">\n                    <button (click)=\"previousPage()\" [disabled]=\"currentPage === 1\"\n                      class=\"px-3 py-2 text-gray-500 border border-gray-300 rounded-lg bg-white hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed transition-colors duration-200\">\n                      <mat-icon>chevron_left</mat-icon>\n                    </button>\n\n                    <span class=\"px-3 py-2 text-sm text-gray-700\">\n                      Página {{ currentPage }} de {{ getTotalPages() }}\n                    </span>\n\n                    <button (click)=\"nextPage()\" [disabled]=\"currentPage >= getTotalPages()\"\n                      class=\"px-3 py-2 text-gray-500 border border-gray-300 rounded-lg bg-white hover:bg-gray-50 disabled:opacity-50 disabled:cursor-not-allowed transition-colors duration-200\">\n                      <mat-icon>chevron_right</mat-icon>\n                    </button>\n                  </div>\n                </div>\n              </ng-container>\n\n              <!-- Estado vazio -->\n              <ng-template #noTemplates>\n                <div class=\"text-center py-12\">\n                  <div class=\"w-20 h-20 bg-gray-100 rounded-xl flex items-center justify-center mx-auto mb-6\">\n                    <mat-icon class=\"text-gray-400 text-4xl\">article</mat-icon>\n                  </div>\n                  <h4 class=\"text-xl font-semibold text-gray-700 mb-3\">Nenhum formulário encontrado</h4>\n                  <p class=\"text-gray-500\">\n                    Faça upload de um arquivo CSV para criar seus primeiros formulários\n                  </p>\n                </div>\n              </ng-template>\n            </ng-template>\n          </div>\n        </div>\n      </ng-template>\n    </main>\n  </div>\n</div>\n\n<app-footer></app-footer>"],"mappings":"AAAA,SAASA,KAAK,EAAEC,IAAI,EAAEC,YAAY,QAAQ,iBAAiB;AAE3D,SAASC,MAAM,QAAQ,iBAAiB;AACxC,SAASC,WAAW,QAAQ,gBAAgB;AAC5C,SAASC,aAAa,QAAQ,wBAAwB;AACtD,SAASC,gBAAgB,QAAQ,2BAA2B;AAC5D,SAASC,mBAAmB,QAAQ,qCAAqC;AACzE,SAASC,SAAS,EAAEC,eAAe,QAAQ,0BAA0B;AAErE,SAASC,kBAAkB,QAAkB,qCAAqC;AAClF,SAASC,oBAAoB,QAAQ,uCAAuC;AAC5E,SAASC,sBAAsB,QAAQ,4CAA4C;AACnF,SAASC,gBAAgB,QAAQ,8BAA8B;AAC/D,SAASC,eAAe,QAAQ,4BAA4B;AAC5D,SAASC,4BAA4B,QAA2B,qDAAqD;;;;;;;;;;;;ICL/GC,EAAA,CAAAC,uBAAA,GAA2D;IACzDD,EAAA,CAAAE,cAAA,aAA6D;IAC3DF,EAAA,CAAAG,SAAA,aAAoF;IACpFH,EAAA,CAAAE,cAAA,aAAqD;IACnDF,EAAA,CAAAI,MAAA,oCACF;IAAAJ,EAAA,CAAAK,YAAA,EAAK;IACLL,EAAA,CAAAE,cAAA,YAA8B;IAC5BF,EAAA,CAAAI,MAAA,kEACF;IACFJ,EADE,CAAAK,YAAA,EAAI,EACA;;;;;;;IAqBEL,EAHN,CAAAE,cAAA,cAAoG,cACpE,cACN,gBAGwM;IAFzMF,EAAA,CAAAM,gBAAA,2BAAAC,+EAAAC,MAAA;MAAAR,EAAA,CAAAS,aAAA,CAAAC,GAAA;MAAA,MAAAC,MAAA,GAAAX,EAAA,CAAAY,aAAA;MAAAZ,EAAA,CAAAa,kBAAA,CAAAF,MAAA,CAAAG,UAAA,EAAAN,MAAA,MAAAG,MAAA,CAAAG,UAAA,GAAAN,MAAA;MAAA,OAAAR,EAAA,CAAAe,WAAA,CAAAP,MAAA;IAAA,EAAwB;IAACR,EAAA,CAAAgB,UAAA,mBAAAC,uEAAA;MAAAjB,EAAA,CAAAS,aAAA,CAAAC,GAAA;MAAA,MAAAC,MAAA,GAAAX,EAAA,CAAAY,aAAA;MAAA,OAAAZ,EAAA,CAAAe,WAAA,CAASJ,MAAA,CAAAO,cAAA,EAAgB;IAAA,EAAC;IAAtElB,EAAA,CAAAK,YAAA,EAE4N;IAC5NL,EAAA,CAAAE,cAAA,mBAAmF;IAAAF,EAAA,CAAAI,MAAA,aAAM;IAG/FJ,EAH+F,CAAAK,YAAA,EAAW,EAChG,EACF,EACF;;;;IANmBL,EAAA,CAAAmB,SAAA,GAAwB;IAAxBnB,EAAA,CAAAoB,gBAAA,YAAAT,MAAA,CAAAG,UAAA,CAAwB;;;;;IAsCvCd,EAFJ,CAAAE,cAAA,cAA+C,cACiD,mBACjD;IAAAF,EAAA,CAAAI,MAAA,mBAAY;IACzDJ,EADyD,CAAAK,YAAA,EAAW,EAC9D;IACNL,EAAA,CAAAE,cAAA,aAAqD;IACnDF,EAAA,CAAAI,MAAA,kDACF;IAAAJ,EAAA,CAAAK,YAAA,EAAK;IACLL,EAAA,CAAAE,cAAA,YAAyB;IACvBF,EAAA,CAAAI,MAAA,4CACF;IACFJ,EADE,CAAAK,YAAA,EAAI,EACA;;;;;IAIFL,EAFJ,CAAAE,cAAA,cAA8C,cACiD,mBACjD;IAAAF,EAAA,CAAAI,MAAA,iBAAU;IACtDJ,EADsD,CAAAK,YAAA,EAAW,EAC3D;IACNL,EAAA,CAAAE,cAAA,aAAqD;IACnDF,EAAA,CAAAI,MAAA,GACF;IAAAJ,EAAA,CAAAK,YAAA,EAAK;IACLL,EAAA,CAAAE,cAAA,YAAyB;IACvBF,EAAA,CAAAI,MAAA,GACF;IACFJ,EADE,CAAAK,YAAA,EAAI,EACA;;;;IALFL,EAAA,CAAAmB,SAAA,GACF;IADEnB,EAAA,CAAAqB,kBAAA,MAAAV,MAAA,CAAAW,YAAA,CAAAC,IAAA,MACF;IAEEvB,EAAA,CAAAmB,SAAA,GACF;IADEnB,EAAA,CAAAqB,kBAAA,OAAAV,MAAA,CAAAW,YAAA,CAAAE,IAAA,SAAAC,OAAA,YACF;;;;;;IAcFzB,EAAA,CAAAE,cAAA,iBACkL;IADrJF,EAAA,CAAAgB,UAAA,mBAAAU,mFAAA;MAAA1B,EAAA,CAAAS,aAAA,CAAAkB,GAAA;MAAA,MAAAhB,MAAA,GAAAX,EAAA,CAAAY,aAAA;MAAA,OAAAZ,EAAA,CAAAe,WAAA,CAASJ,MAAA,CAAAiB,aAAA,EAAe;IAAA,EAAC;IAEpD5B,EAAA,CAAAE,cAAA,eAAU;IAAAF,EAAA,CAAAI,MAAA,YAAK;IAAAJ,EAAA,CAAAK,YAAA,EAAW;IAC1BL,EAAA,CAAAI,MAAA,eACF;IAAAJ,EAAA,CAAAK,YAAA,EAAS;;;;;;IAjDXL,EAHJ,CAAAE,cAAA,cAAgD,cACrB,cAQwB;IADTF,EAFF,CAAAgB,UAAA,mBAAAa,sEAAA;MAAA7B,EAAA,CAAAS,aAAA,CAAAqB,GAAA;MAAA,MAAAC,YAAA,GAAA/B,EAAA,CAAAgC,WAAA;MAAA,OAAAhC,EAAA,CAAAe,WAAA,CAASgB,YAAA,CAAAE,KAAA,EAAiB;IAAA,EAAC,sBAAAC,yEAAA1B,MAAA;MAAAR,EAAA,CAAAS,aAAA,CAAAqB,GAAA;MAAA,MAAAnB,MAAA,GAAAX,EAAA,CAAAY,aAAA;MAAA,OAAAZ,EAAA,CAAAe,WAAA,CAAaJ,MAAA,CAAAwB,UAAA,CAAA3B,MAAA,CAAkB;IAAA,EAAC,uBAAA4B,0EAAA5B,MAAA;MAAAR,EAAA,CAAAS,aAAA,CAAAqB,GAAA;MAAA,MAAAnB,MAAA,GAAAX,EAAA,CAAAY,aAAA;MAAA,OAAAZ,EAAA,CAAAe,WAAA,CAChFJ,MAAA,CAAA0B,WAAA,CAAA7B,MAAA,CAAmB;IAAA,EAAC,kBAAA8B,qEAAA9B,MAAA;MAAAR,EAAA,CAAAS,aAAA,CAAAqB,GAAA;MAAA,MAAAnB,MAAA,GAAAX,EAAA,CAAAY,aAAA;MAAA,OAAAZ,EAAA,CAAAe,WAAA,CAASJ,MAAA,CAAA4B,MAAA,CAAA/B,MAAA,CAAc;IAAA,EAAC,2BAAAgC,8EAAA;MAAAxC,EAAA,CAAAS,aAAA,CAAAqB,GAAA;MAAA,MAAAC,YAAA,GAAA/B,EAAA,CAAAgC,WAAA;MAAA,OAAAhC,EAAA,CAAAe,WAAA,CACxCgB,YAAA,CAAAE,KAAA,EAAiB;IAAA,EAAC,2BAAAQ,8EAAA;MAAAzC,EAAA,CAAAS,aAAA,CAAAqB,GAAA;MAAA,MAAAC,YAAA,GAAA/B,EAAA,CAAAgC,WAAA;MAAA,OAAAhC,EAAA,CAAAe,WAAA,CAAkBgB,YAAA,CAAAE,KAAA,EAAiB;IAAA,EAAC;IAEvEjC,EAAA,CAAAE,cAAA,mBACkC;IADqBF,EAAA,CAAAgB,UAAA,oBAAA0B,yEAAAlC,MAAA;MAAAR,EAAA,CAAAS,aAAA,CAAAqB,GAAA;MAAA,MAAAnB,MAAA,GAAAX,EAAA,CAAAY,aAAA;MAAA,OAAAZ,EAAA,CAAAe,WAAA,CAAUJ,MAAA,CAAAgC,cAAA,CAAAnC,MAAA,CAAsB;IAAA,EAAC;IAAxFR,EAAA,CAAAK,YAAA,EACkC;IAclCL,EAZA,CAAA4C,UAAA,IAAAC,sDAAA,kBAA+C,IAAAC,sDAAA,kBAYD;IAWhD9C,EAAA,CAAAK,YAAA,EAAM;IAENL,EAAA,CAAAE,cAAA,cAAwD;IACtDF,EAAA,CAAAI,MAAA,wFACF;IAAAJ,EAAA,CAAAK,YAAA,EAAM;IAIJL,EADF,CAAAE,cAAA,cAA4C,8BAGuB;IAA5BF,EAAA,CAAAgB,UAAA,qBAAA+B,wFAAA;MAAA/C,EAAA,CAAAS,aAAA,CAAAqB,GAAA;MAAA,MAAAnB,MAAA,GAAAX,EAAA,CAAAY,aAAA;MAAA,OAAAZ,EAAA,CAAAe,WAAA,CAAWJ,MAAA,CAAAqC,aAAA,EAAe;IAAA,EAAC;IAAChD,EAAA,CAAAK,YAAA,EAAqB;IAEtFL,EAAA,CAAA4C,UAAA,KAAAK,0DAAA,qBACkL;IAIpLjD,EAAA,CAAAK,YAAA,EAAM;IAENL,EAAA,CAAAE,cAAA,eAA8D;IAC5DF,EAAA,CAAAI,MAAA,IAEF;IAAAJ,EAAA,CAAAK,YAAA,EAAM;IAIJL,EADF,CAAAE,cAAA,eAAkB,kBAEoL;IAD5LF,EAAA,CAAAgB,UAAA,mBAAAkC,0EAAA;MAAAlD,EAAA,CAAAS,aAAA,CAAAqB,GAAA;MAAA,MAAAnB,MAAA,GAAAX,EAAA,CAAAY,aAAA;MAAA,OAAAZ,EAAA,CAAAe,WAAA,CAASJ,MAAA,CAAAwC,eAAA,EAAiB;IAAA,EAAC;IAEjCnD,EAAA,CAAAE,cAAA,gBAAU;IAAAF,EAAA,CAAAI,MAAA,gBAAQ;IAAAJ,EAAA,CAAAK,YAAA,EAAW;IAC7BL,EAAA,CAAAI,MAAA,4BACF;IACFJ,EADE,CAAAK,YAAA,EAAS,EACL;IAIJL,EADF,CAAAE,cAAA,eAAmE,cACZ;IAAAF,EAAA,CAAAI,MAAA,uBAAe;IAAAJ,EAAA,CAAAK,YAAA,EAAK;IAGrEL,EAFJ,CAAAE,cAAA,eAA6C,SACxC,cACO;IAAAF,EAAA,CAAAI,MAAA,kCAAqB;IAAAJ,EAAA,CAAAK,YAAA,EAAS;IAACL,EAAA,CAAAI,MAAA,yCACzC;IAAAJ,EAAA,CAAAK,YAAA,EAAI;IAEFL,EADF,CAAAE,cAAA,SAAG,cACO;IAAAF,EAAA,CAAAI,MAAA,yBAAiB;IAAAJ,EAAA,CAAAK,YAAA,EAAS;IAACL,EAAA,CAAAI,MAAA,yDACrC;IAAAJ,EAAA,CAAAK,YAAA,EAAI;IAEFL,EADF,CAAAE,cAAA,SAAG,cACO;IAAAF,EAAA,CAAAI,MAAA,yBAAiB;IAAAJ,EAAA,CAAAK,YAAA,EAAS;IAACL,EAAA,CAAAI,MAAA,iDACrC;IAIRJ,EAJQ,CAAAK,YAAA,EAAI,EACA,EACF,EACF,EACF;;;;IAhFAL,EAAA,CAAAmB,SAAA,GAA2E;IAA3EnB,EAAA,CAAAoD,UAAA,CAAAzC,MAAA,CAAAW,YAAA,sDAA2E;IAC3EtB,EAAA,CAAAqD,WAAA,iBAAA1C,MAAA,CAAA2C,UAAA,CAAiC;IAO3BtD,EAAA,CAAAmB,SAAA,GAAmB;IAAnBnB,EAAA,CAAAuD,UAAA,UAAA5C,MAAA,CAAAW,YAAA,CAAmB;IAYnBtB,EAAA,CAAAmB,SAAA,EAAkB;IAAlBnB,EAAA,CAAAuD,UAAA,SAAA5C,MAAA,CAAAW,YAAA,CAAkB;IAmBmBtB,EAAA,CAAAmB,SAAA,GAAsB;IAACnB,EAAvB,CAAAuD,UAAA,YAAA5C,MAAA,CAAA6C,UAAA,CAAsB,cAAA7C,MAAA,CAAAW,YAAA,CAA2B;IAInFtB,EAAA,CAAAmB,SAAA,EAAkB;IAAlBnB,EAAA,CAAAuD,UAAA,SAAA5C,MAAA,CAAAW,YAAA,CAAkB;IAQ3BtB,EAAA,CAAAmB,SAAA,GAEF;IAFEnB,EAAA,CAAAqB,kBAAA,MAAAV,MAAA,CAAAW,YAAA,8FAEF;;;;;IAgCFtB,EAAA,CAAAC,uBAAA,GAAwD;IACtDD,EAAA,CAAAE,cAAA,cAA8B;IAC5BF,EAAA,CAAAG,SAAA,cAA+F;IAC/FH,EAAA,CAAAE,cAAA,YAAyB;IAAAF,EAAA,CAAAI,MAAA,oCAAwB;IACnDJ,EADmD,CAAAK,YAAA,EAAI,EACjD;;;;;;;IAmBIL,EAFF,CAAAE,cAAA,aAC0D,aACZ;IAAAF,EAAA,CAAAI,MAAA,GAAmB;IAAAJ,EAAA,CAAAK,YAAA,EAAK;IACpEL,EAAA,CAAAE,cAAA,aAA4C;IAAAF,EAAA,CAAAI,MAAA,GAA+B;IAAAJ,EAAA,CAAAK,YAAA,EAAK;IAE9EL,EADF,CAAAE,cAAA,aAAsB,eAEwF;IAC1GF,EAAA,CAAAI,MAAA,GACF;IACFJ,EADE,CAAAK,YAAA,EAAO,EACJ;IAEHL,EADF,CAAAE,cAAA,aAAsB,iBAGY;IAFxBF,EAAA,CAAAgB,UAAA,mBAAAyC,4GAAA;MAAA,MAAAC,WAAA,GAAA1D,EAAA,CAAAS,aAAA,CAAAkD,GAAA,EAAAC,SAAA;MAAA,MAAAjD,MAAA,GAAAX,EAAA,CAAAY,aAAA;MAAA,OAAAZ,EAAA,CAAAe,WAAA,CAASJ,MAAA,CAAAkD,eAAA,CAAAH,WAAA,CAAyB;IAAA,EAAC;IAGzC1D,EAAA,CAAAE,cAAA,gBAAU;IAAAF,EAAA,CAAAI,MAAA,cAAM;IAGtBJ,EAHsB,CAAAK,YAAA,EAAW,EACpB,EACN,EACF;;;;IAfyCL,EAAA,CAAAmB,SAAA,GAAmB;IAAnBnB,EAAA,CAAA8D,iBAAA,CAAAJ,WAAA,CAAAK,IAAA,CAAmB;IACnB/D,EAAA,CAAAmB,SAAA,GAA+B;IAA/BnB,EAAA,CAAA8D,iBAAA,CAAAJ,WAAA,CAAAM,SAAA,QAA+B;IAIvEhE,EAAA,CAAAmB,SAAA,GACF;IADEnB,EAAA,CAAAqB,kBAAA,MAAAqC,WAAA,CAAAO,MAAA,CAAAC,MAAA,WACF;;;;;IAoBJlE,EAAA,CAAAE,cAAA,iBAA4D;IAAAF,EAAA,CAAAI,MAAA,GAAU;IAAAJ,EAAA,CAAAK,YAAA,EAAS;;;;IAAlCL,EAAA,CAAAuD,UAAA,UAAAY,QAAA,CAAc;IAACnE,EAAA,CAAAmB,SAAA,EAAU;IAAVnB,EAAA,CAAA8D,iBAAA,CAAAK,QAAA,CAAU;;;;;;IAxC9EnE,EAAA,CAAAC,uBAAA,GAA6D;IAKnDD,EAJR,CAAAE,cAAA,cAA+D,gBACvC,gBACM,SACpB,aACkE;IAAAF,EAAA,CAAAI,MAAA,8BAAkB;IAAAJ,EAAA,CAAAK,YAAA,EAAK;IAC3FL,EAAA,CAAAE,cAAA,aAAoE;IAAAF,EAAA,CAAAI,MAAA,0BAAS;IAAAJ,EAAA,CAAAK,YAAA,EAAK;IAClFL,EAAA,CAAAE,cAAA,aAAoE;IAAAF,EAAA,CAAAI,MAAA,cAAM;IAAAJ,EAAA,CAAAK,YAAA,EAAK;IAC/EL,EAAA,CAAAE,cAAA,cAAoE;IAAAF,EAAA,CAAAI,MAAA,uBAAK;IAE7EJ,EAF6E,CAAAK,YAAA,EAAK,EAC3E,EACC;IACRL,EAAA,CAAAE,cAAA,iBAAiD;IAC/CF,EAAA,CAAA4C,UAAA,KAAAwB,mFAAA,kBAC0D;IAmBhEpE,EAFI,CAAAK,YAAA,EAAQ,EACF,EACJ;IAKFL,EAFJ,CAAAE,cAAA,eAAoD,eACb,gBACC;IAAAF,EAAA,CAAAI,MAAA,eAAO;IAAAJ,EAAA,CAAAK,YAAA,EAAO;IAClDL,EAAA,CAAAE,cAAA,kBACwJ;IADhJF,EAAA,CAAAM,gBAAA,2BAAA+D,+GAAA7D,MAAA;MAAAR,EAAA,CAAAS,aAAA,CAAA6D,GAAA;MAAA,MAAA3D,MAAA,GAAAX,EAAA,CAAAY,aAAA;MAAAZ,EAAA,CAAAa,kBAAA,CAAAF,MAAA,CAAA4D,QAAA,EAAA/D,MAAA,MAAAG,MAAA,CAAA4D,QAAA,GAAA/D,MAAA;MAAA,OAAAR,EAAA,CAAAe,WAAA,CAAAP,MAAA;IAAA,EAAsB;IAACR,EAAA,CAAAgB,UAAA,oBAAAwD,wGAAA;MAAAxE,EAAA,CAAAS,aAAA,CAAA6D,GAAA;MAAA,MAAA3D,MAAA,GAAAX,EAAA,CAAAY,aAAA;MAAA,OAAAZ,EAAA,CAAAe,WAAA,CAAUJ,MAAA,CAAA8D,gBAAA,EAAkB;IAAA,EAAC;IAE1DzE,EAAA,CAAA4C,UAAA,KAAA8B,uFAAA,qBAA4D;IAC9D1E,EAAA,CAAAK,YAAA,EAAS;IACTL,EAAA,CAAAE,cAAA,gBAAoC;IAAAF,EAAA,CAAAI,MAAA,IAA6C;IACnFJ,EADmF,CAAAK,YAAA,EAAO,EACpF;IAGJL,EADF,CAAAE,cAAA,eAAqC,kBAE0I;IADrKF,EAAA,CAAAgB,UAAA,mBAAA2D,uGAAA;MAAA3E,EAAA,CAAAS,aAAA,CAAA6D,GAAA;MAAA,MAAA3D,MAAA,GAAAX,EAAA,CAAAY,aAAA;MAAA,OAAAZ,EAAA,CAAAe,WAAA,CAASJ,MAAA,CAAAiE,YAAA,EAAc;IAAA,EAAC;IAE9B5E,EAAA,CAAAE,cAAA,gBAAU;IAAAF,EAAA,CAAAI,MAAA,oBAAY;IACxBJ,EADwB,CAAAK,YAAA,EAAW,EAC1B;IAETL,EAAA,CAAAE,cAAA,gBAA8C;IAC5CF,EAAA,CAAAI,MAAA,IACF;IAAAJ,EAAA,CAAAK,YAAA,EAAO;IAEPL,EAAA,CAAAE,cAAA,kBAC6K;IADrKF,EAAA,CAAAgB,UAAA,mBAAA6D,uGAAA;MAAA7E,EAAA,CAAAS,aAAA,CAAA6D,GAAA;MAAA,MAAA3D,MAAA,GAAAX,EAAA,CAAAY,aAAA;MAAA,OAAAZ,EAAA,CAAAe,WAAA,CAASJ,MAAA,CAAAmE,QAAA,EAAU;IAAA,EAAC;IAE1B9E,EAAA,CAAAE,cAAA,gBAAU;IAAAF,EAAA,CAAAI,MAAA,qBAAa;IAG7BJ,EAH6B,CAAAK,YAAA,EAAW,EAC3B,EACL,EACF;;;;;IAhDyBL,EAAA,CAAAmB,SAAA,IAAqB;IAArBnB,EAAA,CAAAuD,UAAA,YAAA5C,MAAA,CAAAoE,kBAAA,CAAqB;IA0BxC/E,EAAA,CAAAmB,SAAA,GAAsB;IAAtBnB,EAAA,CAAAoB,gBAAA,YAAAT,MAAA,CAAA4D,QAAA,CAAsB;IAEHvE,EAAA,CAAAmB,SAAA,EAAkB;IAAlBnB,EAAA,CAAAuD,UAAA,YAAA5C,MAAA,CAAAqE,eAAA,CAAkB;IAEThF,EAAA,CAAAmB,SAAA,GAA6C;IAA7CnB,EAAA,CAAAqB,kBAAA,QAAAV,MAAA,CAAAsE,iBAAA,CAAAf,MAAA,sBAA6C;IAIhDlE,EAAA,CAAAmB,SAAA,GAA8B;IAA9BnB,EAAA,CAAAuD,UAAA,aAAA5C,MAAA,CAAAuE,WAAA,OAA8B;IAM7DlF,EAAA,CAAAmB,SAAA,GACF;IADEnB,EAAA,CAAAmF,kBAAA,kBAAAxE,MAAA,CAAAuE,WAAA,UAAAvE,MAAA,CAAAyE,aAAA,QACF;IAE6BpF,EAAA,CAAAmB,SAAA,EAA2C;IAA3CnB,EAAA,CAAAuD,UAAA,aAAA5C,MAAA,CAAAuE,WAAA,IAAAvE,MAAA,CAAAyE,aAAA,GAA2C;;;;;IAYxEpF,EAFJ,CAAAE,cAAA,cAA+B,cAC+D,mBACjD;IAAAF,EAAA,CAAAI,MAAA,cAAO;IAClDJ,EADkD,CAAAK,YAAA,EAAW,EACvD;IACNL,EAAA,CAAAE,cAAA,aAAqD;IAAAF,EAAA,CAAAI,MAAA,wCAA4B;IAAAJ,EAAA,CAAAK,YAAA,EAAK;IACtFL,EAAA,CAAAE,cAAA,YAAyB;IACvBF,EAAA,CAAAI,MAAA,sFACF;IACFJ,EADE,CAAAK,YAAA,EAAI,EACA;;;;;IATRL,EAhEA,CAAA4C,UAAA,IAAAyC,6EAAA,2BAA6D,IAAAC,4EAAA,gCAAAtF,EAAA,CAAAuF,sBAAA,CAgEnC;;;;;IAhEiBvF,EAA5B,CAAAuD,UAAA,SAAA5C,MAAA,CAAA6E,SAAA,CAAAtB,MAAA,KAA4B,aAAAuB,eAAA,CAAgB;;;;;IAX/DzF,EAAA,CAAAE,cAAA,cAA8C;IAS5CF,EAPA,CAAA4C,UAAA,IAAA8C,+DAAA,0BAAwD,IAAAC,8DAAA,gCAAA3F,EAAA,CAAAuF,sBAAA,CAOzB;IA8EjCvF,EAAA,CAAAK,YAAA,EAAM;;;;;IArFWL,EAAA,CAAAmB,SAAA,EAAkB;IAAAnB,EAAlB,CAAAuD,UAAA,SAAA5C,MAAA,CAAA6C,UAAA,CAAkB,aAAAoC,oBAAA,CAAqB;;;;;;IAhIxD5F,EADF,CAAAE,cAAA,cAAkB,aACiC;IAC/CF,EAAA,CAAAI,MAAA,uCACF;IAAAJ,EAAA,CAAAK,YAAA,EAAK;IACLL,EAAA,CAAAE,cAAA,YAAyB;IACvBF,EAAA,CAAAI,MAAA,+FACF;IACFJ,EADE,CAAAK,YAAA,EAAI,EACA;IAGNL,EAAA,CAAAE,cAAA,cACmH;IAEjHF,EAAA,CAAA4C,UAAA,IAAAiD,+CAAA,kBAAoG;IAalG7F,EADF,CAAAE,cAAA,cAA2C,iBAGA;IAFjCF,EAAA,CAAAgB,UAAA,mBAAA8E,kEAAA;MAAA9F,EAAA,CAAAS,aAAA,CAAAsF,GAAA;MAAA,MAAApF,MAAA,GAAAX,EAAA,CAAAY,aAAA;MAAA,OAAAZ,EAAA,CAAAe,WAAA,CAAAJ,MAAA,CAAAqF,SAAA,GAAqB,QAAQ;IAAA,EAAC;IAGpChG,EAAA,CAAAI,MAAA,qBACF;IAAAJ,EAAA,CAAAK,YAAA,EAAS;IACTL,EAAA,CAAAE,cAAA,kBAEyC;IAFjCF,EAAA,CAAAgB,UAAA,mBAAAiF,mEAAA;MAAAjG,EAAA,CAAAS,aAAA,CAAAsF,GAAA;MAAA,MAAApF,MAAA,GAAAX,EAAA,CAAAY,aAAA;MAAA,OAAAZ,EAAA,CAAAe,WAAA,CAAAJ,MAAA,CAAAqF,SAAA,GAAqB,MAAM;IAAA,EAAC;IAGlChG,EAAA,CAAAI,MAAA,+BACF;IACFJ,EADE,CAAAK,YAAA,EAAS,EACL;IA2FNL,EAxFA,CAAA4C,UAAA,KAAAsD,gDAAA,oBAAgD,KAAAC,gDAAA,kBAwFF;IAwFhDnG,EAAA,CAAAK,YAAA,EAAM;;;;IA1MEL,EAAA,CAAAmB,SAAA,GAAkD;IAAlDnB,EAAA,CAAAuD,UAAA,SAAA5C,MAAA,CAAAqF,SAAA,eAAArF,MAAA,CAAA6E,SAAA,CAAAtB,MAAA,KAAkD;IAcpDlE,EAAA,CAAAmB,SAAA,GAAqK;IAArKnB,EAAA,CAAAoD,UAAA,CAAAzC,MAAA,CAAAqF,SAAA,mJAAqK;IAKrKhG,EAAA,CAAAmB,SAAA,GAAmK;IAAnKnB,EAAA,CAAAoD,UAAA,CAAAzC,MAAA,CAAAqF,SAAA,iJAAmK;IAOjKhG,EAAA,CAAAmB,SAAA,GAA4B;IAA5BnB,EAAA,CAAAuD,UAAA,SAAA5C,MAAA,CAAAqF,SAAA,cAA4B;IAwF5BhG,EAAA,CAAAmB,SAAA,EAA0B;IAA1BnB,EAAA,CAAAuD,UAAA,SAAA5C,MAAA,CAAAqF,SAAA,YAA0B;;;ADpH1C,OAAM,MAAOI,kBAAkB;EAqBnBC,UAAA;EACAC,oBAAA;EACAC,mBAAA;EACAC,MAAA;EACAC,MAAA;EAxBVT,SAAS,GAAsB,QAAQ;EACvC1E,YAAY,GAAgB,IAAI;EAChCgC,UAAU,GAAG,KAAK;EAClBkC,SAAS,GAAe,EAAE;EAC1BhC,UAAU,GAAY,KAAK;EAC3BkD,gBAAgB,GAAY,IAAI;EAEhC;EACAnC,QAAQ,GAAG,EAAE;EACbW,WAAW,GAAG,CAAC;EACfF,eAAe,GAAG,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;EAEjC;EACA2B,gBAAgB,GAAa,CAAC,MAAM,EAAE,WAAW,EAAE,kBAAkB,EAAE,OAAO,CAAC;EAE/E;EACA7F,UAAU,GAAW,EAAE;EACvBmE,iBAAiB,GAAe,EAAE;EAElC2B,YACUP,UAA8B,EAC9BC,oBAA0C,EAC1CC,mBAAwC,EACxCC,MAAiB,EACjBC,MAAc;IAJd,KAAAJ,UAAU,GAAVA,UAAU;IACV,KAAAC,oBAAoB,GAApBA,oBAAoB;IACpB,KAAAC,mBAAmB,GAAnBA,mBAAmB;IACnB,KAAAC,MAAM,GAANA,MAAM;IACN,KAAAC,MAAM,GAANA,MAAM;EACZ;EAEJI,QAAQA,CAAA;IACN,IAAI,CAACC,qBAAqB,EAAE;EAC9B;EAEAA,qBAAqBA,CAAA;IACnB,IAAI,CAACJ,gBAAgB,GAAG,IAAI;IAE5B;IACA,IAAI,CAACK,kBAAkB,EAAE;IAEzB;IACAC,UAAU,CAAC,MAAK;MACd,IAAI,CAACC,QAAQ,EAAE;MACf,IAAI,CAACP,gBAAgB,GAAG,KAAK;IAC/B,CAAC,EAAE,IAAI,CAAC;EACV;EAEAK,kBAAkBA,CAAA;IAChB,MAAMG,YAAY,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,IAAI,SAAS;IAC/D,MAAMC,UAAU,GAAGH,YAAY,CAACI,WAAW,EAAE;IAE7C,MAAMC,WAAW,GAAGF,UAAU,KAAK,aAAa,IAC9CA,UAAU,CAACG,QAAQ,CAAC,aAAa,CAAC,IAClCH,UAAU,KAAK,wBAAwB,IACvCA,UAAU,CAACG,QAAQ,CAAC,WAAW,CAAC,IAChCH,UAAU,KAAK,qBAAqB,IACpCA,UAAU,CAACG,QAAQ,CAAC,QAAQ,CAAC;IAE/B,IAAI,CAACD,WAAW,EAAE;MAChB,IAAI,CAAChB,mBAAmB,CAACkB,SAAS,CAAC,kGAAkG,CAAC;MACtI,IAAI,CAAChB,MAAM,CAACiB,QAAQ,CAAC,CAAC,UAAU,CAAC,CAAC;MAClC;IACF;EACF;EAEAT,QAAQA,CAAA;IACN,IAAI,CAACzD,UAAU,GAAG,IAAI;IAEtB;IACA,MAAMmE,MAAM,GAAG,IAAI,CAACC,SAAS,EAAE;IAE/B,IAAID,MAAM,EAAE;MACV;MACA,IAAI,CAACtB,UAAU,CAACwB,eAAe,EAAE,CAACC,SAAS,CAAC;QAC1CC,IAAI,EAAGvC,SAAqB,IAAI;UAC9B,IAAI,CAACA,SAAS,GAAGA,SAAS;UAC1B,IAAI,CAACwC,gBAAgB,EAAE;UACvB,IAAI,CAACxE,UAAU,GAAG,KAAK;UACvByE,OAAO,CAACC,GAAG,CAAC,qCAAqC,EAAEP,MAAM,EAAE,GAAG,EAAEnC,SAAS,CAACtB,MAAM,CAAC;QACnF,CAAC;QACDiE,KAAK,EAAGA,KAAU,IAAI;UACpBF,OAAO,CAACE,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;UACrD,IAAI,CAAC5B,mBAAmB,CAACkB,SAAS,CAAC,8CAA8C,CAAC;UAClF,IAAI,CAACjE,UAAU,GAAG,KAAK;QACzB;OACD,CAAC;IACJ,CAAC,MAAM;MACL;MACA,IAAI,CAAC6C,UAAU,CAACwB,eAAe,EAAE,CAACC,SAAS,CAAC;QAC1CC,IAAI,EAAGvC,SAAS,IAAI;UAClB,IAAI,CAACA,SAAS,GAAGA,SAAS;UAC1B,IAAI,CAACwC,gBAAgB,EAAE;UACvB,IAAI,CAACxE,UAAU,GAAG,KAAK;UACvByE,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAE1C,SAAS,CAACtB,MAAM,CAAC;QAClE,CAAC;QACDiE,KAAK,EAAGA,KAAU,IAAI;UACpBF,OAAO,CAACE,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;UACrD,IAAI,CAAC5B,mBAAmB,CAACkB,SAAS,CAAC,8CAA8C,CAAC;UAClF,IAAI,CAACjE,UAAU,GAAG,KAAK;QACzB;OACD,CAAC;IACJ;EACF;EAEA;;;EAGAoE,SAASA,CAAA;IACP,IAAI;MACF;MACA,MAAMD,MAAM,GAAGR,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;MAC7C,IAAIO,MAAM,IAAI,CAACS,KAAK,CAACC,MAAM,CAACV,MAAM,CAAC,CAAC,EAAE;QACpC,OAAOU,MAAM,CAACV,MAAM,CAAC;MACvB;MAEA;MACA,MAAMW,KAAK,GAAGnB,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,IAAIkB,KAAK,EAAE;QACT,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACC,IAAI,CAACJ,KAAK,CAACK,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QACrD,IAAIJ,OAAO,CAACK,EAAE,IAAI,CAACR,KAAK,CAACC,MAAM,CAACE,OAAO,CAACK,EAAE,CAAC,CAAC,EAAE;UAC5C,OAAOP,MAAM,CAACE,OAAO,CAACK,EAAE,CAAC;QAC3B;MACF;MAEA;MACA,MAAMC,QAAQ,GAAG1B,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC;MACjD,IAAIyB,QAAQ,EAAE;QACZ,MAAMC,IAAI,GAAGN,IAAI,CAACC,KAAK,CAACI,QAAQ,CAAC;QACjC,IAAIC,IAAI,CAACF,EAAE,IAAI,CAACR,KAAK,CAACC,MAAM,CAACS,IAAI,CAACF,EAAE,CAAC,CAAC,EAAE;UACtC,OAAOP,MAAM,CAACS,IAAI,CAACF,EAAE,CAAC;QACxB;MACF;MAEA,OAAO,IAAI;IACb,CAAC,CAAC,OAAOT,KAAK,EAAE;MACdF,OAAO,CAACE,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;MAClD,OAAO,IAAI;IACb;EACF;EAEA;;;EAGQY,+BAA+BA,CAACC,QAAa;IACnD,IAAIA,QAAQ,CAACxD,SAAS,IAAIyD,KAAK,CAACC,OAAO,CAACF,QAAQ,CAACxD,SAAS,CAAC,EAAE;MAC3DyC,OAAO,CAACC,GAAG,CAAC,kDAAkD,CAAC;MAE/D;MACAc,QAAQ,CAACxD,SAAS,CAAC2D,OAAO,CAAEC,QAAa,IAAI;QAC3C,IAAI,CAAC9C,oBAAoB,CAAC+C,qBAAqB,CAC7CD,QAAQ,CAACR,EAAE,EACXQ,QAAQ,CAACrF,IAAI,CACd,CAAC+D,SAAS,CAAC;UACVC,IAAI,EAAGuB,OAAO,IAAI;YAChB,IAAIA,OAAO,EAAE;cACXrB,OAAO,CAACC,GAAG,CAAC,yCAAyCkB,QAAQ,CAACrF,IAAI,EAAE,CAAC;YACvE,CAAC,MAAM;cACLkE,OAAO,CAACC,GAAG,CAAC,kDAAkDkB,QAAQ,CAACrF,IAAI,EAAE,CAAC;YAChF;UACF,CAAC;UACDoE,KAAK,EAAGA,KAAK,IAAI;YACfF,OAAO,CAACE,KAAK,CAAC,+CAA+CiB,QAAQ,CAACrF,IAAI,GAAG,EAAEoE,KAAK,CAAC;UACvF;SACD,CAAC;MACJ,CAAC,CAAC;MAEF;MACA,IAAI,CAAC7B,oBAAoB,CAACiD,mBAAmB,EAAE,CAACzB,SAAS,CAAC;QACxDC,IAAI,EAAGuB,OAAO,IAAI;UAChB,IAAIA,OAAO,EAAE;YACXrB,OAAO,CAACC,GAAG,CAAC,iDAAiD,CAAC;UAChE,CAAC,MAAM;YACLD,OAAO,CAACC,GAAG,CAAC,gDAAgD,CAAC;UAC/D;QACF,CAAC;QACDC,KAAK,EAAGA,KAAK,IAAI;UACfF,OAAO,CAACE,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;QAC1D;OACD,CAAC;IACJ;EACF;EAEAxF,cAAcA,CAAC6G,KAAU;IACvB,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAIF,IAAI,IAAI,IAAI,CAACG,cAAc,CAACH,IAAI,CAAC,EAAE;MACrC,IAAI,CAACnI,YAAY,GAAGmI,IAAI;MACxBxB,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEuB,IAAI,CAAClI,IAAI,CAAC;IACnD;EACF;EAEAY,UAAUA,CAACqH,KAAgB;IACzBA,KAAK,CAACK,cAAc,EAAE;IACtB,IAAI,CAACvG,UAAU,GAAG,IAAI;EACxB;EAEAjB,WAAWA,CAACmH,KAAgB;IAC1BA,KAAK,CAACK,cAAc,EAAE;IACtB,IAAI,CAACvG,UAAU,GAAG,KAAK;EACzB;EAEAf,MAAMA,CAACiH,KAAgB;IACrBA,KAAK,CAACK,cAAc,EAAE;IACtB,IAAI,CAACvG,UAAU,GAAG,KAAK;IAEvB,MAAMqG,KAAK,GAAGH,KAAK,CAACM,YAAY,EAAEH,KAAK;IACvC,IAAIA,KAAK,IAAIA,KAAK,CAACzF,MAAM,GAAG,CAAC,EAAE;MAC7B,MAAMuF,IAAI,GAAGE,KAAK,CAAC,CAAC,CAAC;MACrB,IAAI,IAAI,CAACC,cAAc,CAACH,IAAI,CAAC,EAAE;QAC7B,IAAI,CAACnI,YAAY,GAAGmI,IAAI;QACxBxB,OAAO,CAACC,GAAG,CAAC,sCAAsC,EAAEuB,IAAI,CAAClI,IAAI,CAAC;MAChE;IACF;EACF;EAEAqI,cAAcA,CAACH,IAAU;IACvB;IACA,IAAIA,IAAI,CAACjI,IAAI,KAAK,CAAC,EAAE;MACnB,IAAI,CAAC+E,mBAAmB,CAACkB,SAAS,CAAC,wDAAwD,CAAC;MAC5F,OAAO,KAAK;IACd;IAEA;IACA,MAAMsC,OAAO,GAAG,CAAC,GAAG,IAAI,GAAG,IAAI;IAC/B,IAAIN,IAAI,CAACjI,IAAI,GAAGuI,OAAO,EAAE;MACvB,IAAI,CAACxD,mBAAmB,CAACkB,SAAS,CAAC,2CAA2C,CAAC;MAC/E,OAAO,KAAK;IACd;IAEA;IACA,MAAMuC,QAAQ,GAAGP,IAAI,CAAClI,IAAI,CAAC0I,WAAW,EAAE;IACxC,MAAMC,KAAK,GAAGT,IAAI,CAACU,IAAI,CAAC3C,QAAQ,CAAC,KAAK,CAAC,IAAIwC,QAAQ,CAACI,QAAQ,CAAC,MAAM,CAAC;IACpE,MAAMC,OAAO,GAAGZ,IAAI,CAACU,IAAI,CAAC3C,QAAQ,CAAC,OAAO,CAAC,IAAIwC,QAAQ,CAACI,QAAQ,CAAC,OAAO,CAAC,IAAIJ,QAAQ,CAACI,QAAQ,CAAC,MAAM,CAAC;IAEtG,IAAI,CAACF,KAAK,IAAI,CAACG,OAAO,EAAE;MACtB,IAAI,CAAC9D,mBAAmB,CAACkB,SAAS,CAAC,+DAA+D,CAAC;MACnG,OAAO,KAAK;IACd;IAEA;IACA,IAAIuC,QAAQ,CAACI,QAAQ,CAAC,MAAM,CAAC,IAAIX,IAAI,CAACU,IAAI,IAAI,CAACV,IAAI,CAACU,IAAI,CAAC3C,QAAQ,CAAC,KAAK,CAAC,IAAI,CAACiC,IAAI,CAACU,IAAI,CAAC3C,QAAQ,CAAC,MAAM,CAAC,EAAE;MACvG,IAAI,CAACjB,mBAAmB,CAAC+D,WAAW,CAAC,0DAA0D,CAAC;IAClG;IAEA,IAAI,CAACN,QAAQ,CAACI,QAAQ,CAAC,OAAO,CAAC,IAAIJ,QAAQ,CAACI,QAAQ,CAAC,MAAM,CAAC,KAAKX,IAAI,CAACU,IAAI,IAAI,CAACV,IAAI,CAACU,IAAI,CAAC3C,QAAQ,CAAC,OAAO,CAAC,IAAI,CAACiC,IAAI,CAACU,IAAI,CAAC3C,QAAQ,CAAC,OAAO,CAAC,EAAE;MAC1I,IAAI,CAACjB,mBAAmB,CAAC+D,WAAW,CAAC,gEAAgE,CAAC;IACxG;IAEA,OAAO,IAAI;EACb;EAEAtH,aAAaA,CAAA;IACX,IAAI,CAAC,IAAI,CAAC1B,YAAY,EAAE;MACtB,IAAI,CAACiF,mBAAmB,CAAC+D,WAAW,CAAC,sDAAsD,CAAC;MAC5F;IACF;IAEA;IACA,MAAMN,QAAQ,GAAG,IAAI,CAAC1I,YAAY,CAACC,IAAI,CAAC0I,WAAW,EAAE;IACrD,MAAMC,KAAK,GAAGF,QAAQ,CAACI,QAAQ,CAAC,MAAM,CAAC;IACvC,MAAMC,OAAO,GAAGL,QAAQ,CAACI,QAAQ,CAAC,OAAO,CAAC,IAAIJ,QAAQ,CAACI,QAAQ,CAAC,MAAM,CAAC;IAEvE,IAAI,CAACF,KAAK,IAAI,CAACG,OAAO,EAAE;MACtB,IAAI,CAAC9D,mBAAmB,CAACkB,SAAS,CAAC,2EAA2E,CAAC;MAC/G;IACF;IAEA;IACA,IAAI4C,OAAO,EAAE;MACX,IAAI,CAACE,qBAAqB,EAAE;MAC5B;IACF;IAEA;IACA,IAAIL,KAAK,EAAE;MACT,IAAI,CAACM,mBAAmB,EAAE;IAC5B;EACF;EAEQA,mBAAmBA,CAAA;IACzB,IAAI,CAAC,IAAI,CAAClJ,YAAY,EAAE;IAExB,MAAMmJ,MAAM,GAAG,IAAIC,UAAU,EAAE;IAC/BD,MAAM,CAACE,MAAM,GAAIC,CAAC,IAAI;MACpB,MAAMC,OAAO,GAAGD,CAAC,CAAClB,MAAM,EAAEoB,MAAgB;MAE1C;MACA,IAAI,CAACD,OAAO,IAAIA,OAAO,CAACE,IAAI,EAAE,CAAC7G,MAAM,KAAK,CAAC,EAAE;QAC3C,IAAI,CAACqC,mBAAmB,CAACkB,SAAS,CAAC,yBAAyB,CAAC;QAC7D;MACF;MAEA,MAAMuD,KAAK,GAAGH,OAAO,CAAClC,KAAK,CAAC,IAAI,CAAC,CAACsC,MAAM,CAACC,IAAI,IAAIA,IAAI,CAACH,IAAI,EAAE,CAAC7G,MAAM,GAAG,CAAC,CAAC;MAExE,IAAI8G,KAAK,CAAC9G,MAAM,GAAG,CAAC,EAAE;QACpB,IAAI,CAACqC,mBAAmB,CAACkB,SAAS,CAAC,+DAA+D,CAAC;QACnG;MACF;MAEA,MAAM0D,SAAS,GAAGH,KAAK,CAAC,CAAC,CAAC;MAC1B,MAAMI,OAAO,GAAGD,SAAS,CAACxC,KAAK,CAAC,GAAG,CAAC,CAAC0C,GAAG,CAACC,GAAG,IAAIA,GAAG,CAACP,IAAI,EAAE,CAAC;MAE3D;MACA,IAAIK,OAAO,CAAClH,MAAM,GAAG,CAAC,EAAE;QACtB,IAAI,CAACqC,mBAAmB,CAACkB,SAAS,CAAC,uFAAuF,CAAC;QAC3H;MACF;MAEA;MACA,MAAM8D,QAAQ,GAAG,CAACH,OAAO,CAAC,CAAC,CAAC,IAAI,EAAE,EAAEnB,WAAW,EAAE,CAACuB,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;MACnE,MAAMC,SAAS,GAAG,CAACL,OAAO,CAAC,CAAC,CAAC,IAAI,EAAE,EAAEnB,WAAW,EAAE,CAACuB,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;MAEpE,IAAI,CAACD,QAAQ,CAAC/D,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC+D,QAAQ,CAAC/D,QAAQ,CAAC,UAAU,CAAC,EAAE;QAChE,IAAI,CAACjB,mBAAmB,CAACkB,SAAS,CAAC,2FAA2F,CAAC;QAC/H;MACF;MAEA,IAAI,CAACgE,SAAS,CAACjE,QAAQ,CAAC,WAAW,CAAC,IAAI,CAACiE,SAAS,CAACjE,QAAQ,CAAC,MAAM,CAAC,EAAE;QACnE,IAAI,CAACjB,mBAAmB,CAACkB,SAAS,CAAC,gGAAgG,CAAC;QACpI;MACF;MAEA;MACA,MAAMiE,SAAS,GAAGV,KAAK,CAACW,KAAK,CAAC,CAAC,CAAC;MAChC,MAAMC,aAAa,GAAG,IAAIC,GAAG,EAAU;MACvC,IAAIC,SAAS,GAAG,KAAK;MAErB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGL,SAAS,CAACxH,MAAM,EAAE6H,CAAC,EAAE,EAAE;QACzC,MAAMb,IAAI,GAAGQ,SAAS,CAACK,CAAC,CAAC;QACzB,MAAMC,GAAG,GAAGd,IAAI,CAACvC,KAAK,CAAC,GAAG,CAAC,CAAC0C,GAAG,CAACY,IAAI,IAAIA,IAAI,CAAClB,IAAI,EAAE,CAACS,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QAEtE;QACA,IAAIQ,GAAG,CAAC9H,MAAM,GAAG,CAAC,EAAE;UAClB,IAAI,CAACqC,mBAAmB,CAACkB,SAAS,CAAC,SAASsE,CAAC,GAAG,CAAC,8DAA8D,CAAC;UAChHD,SAAS,GAAG,IAAI;UAChB;QACF;QAEA;QACA,IAAI,CAACE,GAAG,CAAC,CAAC,CAAC,IAAIA,GAAG,CAAC,CAAC,CAAC,CAACjB,IAAI,EAAE,CAAC7G,MAAM,KAAK,CAAC,EAAE;UACzC,IAAI,CAACqC,mBAAmB,CAACkB,SAAS,CAAC,SAASsE,CAAC,GAAG,CAAC,0CAA0C,CAAC;UAC5FD,SAAS,GAAG,IAAI;UAChB;QACF;QAEA;QACA,IAAI,CAACE,GAAG,CAAC,CAAC,CAAC,IAAIA,GAAG,CAAC,CAAC,CAAC,CAACjB,IAAI,EAAE,CAAC7G,MAAM,KAAK,CAAC,EAAE;UACzC,IAAI,CAACqC,mBAAmB,CAACkB,SAAS,CAAC,SAASsE,CAAC,GAAG,CAAC,+CAA+C,CAAC;UACjGD,SAAS,GAAG,IAAI;UAChB;QACF;QAEA;QACA,MAAMI,YAAY,GAAGF,GAAG,CAAC,CAAC,CAAC,CAAC/B,WAAW,EAAE;QACzC,IAAI2B,aAAa,CAACO,GAAG,CAACD,YAAY,CAAC,EAAE;UACnC,IAAI,CAAC3F,mBAAmB,CAACkB,SAAS,CAAC,SAASsE,CAAC,GAAG,CAAC,eAAeC,GAAG,CAAC,CAAC,CAAC,mDAAmD,CAAC;UAC1HF,SAAS,GAAG,IAAI;UAChB;QACF;QACAF,aAAa,CAACQ,GAAG,CAACF,YAAY,CAAC;QAE/B;QACA,IAAIF,GAAG,CAAC9H,MAAM,GAAG,CAAC,EAAE;UAClB,MAAMmI,UAAU,GAAGC,IAAI,CAACC,KAAK,CAAC,CAACP,GAAG,CAAC9H,MAAM,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;UACrD,KAAK,IAAIsI,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,UAAU,EAAEG,CAAC,EAAE,EAAE;YACnC,MAAMC,UAAU,GAAG,CAAC,GAAID,CAAC,GAAG,CAAE;YAC9B,MAAME,SAAS,GAAGV,GAAG,CAACS,UAAU,CAAC;YACjC,MAAME,UAAU,GAAGX,GAAG,CAACS,UAAU,GAAG,CAAC,CAAC;YACtC,MAAMG,SAAS,GAAGZ,GAAG,CAACS,UAAU,GAAG,CAAC,CAAC;YAErC,IAAIC,SAAS,IAAIA,SAAS,CAAC3B,IAAI,EAAE,CAAC7G,MAAM,GAAG,CAAC,EAAE;cAC5C;cACA,MAAM2I,UAAU,GAAG,CAAC,MAAM,EAAE,OAAO,EAAE,UAAU,EAAE,QAAQ,EAAE,KAAK,EAAE,KAAK,EAAE,MAAM,CAAC;cAChF,IAAID,SAAS,IAAI,CAACC,UAAU,CAACrF,QAAQ,CAACoF,SAAS,CAAC3C,WAAW,EAAE,CAAC,EAAE;gBAC9D,IAAI,CAAC1D,mBAAmB,CAAC+D,WAAW,CAAC,SAASyB,CAAC,GAAG,CAAC,WAAWa,SAAS,4CAA4CC,UAAU,CAACC,IAAI,CAAC,IAAI,CAAC,EAAE,CAAC;cAC7I;cAEA;cACA,IAAIF,SAAS,IAAIA,SAAS,CAAC3C,WAAW,EAAE,KAAK,OAAO,IAAI0C,UAAU,EAAE;gBAClE,MAAMI,UAAU,GAAG,4BAA4B;gBAC/C,IAAI,CAACA,UAAU,CAACC,IAAI,CAACL,UAAU,CAAC,EAAE;kBAChC,IAAI,CAACpG,mBAAmB,CAAC+D,WAAW,CAAC,SAASyB,CAAC,GAAG,CAAC,YAAYY,UAAU,mCAAmC,CAAC;gBAC/G;cACF;YACF;UACF;QACF;MACF;MAEA,IAAI,CAACb,SAAS,EAAE;QACd;QACA,IAAI,CAACmB,WAAW,EAAE;MACpB;IACF,CAAC;IAEDxC,MAAM,CAACyC,OAAO,GAAG,MAAK;MACpB,IAAI,CAAC3G,mBAAmB,CAACkB,SAAS,CAAC,uDAAuD,CAAC;IAC7F,CAAC;IAEDgD,MAAM,CAAC0C,UAAU,CAAC,IAAI,CAAC7L,YAAY,EAAE,OAAO,CAAC;EAC/C;EAEQiJ,qBAAqBA,CAAA;IAC3B,IAAI,CAAC,IAAI,CAACjJ,YAAY,EAAE;IAExB;IACA;IACA,IAAI,CAAC2L,WAAW,EAAE;EACpB;EAEQA,WAAWA,CAAA;IACjB,IAAI,CAAC,IAAI,CAAC3L,YAAY,EAAE;MACtB,IAAI,CAACiF,mBAAmB,CAACkB,SAAS,CAAC,6BAA6B,CAAC;MACjE;IACF;IAEA;IACAQ,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAE;MACrCnE,IAAI,EAAE,IAAI,CAACzC,YAAY,CAACC,IAAI;MAC5B6L,OAAO,EAAE,IAAI,CAAC9L,YAAY,CAACE,IAAI;MAC/B6L,IAAI,EAAE,IAAI,CAAC/L,YAAY,CAAC6I;KACzB,CAAC;IAEF,IAAI,CAAC3G,UAAU,GAAG,IAAI;IAEtB,IAAI,CAAC6C,UAAU,CAACiH,SAAS,CAAC,IAAI,CAAChM,YAAY,CAAC,CAACwG,SAAS,CAAC;MACrDC,IAAI,EAAGiB,QAAa,IAAI;QACtBf,OAAO,CAACC,GAAG,CAAC,iCAAiC,EAAEc,QAAQ,CAAC;QAExD;QACA,MAAMuE,QAAQ,GAAGvE,QAAQ,EAAEwE,OAAO,IAAI,+BAA+BxE,QAAQ,CAACyE,gBAAgB,qBAAqB;QACnH,IAAI,CAAClH,mBAAmB,CAACmH,WAAW,CAACH,QAAQ,CAAC;QAE9C;QACA,IAAI,CAACjM,YAAY,GAAG,IAAI;QAExB;QACA,IAAI,CAACyH,+BAA+B,CAACC,QAAQ,CAAC;QAE9C;QACA,IAAI,CAAC/B,QAAQ,EAAE;QAEf;QACA,IAAI,CAACjB,SAAS,GAAG,MAAM;MACzB,CAAC;MACDmC,KAAK,EAAGA,KAAK,IAAI;QACfF,OAAO,CAACE,KAAK,CAAC,mBAAmB,EAAEA,KAAK,CAAC;QAEzC,IAAIoF,QAAQ,GAAG,yCAAyC;QACxD,IAAIpF,KAAK,CAACA,KAAK,EAAEqF,OAAO,EAAE;UACxBD,QAAQ,GAAGpF,KAAK,CAACA,KAAK,CAACqF,OAAO;QAChC;QAEA,IAAI,CAACjH,mBAAmB,CAACkB,SAAS,CAAC8F,QAAQ,CAAC;QAE5C,IAAI,CAAC/J,UAAU,GAAG,KAAK;MACzB;KACD,CAAC;EACJ;EAEAwE,gBAAgBA,CAAA;IACd,IAAI,CAAC,IAAI,CAAClH,UAAU,CAACiK,IAAI,EAAE,EAAE;MAC3B,IAAI,CAAC9F,iBAAiB,GAAG,IAAI,CAACO,SAAS;IACzC,CAAC,MAAM;MACL,MAAMmI,IAAI,GAAG,IAAI,CAAC7M,UAAU,CAACmJ,WAAW,EAAE;MAC1C,IAAI,CAAChF,iBAAiB,GAAG,IAAI,CAACO,SAAS,CAACyF,MAAM,CAAC7B,QAAQ,IACrDA,QAAQ,CAACrF,IAAI,EAAEkG,WAAW,EAAE,CAACzC,QAAQ,CAACmG,IAAI,CAAC,IAC3CvE,QAAQ,CAACpF,SAAS,EAAEiG,WAAW,EAAE,CAACzC,QAAQ,CAACmG,IAAI,CAAC,CACjD;IACH;EACF;EAEAzM,cAAcA,CAAA;IACZ,IAAI,CAAC8G,gBAAgB,EAAE;IACvB,IAAI,CAAC9C,WAAW,GAAG,CAAC;EACtB;EAEA0I,YAAYA,CAACpE,KAAgB;IAC3B,IAAI,CAACtE,WAAW,GAAGsE,KAAK,CAACqE,SAAS,GAAG,CAAC;IACtC,IAAI,CAACtJ,QAAQ,GAAGiF,KAAK,CAACjF,QAAQ;EAChC;EAEAE,gBAAgBA,CAAA;IACd,IAAI,CAACS,WAAW,GAAG,CAAC;EACtB;EAEAN,YAAYA,CAAA;IACV,IAAI,IAAI,CAACM,WAAW,GAAG,CAAC,EAAE;MACxB,IAAI,CAACA,WAAW,EAAE;IACpB;EACF;EAEAJ,QAAQA,CAAA;IACN,IAAI,IAAI,CAACI,WAAW,GAAG,IAAI,CAACE,aAAa,EAAE,EAAE;MAC3C,IAAI,CAACF,WAAW,EAAE;IACpB;EACF;EAEAE,aAAaA,CAAA;IACX,OAAOkH,IAAI,CAACwB,IAAI,CAAC,IAAI,CAAC7I,iBAAiB,CAACf,MAAM,GAAG,IAAI,CAACK,QAAQ,CAAC;EACjE;EAEA,IAAIQ,kBAAkBA,CAAA;IACpB,MAAMgJ,UAAU,GAAG,CAAC,IAAI,CAAC7I,WAAW,GAAG,CAAC,IAAI,IAAI,CAACX,QAAQ;IACzD,MAAMyJ,QAAQ,GAAGD,UAAU,GAAG,IAAI,CAACxJ,QAAQ;IAC3C,OAAO,IAAI,CAACU,iBAAiB,CAAC0G,KAAK,CAACoC,UAAU,EAAEC,QAAQ,CAAC;EAC3D;EAEAnK,eAAeA,CAACuF,QAAkB;IAChC,MAAM6E,SAAS,GAAG,IAAI,CAACzH,MAAM,CAAC0H,IAAI,CAACnO,4BAA4B,EAAE;MAC/DoO,IAAI,EAAE;QACJjC,YAAY,EAAE9C,QAAQ,CAACrF,IAAI;QAC3BqK,UAAU,EAAEhF,QAAQ,CAACR;;KAExB,CAAC;IAEFqF,SAAS,CAACI,WAAW,EAAE,CAACvG,SAAS,CAACgD,MAAM,IAAG;MACzC,IAAIA,MAAM,EAAE;QACV,IAAI,CAACtH,UAAU,GAAG,IAAI;QAEtB,IAAI,CAAC6C,UAAU,CAACxC,eAAe,CAACuF,QAAQ,CAACR,EAAE,CAAC,CAACd,SAAS,CAAC;UACrDC,IAAI,EAAEA,CAAA,KAAK;YACTE,OAAO,CAACC,GAAG,CAAC,sBAAsB,EAAEkB,QAAQ,CAACrF,IAAI,CAAC;YAElD,IAAI,CAACwC,mBAAmB,CAACmH,WAAW,CAAC,gCAAgC,CAAC;YAEtE;YACA,IAAI,CAACzG,QAAQ,EAAE;UACjB,CAAC;UACDkB,KAAK,EAAGA,KAAK,IAAI;YACfF,OAAO,CAACE,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;YAEnD,IAAI,CAAC5B,mBAAmB,CAACkB,SAAS,CAAC,4CAA4C,CAAC;YAEhF,IAAI,CAACjE,UAAU,GAAG,KAAK;UACzB;SACD,CAAC;MACJ;IACF,CAAC,CAAC;EACJ;EAEA5B,aAAaA,CAAA;IACX,IAAI,CAACN,YAAY,GAAG,IAAI;EAC1B;EAEA6B,eAAeA,CAAA;IACb;IACA;IACA;IACA,MAAMmL,UAAU,GAAG;;;;uGAIgF;IAEnG;IACA,MAAMC,IAAI,GAAG,IAAIC,IAAI,CAAC,CAACF,UAAU,CAAC,EAAE;MAAEnE,IAAI,EAAE;IAAwB,CAAE,CAAC;IACvE,MAAMsE,GAAG,GAAGC,MAAM,CAACC,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC;IAC5C,MAAMM,CAAC,GAAGC,QAAQ,CAACC,aAAa,CAAC,GAAG,CAAC;IACrCF,CAAC,CAACG,IAAI,GAAGP,GAAG;IACZI,CAAC,CAACI,QAAQ,GAAG,uBAAuB;IACpCJ,CAAC,CAAC5M,KAAK,EAAE;IACTyM,MAAM,CAACC,GAAG,CAACO,eAAe,CAACT,GAAG,CAAC;IAE/B;IACA,IAAI,CAAClI,mBAAmB,CAACmH,WAAW,CAAC,4FAA4F,CAAC;EACpI;;qCAnjBWtH,kBAAkB,EAAApG,EAAA,CAAAmP,iBAAA,CAAAC,EAAA,CAAA1P,kBAAA,GAAAM,EAAA,CAAAmP,iBAAA,CAAAE,EAAA,CAAA1P,oBAAA,GAAAK,EAAA,CAAAmP,iBAAA,CAAAG,EAAA,CAAA/P,mBAAA,GAAAS,EAAA,CAAAmP,iBAAA,CAAAI,EAAA,CAAA/P,SAAA,GAAAQ,EAAA,CAAAmP,iBAAA,CAAAK,EAAA,CAAArQ,MAAA;EAAA;;UAAlBiH,kBAAkB;IAAAqJ,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAxG,QAAA,WAAAyG,4BAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QChC7B9P,EAFF,CAAAE,cAAA,aAAqC,aAEjB;QAEhBF,EAAA,CAAAG,SAAA,kBAA2B;QAG3BH,EAAA,CAAAE,cAAA,cAAyB;QAcvBF,EAZA,CAAA4C,UAAA,IAAAoN,0CAAA,0BAA2D,IAAAC,yCAAA,iCAAAjQ,EAAA,CAAAuF,sBAAA,CAY/B;QA6NlCvF,EAFI,CAAAK,YAAA,EAAO,EACH,EACF;QAENL,EAAA,CAAAG,SAAA,iBAAyB;;;;QA3OJH,EAAA,CAAAmB,SAAA,GAAwB;QAAAnB,EAAxB,CAAAuD,UAAA,SAAAwM,GAAA,CAAArJ,gBAAA,CAAwB,aAAAwJ,iBAAA,CAAkB;;;mBDW3DjR,IAAI,EACJD,KAAK,EACLE,YAAY,EACZE,WAAW,EAAA+Q,EAAA,CAAAC,cAAA,EAAAD,EAAA,CAAAE,uBAAA,EAAAF,EAAA,CAAAG,oBAAA,EAAAH,EAAA,CAAAI,0BAAA,EAAAJ,EAAA,CAAAK,eAAA,EAAAL,EAAA,CAAAM,OAAA,EACX7Q,sBAAsB,EACtBP,aAAa,EAAAqR,EAAA,CAAAC,OAAA,EACbrR,gBAAgB,EAAAsR,EAAA,CAAAC,UAAA,EAChBpR,eAAe,EACfI,gBAAgB,EAChBC,eAAe;IAAAgR,MAAA;EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}