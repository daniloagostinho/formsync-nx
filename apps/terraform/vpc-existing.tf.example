# VPC - Versão para usar VPC existente
# Use este arquivo se você quiser usar uma VPC existente em vez de criar uma nova

# Data source para VPC existente
data "aws_vpc" "existing" {
  # Opção 1: Por ID da VPC (substitua pelo ID real)
  # id = "vpc-xxxxxxxxx"
  
  # Opção 2: Por filtro de tags (mais flexível)
  filter {
    name   = "tag:Name"
    values = ["default"]  # ou o nome da sua VPC
  }
  
  # Opção 3: Por filtro de CIDR (se souber o bloco)
  # filter {
  #   name   = "cidr-block"
  #   values = ["10.0.0.0/16"]
  # }
}

# Data source para subnets existentes
data "aws_subnets" "existing" {
  filter {
    name   = "vpc-id"
    values = [data.aws_vpc.existing.id]
  }
  
  # Filtrar apenas subnets públicas (com Internet Gateway)
  filter {
    name   = "tag:Type"
    values = ["Public"]
  }
}

# Data source para Internet Gateway existente
data "aws_internet_gateway" "existing" {
  filter {
    name   = "attachment.vpc-id"
    values = [data.aws_vpc.existing.id]
  }
}

# Data source para Route Table existente
data "aws_route_table" "existing" {
  filter {
    name   = "vpc-id"
    values = [data.aws_vpc.existing.id]
  }
  
  filter {
    name   = "tag:Name"
    values = ["*public*"]  # ou o nome específico da route table
  }
}

# Security Groups usando a VPC existente
resource "aws_security_group" "ecs_backend" {
  name_prefix = "${var.project_name}-ecs-backend-"
  vpc_id      = data.aws_vpc.existing.id
  description = "Security group for ECS backend service"

  ingress {
    from_port   = 8080
    to_port     = 8080
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    from_port   = 80
    to_port     = 80
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }

  tags = merge(local.common_tags, {
    Name = "${var.project_name}-ecs-backend-sg"
  })
}

resource "aws_security_group" "rds" {
  name_prefix = "${var.project_name}-rds-"
  vpc_id      = data.aws_vpc.existing.id
  description = "Security group for RDS database"

  ingress {
    from_port       = 5432
    to_port         = 5432
    protocol        = "tcp"
    security_groups = [aws_security_group.ecs_backend.id]
  }

  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }

  tags = merge(local.common_tags, {
    Name = "${var.project_name}-rds-sg"
  })
}

# Outputs para referência
output "vpc_id" {
  description = "ID of the VPC"
  value       = data.aws_vpc.existing.id
}

output "vpc_cidr_block" {
  description = "CIDR block of the VPC"
  value       = data.aws_vpc.existing.cidr_block
}

output "subnet_ids" {
  description = "IDs of the subnets"
  value       = data.aws_subnets.existing.ids
}

output "internet_gateway_id" {
  description = "ID of the Internet Gateway"
  value       = data.aws_internet_gateway.existing.id
}
