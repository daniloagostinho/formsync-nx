# Multi-stage build para produção
FROM maven:3.9.6-eclipse-temurin-21-alpine AS build

# Configurar diretório de trabalho
WORKDIR /app

# Copiar arquivos de dependências
COPY pom.xml .
COPY .mvn .mvn
COPY mvnw .

# Download das dependências (cache layer)
RUN mvn dependency:go-offline -B

# Copiar código fonte
COPY src ./src

# Build da aplicação
RUN mvn clean package -DskipTests -Dmaven.test.skip=true

# Runtime stage
FROM eclipse-temurin:21-jre-alpine AS runtime

# Instalar timezone e ferramentas necessárias
RUN apk add --no-cache tzdata curl

# Configurar timezone
ENV TZ=America/Sao_Paulo

# Criar usuário não-root
RUN addgroup -g 1001 -S appgroup && \
    adduser -u 1001 -S appuser -G appgroup

# Configurar diretório de trabalho
WORKDIR /app

# Copiar JAR da aplicação
COPY --from=build /app/target/api-0.0.1-SNAPSHOT.jar app.jar

# Criar diretórios de logs
RUN mkdir -p /app/logs && \
    chown -R appuser:appgroup /app

# Mudar para usuário não-root
USER appuser

# Configurar JVM para containers
ENV JAVA_OPTS="-XX:+UseContainerSupport -XX:MaxRAMPercentage=75.0 -XX:+UseG1GC -XX:+UseStringDeduplication"

# Expor porta
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=3 \
  CMD curl -f http://localhost:8080/actuator/health || exit 1

# Comando de inicialização
ENTRYPOINT ["sh", "-c", "java $JAVA_OPTS -jar app.jar"]

