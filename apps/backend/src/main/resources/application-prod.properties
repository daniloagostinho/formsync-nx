# Configuração para produção

# Banco de dados PostgreSQL
spring.datasource.url=${DATABASE_URL}
spring.datasource.username=${DB_USERNAME:postgres}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA para produção
spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO:validate}
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL:false}
spring.jpa.database-platform=${SPRING_JPA_DATABASE_PLATFORM:org.hibernate.dialect.PostgreSQLDialect}

# Connection Pool otimizado para produção
spring.datasource.hikari.maximum-pool-size=5
spring.datasource.hikari.minimum-idle=1
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.idle-timeout=180000
spring.datasource.hikari.max-lifetime=600000
spring.datasource.hikari.connection-test-query=SELECT 1
spring.datasource.hikari.leak-detection-threshold=30000
spring.datasource.hikari.validation-timeout=3000

# Configurações do servidor
server.port=${PORT:10000}
server.address=0.0.0.0

# Logging para produção
logging.level.root=WARN
logging.level.br.com.backend=INFO
logging.level.org.hibernate=WARN
logging.level.org.postgresql=WARN

# Reduzir exposição de PII em produção
logging.level.br.com.backend.controller=WARN

# Configurações de segurança
spring.security.basic.enabled=false

# CORS - Configuração específica para produção
cors.allowed-origins=https://formsync.com.br,https://www.formsync.com.br,https://d2e8aebnrgifge.cloudfront.net
cors.allowed-methods=GET,POST,PUT,PATCH,DELETE,OPTIONS,HEAD
cors.allowed-headers=*
cors.allow-credentials=true
cors.max-age=3600

# Stripe (configurado via variáveis de ambiente)
stripe.secret.key=${STRIPE_SECRET_KEY:}
stripe.webhook.secret=${STRIPE_WEBHOOK_SECRET:}
stripe.publishable.key=${STRIPE_PUBLISHABLE_KEY:}

# Email (configurado via variáveis de ambiente)
spring.mail.enabled=${SPRING_MAIL_ENABLED:false}
spring.mail.host=${MAIL_HOST:localhost}
spring.mail.port=${MAIL_PORT:1025}
spring.mail.username=${MAIL_USERNAME:}
spring.mail.password=${MAIL_PASSWORD:}

# Configurações para garantir que os controllers sejam carregados
spring.main.web-application-type=servlet
spring.main.allow-bean-definition-overriding=true
spring.main.allow-circular-references=true
spring.main.lazy-initialization=false

# Configurações de inicialização robustas
spring.jpa.defer-datasource-initialization=false
spring.jpa.open-in-view=false
spring.datasource.hikari.initialization-fail-timeout=60

# Health check endpoint
management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=when-authorized

# Session cleanup configuration
app.session.cleanup.enabled=true
app.session.cleanup.interval=300000
app.session.cleanup.aggressive-interval=600000

# Configurações para economizar memória
spring.jpa.properties.hibernate.jdbc.batch_size=10
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
spring.jpa.properties.hibernate.jdbc.batch_versioned_data=true
spring.jpa.properties.hibernate.cache.use_second_level_cache=false
spring.jpa.properties.hibernate.cache.use_query_cache=false

# Configurações adicionais para estabilidade
spring.jpa.properties.hibernate.connection.provider_disables_autocommit=false
spring.jpa.properties.hibernate.connection.autocommit=true
spring.jpa.properties.hibernate.connection.isolation=2
spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true
spring.jpa.properties.hibernate.temp.use_jdbc_metadata_defaults=false

# Configurações de timeout mais robustas
spring.datasource.hikari.connection-timeout=30000
spring.datasource.hikari.validation-timeout=5000
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000
